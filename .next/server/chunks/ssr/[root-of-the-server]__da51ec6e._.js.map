{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\n// Initialize the Supabase client with proper Supabase URL and key\r\nconst supabaseUrl = 'https://mticvmyfrdmciaeipfxu.supabase.co';\r\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im10aWN2bXlmcmRtY2lhZWlwZnh1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDEwODc1OTMsImV4cCI6MjA1NjY2MzU5M30.6iudxBl6js0heW1mhoSmcXegTIN_lAN2GiFeA3plSIo';\r\n\r\n// Create the Supabase client\r\nexport const supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\n// Store PostgreSQL direct connection URL for database initialization scripts\r\nexport const postgresUrl = 'postgresql://HousingMaintenance_owner:npg_fC8S4bpZLsJw@ep-weathered-meadow-a44a1v3i-pooler.us-east-1.aws.neon.tech/HousingMaintenance?sslmode=require';"],"names":[],"mappings":";;;;AAAA;;AAEA,kEAAkE;AAClE,MAAM,cAAc;AACpB,MAAM,cAAc;AAGb,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AAG3C,MAAM,cAAc","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/services/inventoryService.ts"],"sourcesContent":["import { supabase } from '../supabase';\r\nimport { Category, Item, Inventory } from '@/models/types';\r\n\r\n// Category Operations\r\nexport const getCategories = async (): Promise<Category[]> => {\r\n  const { data, error } = await supabase\r\n    .from('categories')\r\n    .select('*');\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};\r\n\r\nexport const getCategoryById = async (id: string): Promise<Category | null> => {\r\n  const { data, error } = await supabase\r\n    .from('categories')\r\n    .select('*')\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const createCategory = async (category: Omit<Category, 'id'>): Promise<Category> => {\r\n  const { data, error } = await supabase\r\n    .from('categories')\r\n    .insert([category])\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updateCategory = async (id: string, updates: Partial<Category>): Promise<Category> => {\r\n  const { data, error } = await supabase\r\n    .from('categories')\r\n    .update(updates)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const deleteCategory = async (id: string): Promise<void> => {\r\n  const { error } = await supabase\r\n    .from('categories')\r\n    .delete()\r\n    .eq('id', id);\r\n  \r\n  if (error) throw error;\r\n};\r\n\r\n// Item Operations\r\nexport const getItems = async (categoryId?: string): Promise<Item[]> => {\r\n  let query = supabase.from('items').select('*');\r\n  \r\n  if (categoryId) {\r\n    query = query.eq('category_id', categoryId);\r\n  }\r\n  \r\n  const { data, error } = await query;\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};\r\n\r\nexport const getItemById = async (id: string): Promise<Item | null> => {\r\n  const { data, error } = await supabase\r\n    .from('items')\r\n    .select('*')\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const createItem = async (item: Omit<Item, 'id'>): Promise<Item> => {\r\n  const { data, error } = await supabase\r\n    .from('items')\r\n    .insert([item])\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updateItem = async (id: string, updates: Partial<Item>): Promise<Item> => {\r\n  const { data, error } = await supabase\r\n    .from('items')\r\n    .update(updates)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const deleteItem = async (id: string): Promise<void> => {\r\n  const { error } = await supabase\r\n    .from('items')\r\n    .delete()\r\n    .eq('id', id);\r\n  \r\n  if (error) throw error;\r\n};\r\n\r\n// Inventory Operations\r\nexport const getInventory = async (itemId?: string): Promise<Inventory[]> => {\r\n  let query = supabase\r\n    .from('inventory')\r\n    .select(`\r\n      *,\r\n      items:item_id (\r\n        id,\r\n        name,\r\n        category_id,\r\n        unit\r\n      )\r\n    `);\r\n  \r\n  if (itemId) {\r\n    query = query.eq('item_id', itemId);\r\n  }\r\n  \r\n  const { data, error } = await query;\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};\r\n\r\nexport const getInventoryItemById = async (id: string): Promise<Inventory | null> => {\r\n  const { data, error } = await supabase\r\n    .from('inventory')\r\n    .select(`\r\n      *,\r\n      items:item_id (\r\n        id,\r\n        name,\r\n        category_id,\r\n        unit\r\n      )\r\n    `)\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updateInventoryQuantity = async (\r\n  itemId: string, \r\n  quantityChange: number\r\n): Promise<Inventory> => {\r\n  // First, get the current inventory item\r\n  const { data: currentInventory, error: fetchError } = await supabase\r\n    .from('inventory')\r\n    .select('*')\r\n    .eq('item_id', itemId)\r\n    .single();\r\n  \r\n  if (fetchError && fetchError.code !== 'PGRST116') {\r\n    // PGRST116 is the error code for \"no rows returned\"\r\n    throw fetchError;\r\n  }\r\n  \r\n  // If inventory item exists, update it\r\n  if (currentInventory) {\r\n    const newQuantity = currentInventory.quantity + quantityChange;\r\n    \r\n    if (newQuantity < 0) {\r\n      throw new Error('Insufficient inventory quantity');\r\n    }\r\n    \r\n    const { data, error } = await supabase\r\n      .from('inventory')\r\n      .update({\r\n        quantity: newQuantity,\r\n        last_updated: new Date().toISOString()\r\n      })\r\n      .eq('id', currentInventory.id)\r\n      .select()\r\n      .single();\r\n    \r\n    if (error) throw error;\r\n    return data;\r\n  } \r\n  // If inventory item does not exist, create it (only if adding quantity)\r\n  else if (quantityChange > 0) {\r\n    const { data, error } = await supabase\r\n      .from('inventory')\r\n      .insert([{\r\n        item_id: itemId,\r\n        quantity: quantityChange,\r\n        last_updated: new Date().toISOString()\r\n      }])\r\n      .select()\r\n      .single();\r\n    \r\n    if (error) throw error;\r\n    return data;\r\n  } else {\r\n    throw new Error('Cannot reduce quantity of non-existent inventory item');\r\n  }\r\n};\r\n\r\nexport const updateInventoryItem = async (\r\n  id: string, \r\n  updates: Partial<Inventory>\r\n): Promise<Inventory> => {\r\n  const updateData = {\r\n    ...updates,\r\n    last_updated: new Date().toISOString()\r\n  };\r\n  \r\n  const { data, error } = await supabase\r\n    .from('inventory')\r\n    .update(updateData)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const getLowStockItems = async (threshold: number = 10): Promise<Inventory[]> => {\r\n  const { data, error } = await supabase\r\n    .from('inventory')\r\n    .select(`\r\n      *,\r\n      items:item_id (\r\n        id,\r\n        name,\r\n        category_id,\r\n        unit\r\n      )\r\n    `)\r\n    .lte('quantity', threshold);\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/app/inventory/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { getInventory, getCategories } from '@/lib/services/inventoryService';\r\nimport { Inventory, Category, Item } from '@/models/types';\r\n\r\n// Extended type for inventory display with joined item info\r\ntype InventoryWithItem = Inventory & {\r\n  items: Item;\r\n};\r\n\r\nexport default function InventoryPage() {\r\n  const [inventory, setInventory] = useState<InventoryWithItem[]>([]);\r\n  const [categories, setCategories] = useState<Category[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Filter state\r\n  const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n  const [searchTerm, setSearchTerm] = useState<string>('');\r\n  const [showLowStock, setShowLowStock] = useState<boolean>(false);\r\n  \r\n  // Load inventory and categories\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      try {\r\n        const [inventoryData, categoriesData] = await Promise.all([\r\n          getInventory(),\r\n          getCategories()\r\n        ]);\r\n        \r\n        setInventory(inventoryData as InventoryWithItem[]);\r\n        setCategories(categoriesData);\r\n      } catch (err) {\r\n        console.error('Error fetching inventory data:', err);\r\n        setError('حدث خطأ أثناء تحميل بيانات المخزون. الرجاء المحاولة مرة أخرى.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Filter inventory based on selected filters\r\n  const filteredInventory = inventory.filter(item => {\r\n    const matchesCategory = selectedCategory ? item.items.category_id === selectedCategory : true;\r\n    const matchesSearch = searchTerm \r\n      ? item.items.name.toLowerCase().includes(searchTerm.toLowerCase()) \r\n      : true;\r\n    const matchesLowStock = showLowStock ? item.quantity <= 5 : true;\r\n    \r\n    return matchesCategory && matchesSearch && matchesLowStock;\r\n  });\r\n\r\n  // Group by category for display\r\n  const inventoryByCategory = filteredInventory.reduce((acc, item) => {\r\n    const categoryId = item.items.category_id;\r\n    if (!acc[categoryId]) {\r\n      acc[categoryId] = [];\r\n    }\r\n    acc[categoryId].push(item);\r\n    return acc;\r\n  }, {} as Record<string, InventoryWithItem[]>);\r\n\r\n  return (\r\n    <div className=\"container mx-auto\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-bold\">المخزون</h1>\r\n        <div className=\"flex gap-3\">\r\n          <Link href=\"/inventory/categories\" className=\"btn btn-secondary\">\r\n            إدارة الأصناف\r\n          </Link>\r\n          <Link href=\"/inventory/add\" className=\"btn btn-primary\">\r\n            إضافة مخزون\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"bg-red-100 border-r-4 border-red-500 text-red-700 p-4 mb-6 rounded-md\">\r\n          <p>{error}</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Filters */}\r\n      <div className=\"bg-white shadow rounded-lg p-6 mb-6\">\r\n        <h2 className=\"text-lg font-semibold mb-4\">تصفية المخزون</h2>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          <div>\r\n            <label className=\"block mb-2 text-sm font-medium\">البحث بالاسم</label>\r\n            <input\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              placeholder=\"ادخل اسم الصنف...\"\r\n              className=\"input w-full\"\r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block mb-2 text-sm font-medium\">التصنيف</label>\r\n            <select\r\n              value={selectedCategory}\r\n              onChange={(e) => setSelectedCategory(e.target.value)}\r\n              className=\"select w-full\"\r\n            >\r\n              <option value=\"\">جميع التصنيفات</option>\r\n              {categories.map(category => (\r\n                <option key={category.id} value={category.id}>\r\n                  {category.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          \r\n          <div className=\"flex items-end\">\r\n            <label className=\"flex items-center\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={showLowStock}\r\n                onChange={(e) => setShowLowStock(e.target.checked)}\r\n                className=\"w-5 h-5 ml-2\"\r\n              />\r\n              <span>عرض المخزون المنخفض فقط (أقل من 5)</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Inventory List */}\r\n      {loading ? (\r\n        <div className=\"text-center py-10\">\r\n          <p className=\"text-lg\">جاري تحميل البيانات...</p>\r\n        </div>\r\n      ) : filteredInventory.length === 0 ? (\r\n        <div className=\"bg-white shadow-md rounded-lg p-6 text-center\">\r\n          <p className=\"text-lg text-gray-500\">لا توجد أصناف مطابقة للمعايير المحددة.</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"space-y-6\">\r\n          {Object.keys(inventoryByCategory).map(categoryId => {\r\n            const categoryName = categories.find(c => c.id === categoryId)?.name || 'تصنيف غير معروف';\r\n            const items = inventoryByCategory[categoryId];\r\n            \r\n            return (\r\n              <div key={categoryId} className=\"bg-white shadow-md rounded-lg overflow-hidden\">\r\n                <div className=\"bg-gray-50 p-4 border-b\">\r\n                  <h3 className=\"text-lg font-semibold\">{categoryName}</h3>\r\n                </div>\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"min-w-full divide-y divide-gray-200\">\r\n                    <thead className=\"bg-gray-50\">\r\n                      <tr>\r\n                        <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          الصنف\r\n                        </th>\r\n                        <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          الكمية المتوفرة\r\n                        </th>\r\n                        <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          الوحدة\r\n                        </th>\r\n                        <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          سعر الوحدة\r\n                        </th>\r\n                        <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          آخر تحديث\r\n                        </th>\r\n                        <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          إجراءات\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                      {items.map((item) => (\r\n                        <tr key={item.id} className={`hover:bg-gray-50 ${item.quantity <= 5 ? 'bg-red-50' : ''}`}>\r\n                          <td className=\"px-4 py-4\">\r\n                            {item.items.name}\r\n                          </td>\r\n                          <td className=\"px-4 py-4\">\r\n                            <span className={item.quantity <= 5 ? 'font-bold text-red-600' : ''}>\r\n                              {item.quantity}\r\n                            </span>\r\n                          </td>\r\n                          <td className=\"px-4 py-4\">\r\n                            {item.items.unit}\r\n                          </td>\r\n                          <td className=\"px-4 py-4\">\r\n                            {item.unit_price ? `${item.unit_price} ريال` : 'غير محدد'}\r\n                          </td>\r\n                          <td className=\"px-4 py-4\" dir=\"ltr\">\r\n                            {new Date(item.last_updated).toLocaleDateString('ar-SA')}\r\n                          </td>\r\n                          <td className=\"px-4 py-4 text-sm\">\r\n                            <Link \r\n                              href={`/inventory/adjust/${item.id}`}\r\n                              className=\"text-primary hover:underline ml-2\"\r\n                            >\r\n                              تعديل الكمية\r\n                            </Link>\r\n                            <Link \r\n                              href={`/inventory/history/${item.items.id}`}\r\n                              className=\"text-secondary hover:underline\"\r\n                            >\r\n                              سجل الحركة\r\n                            </Link>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n      \r\n      {/* Summary Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mt-8\">\r\n        <div className=\"card bg-white\">\r\n          <h3 className=\"text-lg font-medium text-gray-700\">إجمالي الأصناف</h3>\r\n          <p className=\"mt-2 text-3xl font-bold\">{inventory.length}</p>\r\n        </div>\r\n        \r\n        <div className=\"card bg-white\">\r\n          <h3 className=\"text-lg font-medium text-gray-700\">الأصناف منخفضة المخزون</h3>\r\n          <p className=\"mt-2 text-3xl font-bold\">\r\n            {inventory.filter(item => item.quantity <= 5).length}\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"card bg-white\">\r\n          <h3 className=\"text-lg font-medium text-gray-700\">التصنيفات</h3>\r\n          <p className=\"mt-2 text-3xl font-bold\">{categories.length}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}