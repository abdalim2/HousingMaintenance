{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/neondb.ts"],"sourcesContent":["'use server';\r\n\r\nimport { Pool } from 'pg';\r\n\r\n// استخدام عنوان الاتصال المباشر بقاعدة بيانات Neon\r\nconst connectionString = 'postgresql://HousingMaintenance_owner:npg_fC8S4bpZLsJw@ep-weathered-meadow-a44a1v3i-pooler.us-east-1.aws.neon.tech/HousingMaintenance?sslmode=require';\r\n\r\n// إنشاء تجمع اتصالات لقاعدة البيانات\r\nexport const pool = new Pool({\r\n  connectionString,\r\n  max: 20, // زيادة عدد الاتصالات المتزامنة\r\n  idleTimeoutMillis: 30000, // وقت انتظار أطول\r\n  connectionTimeoutMillis: 5000, // مهلة اتصال أقصر\r\n});\r\n\r\n// وظيفة مساعدة لتنفيذ استعلامات قاعدة البيانات مع إعادة المحاولة\r\nexport async function query(text: string, params?: any[], retries = 3) {\r\n  let lastError;\r\n  for (let attempt = 0; attempt < retries; attempt++) {\r\n    const client = await pool.connect().catch(err => {\r\n      console.error(`فشل الاتصال بقاعدة البيانات (محاولة ${attempt + 1}/${retries}):`, err.message);\r\n      return null;\r\n    });\r\n    \r\n    if (!client) {\r\n      lastError = new Error('تعذر إنشاء اتصال بقاعدة البيانات');\r\n      continue;\r\n    }\r\n    \r\n    try {\r\n      const result = await client.query(text, params);\r\n      return result;\r\n    } catch (error: any) {\r\n      lastError = error;\r\n      console.error(`فشل الاستعلام (محاولة ${attempt + 1}/${retries}):`, error.message);\r\n    } finally {\r\n      client.release();\r\n    }\r\n  }\r\n  \r\n  // إذا وصلنا إلى هنا، فقد فشلت جميع المحاولات\r\n  throw lastError || new Error('فشل الاستعلام بعد عدة محاولات');\r\n}\r\n\r\n// التحقق من اتصال قاعدة البيانات\r\nexport async function testConnection() {\r\n  try {\r\n    const result = await query('SELECT NOW()', [], 1);\r\n    console.log('اتصال ناجح بقاعدة بيانات Neon:', result.rows[0]);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('فشل الاتصال بقاعدة بيانات Neon:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// وظيفة مساعدة للحصول على بيانات آمنة\r\nexport async function safeQuery(text: string, params?: any[], defaultValue: any = []) {\r\n  try {\r\n    const result = await query(text, params);\r\n    return result.rows || defaultValue;\r\n  } catch (error) {\r\n    console.error('فشل الاستعلام، استخدام القيمة الافتراضية:', error);\r\n    return defaultValue;\r\n  }\r\n}"],"names":[],"mappings":";;;;;;IAgBsB,QAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/neondb.ts"],"sourcesContent":["'use server';\r\n\r\nimport { Pool } from 'pg';\r\n\r\n// استخدام عنوان الاتصال المباشر بقاعدة بيانات Neon\r\nconst connectionString = 'postgresql://HousingMaintenance_owner:npg_fC8S4bpZLsJw@ep-weathered-meadow-a44a1v3i-pooler.us-east-1.aws.neon.tech/HousingMaintenance?sslmode=require';\r\n\r\n// إنشاء تجمع اتصالات لقاعدة البيانات\r\nexport const pool = new Pool({\r\n  connectionString,\r\n  max: 20, // زيادة عدد الاتصالات المتزامنة\r\n  idleTimeoutMillis: 30000, // وقت انتظار أطول\r\n  connectionTimeoutMillis: 5000, // مهلة اتصال أقصر\r\n});\r\n\r\n// وظيفة مساعدة لتنفيذ استعلامات قاعدة البيانات مع إعادة المحاولة\r\nexport async function query(text: string, params?: any[], retries = 3) {\r\n  let lastError;\r\n  for (let attempt = 0; attempt < retries; attempt++) {\r\n    const client = await pool.connect().catch(err => {\r\n      console.error(`فشل الاتصال بقاعدة البيانات (محاولة ${attempt + 1}/${retries}):`, err.message);\r\n      return null;\r\n    });\r\n    \r\n    if (!client) {\r\n      lastError = new Error('تعذر إنشاء اتصال بقاعدة البيانات');\r\n      continue;\r\n    }\r\n    \r\n    try {\r\n      const result = await client.query(text, params);\r\n      return result;\r\n    } catch (error: any) {\r\n      lastError = error;\r\n      console.error(`فشل الاستعلام (محاولة ${attempt + 1}/${retries}):`, error.message);\r\n    } finally {\r\n      client.release();\r\n    }\r\n  }\r\n  \r\n  // إذا وصلنا إلى هنا، فقد فشلت جميع المحاولات\r\n  throw lastError || new Error('فشل الاستعلام بعد عدة محاولات');\r\n}\r\n\r\n// التحقق من اتصال قاعدة البيانات\r\nexport async function testConnection() {\r\n  try {\r\n    const result = await query('SELECT NOW()', [], 1);\r\n    console.log('اتصال ناجح بقاعدة بيانات Neon:', result.rows[0]);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('فشل الاتصال بقاعدة بيانات Neon:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// وظيفة مساعدة للحصول على بيانات آمنة\r\nexport async function safeQuery(text: string, params?: any[], defaultValue: any = []) {\r\n  try {\r\n    const result = await query(text, params);\r\n    return result.rows || defaultValue;\r\n  } catch (error) {\r\n    console.error('فشل الاستعلام، استخدام القيمة الافتراضية:', error);\r\n    return defaultValue;\r\n  }\r\n}"],"names":[],"mappings":";;;;;;IAyDsB,YAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/services/inventoryService.ts"],"sourcesContent":["import { query, safeQuery } from '../neondb';\r\nimport { Category, Item, Inventory } from '@/models/types';\r\n\r\n// Category Operations\r\nexport const getCategories = async (): Promise<Category[]> => {\r\n  try {\r\n    return await safeQuery('SELECT * FROM categories', [], []);\r\n  } catch (err) {\r\n    console.error('Error in getCategories:', err);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getCategoryById = async (id: string): Promise<Category | null> => {\r\n  try {\r\n    const result = await query('SELECT * FROM categories WHERE id = $1', [id]);\r\n    return result.rows[0] || null;\r\n  } catch (err) {\r\n    console.error('Error in getCategoryById:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const createCategory = async (category: Omit<Category, 'id'>): Promise<Category> => {\r\n  try {\r\n    const fields = Object.keys(category).join(', ');\r\n    const placeholders = Object.keys(category).map((_, i) => `$${i + 1}`).join(', ');\r\n    const values = Object.values(category);\r\n    \r\n    const sql = `\r\n      INSERT INTO categories (${fields}) \r\n      VALUES (${placeholders})\r\n      RETURNING *\r\n    `;\r\n    \r\n    const result = await query(sql, values);\r\n    return result.rows[0];\r\n  } catch (err) {\r\n    console.error('Error in createCategory:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updateCategory = async (id: string, updates: Partial<Category>): Promise<Category> => {\r\n  try {\r\n    const fields = Object.keys(updates);\r\n    const setClause = fields.map((field, i) => `${field} = $${i + 1}`).join(', ');\r\n    const values = [...Object.values(updates), id];\r\n    \r\n    const sql = `\r\n      UPDATE categories \r\n      SET ${setClause} \r\n      WHERE id = $${fields.length + 1}\r\n      RETURNING *\r\n    `;\r\n    \r\n    const result = await query(sql, values);\r\n    return result.rows[0];\r\n  } catch (err) {\r\n    console.error('Error in updateCategory:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const deleteCategory = async (id: string): Promise<void> => {\r\n  try {\r\n    await query('DELETE FROM categories WHERE id = $1', [id]);\r\n  } catch (err) {\r\n    console.error('Error in deleteCategory:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\n// Item Operations\r\nexport const getItems = async (categoryId?: string): Promise<Item[]> => {\r\n  try {\r\n    let sql = 'SELECT * FROM items';\r\n    const params: any[] = [];\r\n    \r\n    if (categoryId) {\r\n      params.push(categoryId);\r\n      sql += ' WHERE category_id = $1';\r\n    }\r\n    \r\n    const result = await query(sql, params);\r\n    return result.rows || [];\r\n  } catch (err) {\r\n    console.error('Error in getItems:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getItemById = async (id: string): Promise<Item | null> => {\r\n  try {\r\n    const result = await query('SELECT * FROM items WHERE id = $1', [id]);\r\n    return result.rows[0] || null;\r\n  } catch (err) {\r\n    console.error('Error in getItemById:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const createItem = async (item: Omit<Item, 'id'>): Promise<Item> => {\r\n  try {\r\n    const fields = Object.keys(item).join(', ');\r\n    const placeholders = Object.keys(item).map((_, i) => `$${i + 1}`).join(', ');\r\n    const values = Object.values(item);\r\n    \r\n    const sql = `\r\n      INSERT INTO items (${fields}) \r\n      VALUES (${placeholders})\r\n      RETURNING *\r\n    `;\r\n    \r\n    const result = await query(sql, values);\r\n    return result.rows[0];\r\n  } catch (err) {\r\n    console.error('Error in createItem:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updateItem = async (id: string, updates: Partial<Item>): Promise<Item> => {\r\n  try {\r\n    const fields = Object.keys(updates);\r\n    const setClause = fields.map((field, i) => `${field} = $${i + 1}`).join(', ');\r\n    const values = [...Object.values(updates), id];\r\n    \r\n    const sql = `\r\n      UPDATE items \r\n      SET ${setClause} \r\n      WHERE id = $${fields.length + 1}\r\n      RETURNING *\r\n    `;\r\n    \r\n    const result = await query(sql, values);\r\n    return result.rows[0];\r\n  } catch (err) {\r\n    console.error('Error in updateItem:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const deleteItem = async (id: string): Promise<void> => {\r\n  try {\r\n    await query('DELETE FROM items WHERE id = $1', [id]);\r\n  } catch (err) {\r\n    console.error('Error in deleteItem:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\n// Inventory Operations\r\nexport const getInventory = async (itemId?: string): Promise<Inventory[]> => {\r\n  try {\r\n    let sql = `\r\n      SELECT i.*, \r\n             it.id as item_id, \r\n             it.name as item_name, \r\n             it.category_id, \r\n             it.unit\r\n      FROM inventory i\r\n      LEFT JOIN items it ON i.item_id = it.id\r\n    `;\r\n    \r\n    const params: any[] = [];\r\n    if (itemId) {\r\n      params.push(itemId);\r\n      sql += ' WHERE i.item_id = $1';\r\n    }\r\n    \r\n    const rows = await safeQuery(sql, params, []);\r\n    \r\n    // Format the result to match the expected structure\r\n    return rows.map((row: {\r\n      id: string;\r\n      item_id: string;\r\n      item_name: string;\r\n      category_id: string;\r\n      unit: string;\r\n      quantity: number;\r\n      last_updated: string;\r\n    }) => ({\r\n      ...row,\r\n      items: {\r\n      id: row.item_id,\r\n      name: row.item_name,\r\n      category_id: row.category_id,\r\n      unit: row.unit\r\n      }\r\n    }));\r\n  } catch (err) {\r\n    console.error('Error in getInventory:', err);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getInventoryItemById = async (id: string): Promise<Inventory | null> => {\r\n  try {\r\n    const sql = `\r\n      SELECT i.*, \r\n             it.id as item_id, \r\n             it.name as item_name, \r\n             it.category_id, \r\n             it.unit\r\n      FROM inventory i\r\n      LEFT JOIN items it ON i.item_id = it.id\r\n      WHERE i.id = $1\r\n    `;\r\n    \r\n    const result = await query(sql, [id]);\r\n    \r\n    if (result.rows.length === 0) {\r\n      return null;\r\n    }\r\n    \r\n    // Format the result to match the expected structure\r\n    const row = result.rows[0];\r\n    return {\r\n      ...row,\r\n      items: {\r\n        id: row.item_id,\r\n        name: row.item_name,\r\n        category_id: row.category_id,\r\n        unit: row.unit\r\n      }\r\n    };\r\n  } catch (err) {\r\n    console.error('Error in getInventoryItemById:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updateInventoryQuantity = async (\r\n  itemId: string, \r\n  quantityChange: number\r\n): Promise<Inventory> => {\r\n  try {\r\n    // First, get the current inventory item\r\n    const currentInventoryResult = await query(\r\n      'SELECT * FROM inventory WHERE item_id = $1',\r\n      [itemId]\r\n    );\r\n    \r\n    const currentInventory = currentInventoryResult.rows[0];\r\n    \r\n    // If inventory item exists, update it\r\n    if (currentInventory) {\r\n      const newQuantity = currentInventory.quantity + quantityChange;\r\n      \r\n      if (newQuantity < 0) {\r\n        throw new Error('Insufficient inventory quantity');\r\n      }\r\n      \r\n      const result = await query(\r\n        'UPDATE inventory SET quantity = $1, last_updated = $2 WHERE id = $3 RETURNING *',\r\n        [newQuantity, new Date().toISOString(), currentInventory.id]\r\n      );\r\n      \r\n      return result.rows[0];\r\n    } \r\n    // If inventory item does not exist, create it (only if adding quantity)\r\n    else if (quantityChange > 0) {\r\n      const result = await query(\r\n        'INSERT INTO inventory (item_id, quantity, last_updated) VALUES ($1, $2, $3) RETURNING *',\r\n        [itemId, quantityChange, new Date().toISOString()]\r\n      );\r\n      \r\n      return result.rows[0];\r\n    } else {\r\n      throw new Error('Cannot reduce quantity of non-existent inventory item');\r\n    }\r\n  } catch (err) {\r\n    console.error('Error in updateInventoryQuantity:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updateInventoryItem = async (\r\n  id: string, \r\n  updates: Partial<Inventory>\r\n): Promise<Inventory> => {\r\n  try {\r\n    const updateData = {\r\n      ...updates,\r\n      last_updated: new Date().toISOString()\r\n    };\r\n    \r\n    const fields = Object.keys(updateData);\r\n    const setClause = fields.map((field, i) => `${field} = $${i + 1}`).join(', ');\r\n    const values = [...Object.values(updateData), id];\r\n    \r\n    const result = await query(\r\n      `UPDATE inventory SET ${setClause} WHERE id = $${fields.length + 1} RETURNING *`,\r\n      values\r\n    );\r\n    \r\n    return result.rows[0];\r\n  } catch (err) {\r\n    console.error('Error in updateInventoryItem:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getLowStockItems = async (threshold: number = 10): Promise<{ id: string; item_id: string; quantity: number; last_updated: string; name: string; category: string; unit: string }[]> => {\r\n  try {\r\n    const sql = `\r\n      SELECT i.*, \r\n             it.id as item_id, \r\n             it.name, \r\n             it.category_id, \r\n             it.unit,\r\n             c.name as category\r\n      FROM inventory i\r\n      LEFT JOIN items it ON i.item_id = it.id\r\n      LEFT JOIN categories c ON it.category_id = c.id\r\n      WHERE i.quantity <= $1\r\n    `;\r\n    \r\n    const rows = await safeQuery(sql, [threshold], []);\r\n    \r\n    // Format the result to match the expected structure\r\n    return rows.map((row: { id: string; item_id: string; quantity: number; last_updated: string; name: string; category: string; unit: string }) => ({\r\n      id: row.id,\r\n      item_id: row.item_id,\r\n      quantity: row.quantity,\r\n      last_updated: row.last_updated,\r\n      name: row.name,\r\n      category: row.category,\r\n      unit: row.unit\r\n    }));\r\n  } catch (err) {\r\n    console.error('Error in getLowStockItems:', err);\r\n    return [];\r\n  }\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/app/inventory/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { getInventory, getCategories } from '@/lib/services/inventoryService';\r\nimport { Inventory, Category, Item } from '@/models/types';\r\n\r\n// Extended type for inventory display with joined item info\r\ntype InventoryWithItem = Inventory & {\r\n  items: Item;\r\n};\r\n\r\nexport default function InventoryPage() {\r\n  const [inventory, setInventory] = useState<InventoryWithItem[]>([]);\r\n  const [categories, setCategories] = useState<Category[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Filter state\r\n  const [selectedCategory, setSelectedCategory] = useState<string>('');\r\n  const [searchTerm, setSearchTerm] = useState<string>('');\r\n  const [showLowStock, setShowLowStock] = useState<boolean>(false);\r\n  \r\n  // Load inventory and categories\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      try {\r\n        const [inventoryData, categoriesData] = await Promise.all([\r\n          getInventory(),\r\n          getCategories()\r\n        ]);\r\n        \r\n        setInventory(inventoryData as InventoryWithItem[]);\r\n        setCategories(categoriesData);\r\n      } catch (err) {\r\n        console.error('Error fetching inventory data:', err);\r\n        setError('حدث خطأ أثناء تحميل بيانات المخزون. الرجاء المحاولة مرة أخرى.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Filter inventory based on selected filters\r\n  const filteredInventory = inventory.filter(item => {\r\n    const matchesCategory = selectedCategory ? item.items.category_id === selectedCategory : true;\r\n    const matchesSearch = searchTerm \r\n      ? item.items.name.toLowerCase().includes(searchTerm.toLowerCase()) \r\n      : true;\r\n    const matchesLowStock = showLowStock ? item.quantity <= 5 : true;\r\n    \r\n    return matchesCategory && matchesSearch && matchesLowStock;\r\n  });\r\n\r\n  // Group by category for display\r\n  const inventoryByCategory = filteredInventory.reduce((acc, item) => {\r\n    const categoryId = item.items.category_id;\r\n    if (!acc[categoryId]) {\r\n      acc[categoryId] = [];\r\n    }\r\n    acc[categoryId].push(item);\r\n    return acc;\r\n  }, {} as Record<string, InventoryWithItem[]>);\r\n\r\n  return (\r\n    <div className=\"container mx-auto\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-bold\">المخزون</h1>\r\n        <div className=\"flex gap-3\">\r\n          <Link href=\"/inventory/categories\" className=\"btn btn-secondary\">\r\n            إدارة الأصناف\r\n          </Link>\r\n          <Link href=\"/inventory/add\" className=\"btn btn-primary\">\r\n            إضافة مخزون\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"bg-red-100 border-r-4 border-red-500 text-red-700 p-4 mb-6 rounded-md\">\r\n          <p>{error}</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Filters */}\r\n      <div className=\"bg-white shadow rounded-lg p-6 mb-6\">\r\n        <h2 className=\"text-lg font-semibold mb-4\">تصفية المخزون</h2>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          <div>\r\n            <label className=\"block mb-2 text-sm font-medium\">البحث بالاسم</label>\r\n            <input\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              placeholder=\"ادخل اسم الصنف...\"\r\n              className=\"input w-full\"\r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block mb-2 text-sm font-medium\">التصنيف</label>\r\n            <select\r\n              value={selectedCategory}\r\n              onChange={(e) => setSelectedCategory(e.target.value)}\r\n              className=\"select w-full\"\r\n            >\r\n              <option value=\"\">جميع التصنيفات</option>\r\n              {categories.map(category => (\r\n                <option key={category.id} value={category.id}>\r\n                  {category.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          \r\n          <div className=\"flex items-end\">\r\n            <label className=\"flex items-center\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={showLowStock}\r\n                onChange={(e) => setShowLowStock(e.target.checked)}\r\n                className=\"w-5 h-5 ml-2\"\r\n              />\r\n              <span>عرض المخزون المنخفض فقط (أقل من 5)</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Inventory List */}\r\n      {loading ? (\r\n        <div className=\"text-center py-10\">\r\n          <p className=\"text-lg\">جاري تحميل البيانات...</p>\r\n        </div>\r\n      ) : filteredInventory.length === 0 ? (\r\n        <div className=\"bg-white shadow-md rounded-lg p-6 text-center\">\r\n          <p className=\"text-lg text-gray-500\">لا توجد أصناف مطابقة للمعايير المحددة.</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"space-y-6\">\r\n          {Object.keys(inventoryByCategory).map(categoryId => {\r\n            const categoryName = categories.find(c => c.id === categoryId)?.name || 'تصنيف غير معروف';\r\n            const items = inventoryByCategory[categoryId];\r\n            \r\n            return (\r\n              <div key={categoryId} className=\"bg-white shadow-md rounded-lg overflow-hidden\">\r\n                <div className=\"bg-gray-50 p-4 border-b\">\r\n                  <h3 className=\"text-lg font-semibold\">{categoryName}</h3>\r\n                </div>\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"min-w-full divide-y divide-gray-200\">\r\n                    <thead className=\"bg-gray-50\">\r\n                      <tr>\r\n                        <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          الصنف\r\n                        </th>\r\n                        <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          الكمية المتوفرة\r\n                        </th>\r\n                        <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          الوحدة\r\n                        </th>\r\n                        <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          سعر الوحدة\r\n                        </th>\r\n                        <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          آخر تحديث\r\n                        </th>\r\n                        <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          إجراءات\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                      {items.map((item) => (\r\n                        <tr key={item.id} className={`hover:bg-gray-50 ${item.quantity <= 5 ? 'bg-red-50' : ''}`}>\r\n                          <td className=\"px-4 py-4\">\r\n                            {item.items.name}\r\n                          </td>\r\n                          <td className=\"px-4 py-4\">\r\n                            <span className={item.quantity <= 5 ? 'font-bold text-red-600' : ''}>\r\n                              {item.quantity}\r\n                            </span>\r\n                          </td>\r\n                          <td className=\"px-4 py-4\">\r\n                            {item.items.unit}\r\n                          </td>\r\n                          <td className=\"px-4 py-4\">\r\n                            {item.unit_price ? `${item.unit_price} ريال` : 'غير محدد'}\r\n                          </td>\r\n                          <td className=\"px-4 py-4\" dir=\"ltr\">\r\n                            {new Date(item.last_updated).toLocaleDateString('ar-SA')}\r\n                          </td>\r\n                          <td className=\"px-4 py-4 text-sm\">\r\n                            <Link \r\n                              href={`/inventory/adjust/${item.id}`}\r\n                              className=\"text-primary hover:underline ml-2\"\r\n                            >\r\n                              تعديل الكمية\r\n                            </Link>\r\n                            <Link \r\n                              href={`/inventory/history/${item.items.id}`}\r\n                              className=\"text-secondary hover:underline\"\r\n                            >\r\n                              سجل الحركة\r\n                            </Link>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n      \r\n      {/* Summary Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mt-8\">\r\n        <div className=\"card bg-white\">\r\n          <h3 className=\"text-lg font-medium text-gray-700\">إجمالي الأصناف</h3>\r\n          <p className=\"mt-2 text-3xl font-bold\">{inventory.length}</p>\r\n        </div>\r\n        \r\n        <div className=\"card bg-white\">\r\n          <h3 className=\"text-lg font-medium text-gray-700\">الأصناف منخفضة المخزون</h3>\r\n          <p className=\"mt-2 text-3xl font-bold\">\r\n            {inventory.filter(item => item.quantity <= 5).length}\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"card bg-white\">\r\n          <h3 className=\"text-lg font-medium text-gray-700\">التصنيفات</h3>\r\n          <p className=\"mt-2 text-3xl font-bold\">{categories.length}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 928, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/node_modules/next/src/build/webpack/loaders/next-flight-loader/action-client-wrapper.ts"],"sourcesContent":["// This file must be bundled in the app's client layer, it shouldn't be directly\n// imported by the server.\n\nexport { callServer } from 'next/dist/client/app-call-server'\nexport { findSourceMapURL } from 'next/dist/client/app-find-source-map-url'\n\n// A noop wrapper to let the Flight client create the server reference.\n// See also: https://github.com/facebook/react/pull/26632\n// Since we're using the Edge build of Flight client for SSR [1], here we need to\n// also use the same Edge build to create the reference. For the client bundle,\n// we use the default and let Webpack to resolve it to the correct version.\n// 1: https://github.com/vercel/next.js/blob/16eb80b0b0be13f04a6407943664b5efd8f3d7d0/packages/next/src/server/app-render/use-flight-response.tsx#L24-L26\nexport const createServerReference = (\n  (!!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')) as typeof import('react-server-dom-webpack/client')\n).createServerReference\n"],"names":["callServer","createServerReference","findSourceMapURL","process","env","NEXT_RUNTIME","require"],"mappings":"AAAA,gFAAgF;AAChF,0BAA0B;;;;;;;;;;;;;;;;;IAEjBA,UAAU,EAAA;eAAVA,eAAAA,UAAU;;IASNC,qBAAqB,EAAA;eAArBA;;IARJC,gBAAgB,EAAA;eAAhBA,qBAAAA,gBAAgB;;;+BADE;qCACM;AAQ1B,MAAMD,wBACV,CAAA,CAAC,CAACE,QAAQC,GAAG,CAACC,YAAY,GAEvBC,QAAQ,0CAERA,QAAQ,8JAAiC,EAC7CL,qBAAqB","ignoreList":[0],"debugId":null}}]
}