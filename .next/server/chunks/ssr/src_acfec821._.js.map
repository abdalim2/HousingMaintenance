{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/services/housingService.ts"],"sourcesContent":["import { \r\n  ResidentialComplex, \r\n  Building, \r\n  Room,\r\n  Facility\r\n} from '@/models/types';\r\n\r\n// Residential Complex Operations\r\nexport const getComplexes = async (): Promise<ResidentialComplex[]> => {\r\n  try {\r\n    const response = await fetch('/api/housing');\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`فشل في جلب المجمعات السكنية: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('فشل في جلب المجمعات السكنية:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getComplexById = async (id: string): Promise<ResidentialComplex | null> => {\r\n  try {\r\n    const response = await fetch(`/api/housing/${id}`);\r\n    \r\n    if (response.status === 404) {\r\n      return null;\r\n    }\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`فشل في جلب المجمع السكني: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`فشل في جلب المجمع السكني بالمعرف ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createComplex = async (complex: Omit<ResidentialComplex, 'id' | 'created_at'>): Promise<ResidentialComplex> => {\r\n  console.log('محاولة إنشاء مجمع سكني جديد:', complex);\r\n  \r\n  try {\r\n    // التحقق من وجود الحقول المطلوبة\r\n    if (!complex.name || !complex.location) {\r\n      throw new Error('اسم المجمع والموقع مطلوبان');\r\n    }\r\n    \r\n    const response = await fetch('/api/housing', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(complex),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `فشل في إنشاء المجمع السكني: ${response.statusText}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    console.log('تم إنشاء المجمع بنجاح:', data);\r\n    return data;\r\n  } catch (err) {\r\n    console.error('خطأ غير متوقع عند إنشاء المجمع:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updateComplex = async (id: string, updates: Partial<ResidentialComplex>): Promise<ResidentialComplex> => {\r\n  try {\r\n    const response = await fetch('/api/housing', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        id,\r\n        ...updates\r\n      }),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `فشل في تحديث المجمع السكني: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`فشل في تحديث المجمع السكني بالمعرف ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteComplex = async (id: string): Promise<void> => {\r\n  try {\r\n    const response = await fetch(`/api/housing?id=${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `فشل في حذف المجمع السكني: ${response.statusText}`);\r\n    }\r\n  } catch (error) {\r\n    console.error(`فشل في حذف المجمع السكني بالمعرف ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const testDatabaseConnection = async (): Promise<boolean> => {\r\n  try {\r\n    const response = await fetch('/api/housing', {\r\n      method: 'OPTIONS',\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      return false;\r\n    }\r\n    \r\n    const data = await response.json();\r\n    return data.success;\r\n  } catch (error) {\r\n    console.error('فشل في اختبار الاتصال بقاعدة البيانات:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Building Operations\r\nexport const getBuildings = async (complexId?: string): Promise<Building[]> => {\r\n  try {\r\n    const url = complexId ? `/api/housing/buildings?complexId=${complexId}` : '/api/housing/buildings';\r\n    const response = await fetch(url);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`فشل في جلب المباني: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('فشل في جلب المباني:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getBuildingById = async (id: string): Promise<Building | null> => {\r\n  try {\r\n    const response = await fetch(`/api/housing/buildings/${id}`);\r\n    \r\n    if (response.status === 404) {\r\n      return null;\r\n    }\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`فشل في جلب المبنى: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`فشل في جلب المبنى بالمعرف ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createBuilding = async (building: Omit<Building, 'id'>): Promise<Building> => {\r\n  try {\r\n    const response = await fetch('/api/housing/buildings', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(building),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `فشل في إنشاء المبنى: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('فشل في إنشاء مبنى جديد:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateBuilding = async (id: string, updates: Partial<Building>): Promise<Building> => {\r\n  try {\r\n    const response = await fetch('/api/housing/buildings', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        id,\r\n        ...updates\r\n      }),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `فشل في تحديث المبنى: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`فشل في تحديث المبنى بالمعرف ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteBuilding = async (id: string): Promise<void> => {\r\n  try {\r\n    const response = await fetch(`/api/housing/buildings?id=${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `فشل في حذف المبنى: ${response.statusText}`);\r\n    }\r\n  } catch (error) {\r\n    console.error(`فشل في حذف المبنى بالمعرف ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Room Operations\r\nexport const getRooms = async (buildingId?: string): Promise<Room[]> => {\r\n  try {\r\n    const url = buildingId ? `/api/housing/rooms?buildingId=${buildingId}` : '/api/housing/rooms';\r\n    \r\n    console.log(`Fetching rooms from ${url}`);\r\n    const response = await fetch(url, {\r\n      // Adding cache: no-store to prevent caching issues\r\n      cache: 'no-store'\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      let errorMessage;\r\n      try {\r\n        // Try to parse as JSON\r\n        const errorData = JSON.parse(errorText);\r\n        errorMessage = errorData.error || response.statusText;\r\n      } catch {\r\n        // If not JSON, use as plain text\r\n        errorMessage = errorText || response.statusText;\r\n      }\r\n      \r\n      console.error(`Error response from rooms API: ${errorMessage}`);\r\n      throw new Error(`فشل في جلب الغرف: ${errorMessage}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Map database schema to the expected Room interface if needed\r\n    return data.map((room: any) => ({\r\n      id: room.id,\r\n      building_id: room.building_id,\r\n      room_number: room.room_number,\r\n      type: room.type,\r\n      status: room.status || 'available',\r\n      floor: room.floor,\r\n      // Add other expected fields with defaults\r\n      name: room.room_number // Use room_number as name if not present\r\n    }));\r\n  } catch (error: any) {\r\n    console.error('فشل في جلب الغرف:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Facility Operations\r\nexport const getFacilities = async (complexId?: string, buildingId?: string): Promise<Facility[]> => {\r\n  try {\r\n    let url = '/api/housing/facilities';\r\n    const params = new URLSearchParams();\r\n    \r\n    if (complexId) params.append('complexId', complexId);\r\n    if (buildingId) params.append('buildingId', buildingId);\r\n    \r\n    if (params.toString()) {\r\n      url += `?${params.toString()}`;\r\n    }\r\n    \r\n    console.log(`Fetching facilities from ${url}`);\r\n    const response = await fetch(url, {\r\n      // Adding cache: no-store to prevent caching issues\r\n      cache: 'no-store' \r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      let errorMessage;\r\n      try {\r\n        // Try to parse as JSON\r\n        const errorData = JSON.parse(errorText);\r\n        errorMessage = errorData.error || response.statusText;\r\n      } catch {\r\n        // If not JSON, use as plain text\r\n        errorMessage = errorText || response.statusText;\r\n      }\r\n      \r\n      console.error(`Error response from facilities API: ${errorMessage}`);\r\n      throw new Error(`فشل في جلب المرافق: ${errorMessage}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Map database schema to the expected Facility interface if needed\r\n    return data.map((facility: any) => ({\r\n      id: facility.id,\r\n      complex_id: facility.complex_id,\r\n      building_id: facility.building_id,\r\n      name: facility.name,\r\n      type: facility.type,\r\n      location_description: facility.location_description\r\n    }));\r\n  } catch (error: any) {\r\n    console.error('فشل في جلب المرافق:', error);\r\n    throw error;\r\n  }\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/app/maintenance/new/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { getComplexes, getBuildings, getRooms, getFacilities } from '@/lib/services/housingService';\r\nimport { getItems } from '@/lib/services/inventoryService';\r\nimport { createMaintenanceRequest, createMaintenanceItem } from '@/lib/services/maintenanceService';\r\nimport { ResidentialComplex, Building, Room, Facility, Item, MaintenanceItem } from '@/models/types';\r\n\r\nexport default function NewMaintenanceRequestPage() {\r\n  const router = useRouter();\r\n  \r\n  // Form data state\r\n  const [formData, setFormData] = useState({\r\n    complex_id: '',\r\n    building_id: '',\r\n    room_id: '',\r\n    facility_id: '',\r\n    reported_by: '',\r\n    priority: 'medium' as 'low' | 'medium' | 'high' | 'emergency',\r\n    description: ''\r\n  });\r\n  \r\n  // Select options state\r\n  const [complexes, setComplexes] = useState<ResidentialComplex[]>([]);\r\n  const [buildings, setBuildings] = useState<Building[]>([]);\r\n  const [rooms, setRooms] = useState<Room[]>([]);\r\n  const [facilities, setFacilities] = useState<Facility[]>([]);\r\n  \r\n  // Items needed for maintenance\r\n  const [allItems, setAllItems] = useState<Item[]>([]);\r\n  const [selectedItems, setSelectedItems] = useState<{\r\n    id: string;\r\n    item_id: string;\r\n    quantity: number;\r\n    notes: string;\r\n  }[]>([]);\r\n  \r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [message, setMessage] = useState<string | null>(null);\r\n\r\n  // Fetch all required data on component mount\r\n  useEffect(() => {\r\n    const fetchInitialData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        // Fetch complexes and items separately to better handle potential errors\r\n        let complexesData: ResidentialComplex[] = [];\r\n        let itemsData: Item[] = [];\r\n        \r\n        try {\r\n          complexesData = await getComplexes();\r\n        } catch (complexError) {\r\n          console.error('Error fetching complexes:', complexError);\r\n        }\r\n        \r\n        try {\r\n          itemsData = await getItems();\r\n        } catch (itemsError) {\r\n          console.error('Error fetching items:', itemsError);\r\n        }\r\n        \r\n        setComplexes(complexesData);\r\n        setAllItems(itemsData);\r\n      } catch (err) {\r\n        console.error('Error in fetchInitialData:', err);\r\n        setError('حدث خطأ أثناء تحميل البيانات. الرجاء المحاولة مرة أخرى.');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchInitialData();\r\n  }, []);\r\n\r\n  // Fetch buildings when complex is selected\r\n  useEffect(() => {\r\n    if (formData.complex_id) {\r\n      const fetchBuildings = async () => {\r\n        try {\r\n          const buildingsData = await getBuildings(formData.complex_id);\r\n          setBuildings(buildingsData);\r\n          // Reset dependent fields\r\n          setFormData(prev => ({ \r\n            ...prev, \r\n            building_id: '', \r\n            room_id: '', \r\n            facility_id: '' \r\n          }));\r\n          setRooms([]);\r\n          setFacilities([]);\r\n        } catch (err) {\r\n          console.error('Error fetching buildings:', err);\r\n        }\r\n      };\r\n\r\n      fetchBuildings();\r\n    }\r\n  }, [formData.complex_id]);\r\n\r\n  // Fetch rooms and facilities when building is selected\r\n  useEffect(() => {\r\n    if (formData.building_id) {\r\n      const fetchRoomsAndFacilities = async () => {\r\n        try {\r\n          const [roomsData, facilitiesData] = await Promise.all([\r\n            getRooms(formData.building_id),\r\n            getFacilities(formData.complex_id, formData.building_id)\r\n          ]);\r\n          \r\n          setRooms(roomsData);\r\n          setFacilities(facilitiesData);\r\n          \r\n          // Reset dependent fields\r\n          setFormData(prev => ({ ...prev, room_id: '', facility_id: '' }));\r\n        } catch (err) {\r\n          console.error('Error fetching rooms and facilities:', err);\r\n        }\r\n      };\r\n\r\n      fetchRoomsAndFacilities();\r\n    }\r\n  }, [formData.building_id, formData.complex_id]);\r\n\r\n  // Handle input changes\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Handle adding a new item\r\n  const handleAddItem = () => {\r\n    const newItem = {\r\n      id: Date.now().toString(), // temporary id for UI management\r\n      item_id: '',\r\n      quantity: 1,\r\n      notes: ''\r\n    };\r\n    \r\n    setSelectedItems(prev => [...prev, newItem]);\r\n  };\r\n\r\n  // Handle item changes\r\n  const handleItemChange = (id: string, field: string, value: string | number) => {\r\n    setSelectedItems(prev => \r\n      prev.map(item => \r\n        item.id === id ? { ...item, [field]: value } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  // Handle removing an item\r\n  const handleRemoveItem = (id: string) => {\r\n    setSelectedItems(prev => prev.filter(item => item.id !== id));\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    setIsLoading(true);\r\n    setError(null);\r\n    setMessage(null);\r\n\r\n    try {\r\n      // Validate form\r\n      if (!formData.complex_id || !formData.building_id || !formData.reported_by || !formData.description) {\r\n        throw new Error('الرجاء تعبئة جميع الحقول المطلوبة');\r\n      }\r\n\r\n      // Create maintenance request\r\n      const maintenanceRequest = await createMaintenanceRequest({\r\n        complex_id: formData.complex_id,\r\n        building_id: formData.building_id,\r\n        room_id: formData.room_id || undefined,\r\n        facility_id: formData.facility_id || undefined,\r\n        reported_by: formData.reported_by,\r\n        priority: formData.priority,\r\n        description: formData.description,\r\n        status: 'pending'\r\n      });\r\n\r\n      // Create maintenance items\r\n      const itemPromises = selectedItems.map(item => {\r\n        if (!item.item_id || item.quantity < 1) return null;\r\n        \r\n        return createMaintenanceItem({\r\n          maintenance_id: maintenanceRequest.id,\r\n          item_id: item.item_id,\r\n          quantity_needed: item.quantity,\r\n          notes: item.notes\r\n        });\r\n      });\r\n\r\n      // Filter out null promises and wait for all promises to resolve\r\n      await Promise.all(itemPromises.filter(Boolean) as Promise<MaintenanceItem>[]);\r\n\r\n      setMessage('تم تقديم طلب الصيانة بنجاح');\r\n      \r\n      // Redirect to maintenance list after 2 seconds\r\n      setTimeout(() => {\r\n        router.push('/maintenance');\r\n      }, 2000);\r\n      \r\n    } catch (err: any) {\r\n      console.error('Error submitting maintenance request:', err);\r\n      setError(err.message || 'حدث خطأ أثناء تقديم طلب الصيانة. الرجاء المحاولة مرة أخرى.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-bold\">طلب صيانة جديد</h1>\r\n        <button \r\n          type=\"button\"\r\n          onClick={() => router.back()}\r\n          className=\"btn bg-gray-500 hover:bg-gray-600\"\r\n        >\r\n          عودة\r\n        </button>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"bg-red-100 border-r-4 border-red-500 text-red-700 p-4 mb-6 rounded-md\">\r\n          <p>{error}</p>\r\n        </div>\r\n      )}\r\n\r\n      {message && (\r\n        <div className=\"bg-green-100 border-r-4 border-green-500 text-green-700 p-4 mb-6 rounded-md\">\r\n          <p>{message}</p>\r\n        </div>\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit} className=\"bg-white shadow-md rounded-lg p-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n          <div>\r\n            <label className=\"block mb-2 font-medium\">المجمع السكني <span className=\"text-red-500\">*</span></label>\r\n            <select \r\n              name=\"complex_id\" \r\n              value={formData.complex_id} \r\n              onChange={handleChange}\r\n              className=\"select w-full\"\r\n              required\r\n            >\r\n              <option value=\"\">اختر المجمع</option>\r\n              {complexes.map(complex => (\r\n                <option key={complex.id} value={complex.id}>\r\n                  {complex.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block mb-2 font-medium\">المبنى <span className=\"text-red-500\">*</span></label>\r\n            <select \r\n              name=\"building_id\" \r\n              value={formData.building_id} \r\n              onChange={handleChange}\r\n              className=\"select w-full\"\r\n              disabled={!formData.complex_id}\r\n              required\r\n            >\r\n              <option value=\"\">اختر المبنى</option>\r\n              {buildings.map(building => (\r\n                <option key={building.id} value={building.id}>\r\n                  {building.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n          <div>\r\n            <label className=\"block mb-2 font-medium\">الغرفة</label>\r\n            <select \r\n              name=\"room_id\" \r\n              value={formData.room_id} \r\n              onChange={handleChange}\r\n              className=\"select w-full\"\r\n              disabled={!formData.building_id}\r\n            >\r\n              <option value=\"\">اختر الغرفة</option>\r\n              {rooms.map(room => (\r\n                <option key={room.id} value={room.id}>\r\n                  الطابق {room.floor} - غرفة {room.room_number} ({room.type})\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block mb-2 font-medium\">المرافق</label>\r\n            <select \r\n              name=\"facility_id\" \r\n              value={formData.facility_id} \r\n              onChange={handleChange}\r\n              className=\"select w-full\"\r\n              disabled={!formData.building_id}\r\n            >\r\n              <option value=\"\">اختر المرافق</option>\r\n              {facilities.map(facility => (\r\n                <option key={facility.id} value={facility.id}>\r\n                  {facility.name} ({facility.type})\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n          <div>\r\n            <label className=\"block mb-2 font-medium\">مقدم الطلب <span className=\"text-red-500\">*</span></label>\r\n            <input \r\n              type=\"text\" \r\n              name=\"reported_by\" \r\n              value={formData.reported_by} \r\n              onChange={handleChange}\r\n              className=\"input w-full\"\r\n              placeholder=\"اسم مقدم الطلب\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block mb-2 font-medium\">الأولوية <span className=\"text-red-500\">*</span></label>\r\n            <select \r\n              name=\"priority\" \r\n              value={formData.priority} \r\n              onChange={handleChange}\r\n              className=\"select w-full\"\r\n              required\r\n            >\r\n              <option value=\"low\">منخفضة</option>\r\n              <option value=\"medium\">متوسطة</option>\r\n              <option value=\"high\">عالية</option>\r\n              <option value=\"emergency\">طارئة</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mb-6\">\r\n          <label className=\"block mb-2 font-medium\">وصف المشكلة <span className=\"text-red-500\">*</span></label>\r\n          <textarea \r\n            name=\"description\" \r\n            value={formData.description} \r\n            onChange={handleChange}\r\n            className=\"input w-full h-32\"\r\n            placeholder=\"اكتب وصفاً تفصيلياً للمشكلة...\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-6\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <h3 className=\"text-lg font-medium\">الأصناف المطلوبة</h3>\r\n            <button \r\n              type=\"button\"\r\n              onClick={handleAddItem}\r\n              className=\"btn bg-secondary hover:bg-secondary/90\"\r\n            >\r\n              إضافة صنف\r\n            </button>\r\n          </div>\r\n\r\n          {selectedItems.length === 0 ? (\r\n            <p className=\"text-gray-500 italic\">لم يتم إضافة أي أصناف بعد.</p>\r\n          ) : (\r\n            <div className=\"space-y-4\">\r\n              {selectedItems.map((item, index) => (\r\n                <div key={item.id} className=\"bg-gray-50 p-4 rounded-md border flex flex-wrap items-end gap-4\">\r\n                  <div className=\"flex-grow min-w-[250px]\">\r\n                    <label className=\"block mb-2 text-sm font-medium\">الصنف <span className=\"text-red-500\">*</span></label>\r\n                    <select\r\n                      value={item.item_id}\r\n                      onChange={(e) => handleItemChange(item.id, 'item_id', e.target.value)}\r\n                      className=\"select w-full\"\r\n                      required\r\n                    >\r\n                      <option value=\"\">اختر الصنف</option>\r\n                      {allItems.map(itemOption => (\r\n                        <option key={itemOption.id} value={itemOption.id}>\r\n                          {itemOption.name}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  \r\n                  <div className=\"w-24\">\r\n                    <label className=\"block mb-2 text-sm font-medium\">الكمية <span className=\"text-red-500\">*</span></label>\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      value={item.quantity}\r\n                      onChange={(e) => handleItemChange(item.id, 'quantity', parseInt(e.target.value))}\r\n                      className=\"input w-full\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  \r\n                  <div className=\"flex-grow min-w-[250px]\">\r\n                    <label className=\"block mb-2 text-sm font-medium\">ملاحظات</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={item.notes}\r\n                      onChange={(e) => handleItemChange(item.id, 'notes', e.target.value)}\r\n                      className=\"input w-full\"\r\n                      placeholder=\"أي ملاحظات خاصة بالصنف...\"\r\n                    />\r\n                  </div>\r\n                  \r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => handleRemoveItem(item.id)}\r\n                    className=\"bg-red-500 hover:bg-red-600 text-white px-2 py-2 rounded\"\r\n                  >\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"flex justify-end gap-4 mt-8\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => router.back()}\r\n            className=\"btn bg-gray-500 hover:bg-gray-600\"\r\n            disabled={isLoading}\r\n          >\r\n            إلغاء\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? 'جاري الحفظ...' : 'تقديم طلب الصيانة'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}