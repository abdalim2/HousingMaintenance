{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/neondb.ts"],"sourcesContent":["import { Pool } from 'pg';\r\n\r\n// استخدام عنوان الاتصال المباشر بقاعدة بيانات Neon\r\nconst connectionString = 'postgresql://HousingMaintenance_owner:npg_fC8S4bpZLsJw@ep-weathered-meadow-a44a1v3i-pooler.us-east-1.aws.neon.tech/HousingMaintenance?sslmode=require';\r\n\r\n// إنشاء تجمع اتصالات لقاعدة البيانات\r\nconst poolInstance = new Pool({\r\n  connectionString,\r\n  max: 20, // زيادة عدد الاتصالات المتزامنة\r\n  idleTimeoutMillis: 30000, // وقت انتظار أطول\r\n  connectionTimeoutMillis: 5000, // مهلة اتصال أقصر\r\n});\r\n\r\n// إصدار تجمع الاتصالات للاستخدام في الوظائف الأخرى\r\nexport const pool = poolInstance;\r\n\r\n// وظيفة مساعدة لتنفيذ استعلامات قاعدة البيانات مع إعادة المحاولة\r\nexport async function query(text: string, params?: any[], retries = 3) {\r\n  let lastError;\r\n  for (let attempt = 0; attempt < retries; attempt++) {\r\n    const client = await poolInstance.connect().catch(err => {\r\n      console.error(`فشل الاتصال بقاعدة البيانات (محاولة ${attempt + 1}/${retries}):`, err.message);\r\n      return null;\r\n    });\r\n    \r\n    if (!client) {\r\n      lastError = new Error('تعذر إنشاء اتصال بقاعدة البيانات');\r\n      continue;\r\n    }\r\n    \r\n    try {\r\n      const result = await client.query(text, params);\r\n      return result;\r\n    } catch (error: any) {\r\n      lastError = error;\r\n      console.error(`فشل الاستعلام (محاولة ${attempt + 1}/${retries}):`, error.message);\r\n    } finally {\r\n      client.release();\r\n    }\r\n  }\r\n  \r\n  // إذا وصلنا إلى هنا، فقد فشلت جميع المحاولات\r\n  throw lastError || new Error('فشل الاستعلام بعد عدة محاولات');\r\n}\r\n\r\n// التحقق من اتصال قاعدة البيانات\r\nexport async function testConnection() {\r\n  try {\r\n    const result = await query('SELECT NOW()', [], 1);\r\n    console.log('اتصال ناجح بقاعدة بيانات Neon:', result.rows[0]);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('فشل الاتصال بقاعدة بيانات Neon:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// وظيفة مساعدة للحصول على بيانات آمنة\r\nexport async function safeQuery(text: string, params?: any[], defaultValue: any = []) {\r\n  try {\r\n    const result = await query(text, params);\r\n    return result.rows || defaultValue;\r\n  } catch (error) {\r\n    console.error('فشل الاستعلام، استخدام القيمة الافتراضية:', error);\r\n    return defaultValue;\r\n  }\r\n}"],"names":[],"mappings":";;;;;;AAAA;;;;;;AAEA,mDAAmD;AACnD,MAAM,mBAAmB;AAEzB,qCAAqC;AACrC,MAAM,eAAe,IAAI,oGAAA,CAAA,OAAI,CAAC;IAC5B;IACA,KAAK;IACL,mBAAmB;IACnB,yBAAyB;AAC3B;AAGO,MAAM,OAAO;AAGb,eAAe,MAAM,IAAY,EAAE,MAAc,EAAE,UAAU,CAAC;IACnE,IAAI;IACJ,IAAK,IAAI,UAAU,GAAG,UAAU,SAAS,UAAW;QAClD,MAAM,SAAS,MAAM,aAAa,OAAO,GAAG,KAAK,CAAC,CAAA;YAChD,QAAQ,KAAK,CAAC,CAAC,oCAAoC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,OAAO;YAC5F,OAAO;QACT;QAEA,IAAI,CAAC,QAAQ;YACX,YAAY,IAAI,MAAM;YACtB;QACF;QAEA,IAAI;YACF,MAAM,SAAS,MAAM,OAAO,KAAK,CAAC,MAAM;YACxC,OAAO;QACT,EAAE,OAAO,OAAY;YACnB,YAAY;YACZ,QAAQ,KAAK,CAAC,CAAC,sBAAsB,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,OAAO;QAClF,SAAU;YACR,OAAO,OAAO;QAChB;IACF;IAEA,6CAA6C;IAC7C,MAAM,aAAa,IAAI,MAAM;AAC/B;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,SAAS,MAAM,MAAM,gBAAgB,EAAE,EAAE;QAC/C,QAAQ,GAAG,CAAC,kCAAkC,OAAO,IAAI,CAAC,EAAE;QAC5D,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mCAAmC;QACjD,OAAO;IACT;AACF;AAGO,eAAe,UAAU,IAAY,EAAE,MAAc,EAAE,eAAoB,EAAE;IAClF,IAAI;QACF,MAAM,SAAS,MAAM,MAAM,MAAM;QACjC,OAAO,OAAO,IAAI,IAAI;IACxB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6CAA6C;QAC3D,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/services/maintenanceService.ts"],"sourcesContent":["import { query, safeQuery } from '../neondb';\r\nimport { MaintenanceRequest, MaintenanceItem } from '@/models/types';\r\n\r\n// Maintenance Request Operations\r\nexport const getMaintenanceRequests = async (\r\n  complexId?: string, \r\n  buildingId?: string, \r\n  status?: MaintenanceRequest['status']\r\n): Promise<MaintenanceRequest[]> => {\r\n  try {\r\n    let sql = 'SELECT * FROM maintenance_requests WHERE 1=1';\r\n    const params: any[] = [];\r\n    \r\n    if (complexId) {\r\n      params.push(complexId);\r\n      sql += ` AND complex_id = $${params.length}`;\r\n    }\r\n    \r\n    if (buildingId) {\r\n      params.push(buildingId);\r\n      sql += ` AND building_id = $${params.length}`;\r\n    }\r\n    \r\n    if (status) {\r\n      params.push(status);\r\n      sql += ` AND status = $${params.length}`;\r\n    }\r\n    \r\n    sql += ' ORDER BY reported_date DESC';\r\n    \r\n    return await safeQuery(sql, params, []);\r\n  } catch (err) {\r\n    console.error('Error in getMaintenanceRequests:', err);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getMaintenanceRequestById = async (id: string): Promise<MaintenanceRequest | null> => {\r\n  try {\r\n    const result = await query('SELECT * FROM maintenance_requests WHERE id = $1', [id]);\r\n    return result.rows[0] || null;\r\n  } catch (err) {\r\n    console.error('Error in getMaintenanceRequestById:', err);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const createMaintenanceRequest = async (\r\n  request: Omit<MaintenanceRequest, 'id' | 'reported_date'>\r\n): Promise<MaintenanceRequest> => {\r\n  try {\r\n    const newRequest = {\r\n      ...request,\r\n      reported_date: new Date().toISOString(),\r\n      status: request.status || 'pending'\r\n    };\r\n    \r\n    const fields = Object.keys(newRequest).join(', ');\r\n    const placeholders = Object.keys(newRequest).map((_, i) => `$${i + 1}`).join(', ');\r\n    const values = Object.values(newRequest);\r\n    \r\n    const sql = `\r\n      INSERT INTO maintenance_requests (${fields}) \r\n      VALUES (${placeholders})\r\n      RETURNING *\r\n    `;\r\n    \r\n    const result = await query(sql, values);\r\n    return result.rows[0];\r\n  } catch (err) {\r\n    console.error('Error in createMaintenanceRequest:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updateMaintenanceRequest = async (\r\n  id: string, \r\n  updates: Partial<MaintenanceRequest>\r\n): Promise<MaintenanceRequest> => {\r\n  try {\r\n    const fields = Object.keys(updates);\r\n    const setClause = fields.map((field, i) => `${field} = $${i + 1}`).join(', ');\r\n    const values = [...Object.values(updates), id];\r\n    \r\n    const sql = `\r\n      UPDATE maintenance_requests \r\n      SET ${setClause} \r\n      WHERE id = $${fields.length + 1}\r\n      RETURNING *\r\n    `;\r\n    \r\n    const result = await query(sql, values);\r\n    return result.rows[0];\r\n  } catch (err) {\r\n    console.error('Error in updateMaintenanceRequest:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const deleteMaintenanceRequest = async (id: string): Promise<void> => {\r\n  try {\r\n    await query('DELETE FROM maintenance_requests WHERE id = $1', [id]);\r\n  } catch (err) {\r\n    console.error('Error in deleteMaintenanceRequest:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\n// Maintenance Items Operations\r\nexport const getMaintenanceItems = async (\r\n  maintenanceId: string\r\n): Promise<MaintenanceItem[]> => {\r\n  try {\r\n    const result = await query('SELECT * FROM maintenance_items WHERE maintenance_id = $1', [maintenanceId]);\r\n    return result.rows || [];\r\n  } catch (err) {\r\n    console.error('Error in getMaintenanceItems:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getMaintenanceItemById = async (id: string): Promise<MaintenanceItem | null> => {\r\n  try {\r\n    const result = await query('SELECT * FROM maintenance_items WHERE id = $1', [id]);\r\n    return result.rows[0] || null;\r\n  } catch (err) {\r\n    console.error('Error in getMaintenanceItemById:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const createMaintenanceItem = async (\r\n  item: Omit<MaintenanceItem, 'id'>\r\n): Promise<MaintenanceItem> => {\r\n  try {\r\n    const fields = Object.keys(item).join(', ');\r\n    const placeholders = Object.keys(item).map((_, i) => `$${i + 1}`).join(', ');\r\n    const values = Object.values(item);\r\n    \r\n    const sql = `\r\n      INSERT INTO maintenance_items (${fields}) \r\n      VALUES (${placeholders})\r\n      RETURNING *\r\n    `;\r\n    \r\n    const result = await query(sql, values);\r\n    return result.rows[0];\r\n  } catch (err) {\r\n    console.error('Error in createMaintenanceItem:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updateMaintenanceItem = async (\r\n  id: string, \r\n  updates: Partial<MaintenanceItem>\r\n): Promise<MaintenanceItem> => {\r\n  try {\r\n    const fields = Object.keys(updates);\r\n    const setClause = fields.map((field, i) => `${field} = $${i + 1}`).join(', ');\r\n    const values = [...Object.values(updates), id];\r\n    \r\n    const sql = `\r\n      UPDATE maintenance_items \r\n      SET ${setClause} \r\n      WHERE id = $${fields.length + 1}\r\n      RETURNING *\r\n    `;\r\n    \r\n    const result = await query(sql, values);\r\n    return result.rows[0];\r\n  } catch (err) {\r\n    console.error('Error in updateMaintenanceItem:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const deleteMaintenanceItem = async (id: string): Promise<void> => {\r\n  try {\r\n    await query('DELETE FROM maintenance_items WHERE id = $1', [id]);\r\n  } catch (err) {\r\n    console.error('Error in deleteMaintenanceItem:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\n// Get maintenance requests for monthly summary\r\nexport const getMonthlyMaintenanceRequests = async (\r\n  year: number,\r\n  month: number\r\n): Promise<MaintenanceRequest[]> => {\r\n  try {\r\n    // Create start and end date for the specified month\r\n    const startDate = new Date(year, month - 1, 1).toISOString();\r\n    const endDate = new Date(year, month, 0).toISOString();\r\n    \r\n    const sql = `\r\n      SELECT * FROM maintenance_requests\r\n      WHERE reported_date >= $1 AND reported_date <= $2\r\n    `;\r\n    \r\n    return await safeQuery(sql, [startDate, endDate], []);\r\n  } catch (err) {\r\n    console.error('Error in getMonthlyMaintenanceRequests:', err);\r\n    return [];\r\n  }\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/app/api/server-actions/maintenance-actions.ts"],"sourcesContent":["'use server';\r\n\r\nimport { \r\n  getMaintenanceRequests, \r\n  getMaintenanceRequestById,\r\n  createMaintenanceRequest,\r\n  updateMaintenanceRequest,\r\n  getMaintenanceItems\r\n} from '@/lib/services/maintenanceService';\r\nimport { MaintenanceRequest, MaintenanceItem } from '@/models/types';\r\n\r\nexport async function getMaintenanceRequestsAction(\r\n  complexId?: string, \r\n  buildingId?: string, \r\n  status?: MaintenanceRequest['status']\r\n) {\r\n  try {\r\n    const requests = await getMaintenanceRequests(complexId, buildingId, status);\r\n    return { data: requests, error: null };\r\n  } catch (error: any) {\r\n    console.error('خطأ في جلب طلبات الصيانة:', error);\r\n    return { data: [], error: `فشل في جلب طلبات الصيانة: ${error.message || 'خطأ غير معروف'}` };\r\n  }\r\n}\r\n\r\nexport async function getMaintenanceRequestByIdAction(id: string) {\r\n  try {\r\n    const request = await getMaintenanceRequestById(id);\r\n    return { data: request, error: null };\r\n  } catch (error: any) {\r\n    console.error(`خطأ في جلب طلب الصيانة رقم ${id}:`, error);\r\n    return { data: null, error: `فشل في جلب طلب الصيانة: ${error.message || 'خطأ غير معروف'}` };\r\n  }\r\n}\r\n\r\nexport async function createMaintenanceRequestAction(\r\n  request: Omit<MaintenanceRequest, 'id' | 'reported_date'>\r\n) {\r\n  try {\r\n    const newRequest = await createMaintenanceRequest(request);\r\n    return { data: newRequest, error: null };\r\n  } catch (error: any) {\r\n    console.error('خطأ في إنشاء طلب صيانة جديد:', error);\r\n    return { data: null, error: `فشل في إنشاء طلب الصيانة: ${error.message || 'خطأ غير معروف'}` };\r\n  }\r\n}\r\n\r\nexport async function updateMaintenanceRequestAction(\r\n  id: string, \r\n  updates: Partial<MaintenanceRequest>\r\n) {\r\n  try {\r\n    const updatedRequest = await updateMaintenanceRequest(id, updates);\r\n    return { data: updatedRequest, error: null };\r\n  } catch (error: any) {\r\n    console.error(`خطأ في تحديث طلب الصيانة رقم ${id}:`, error);\r\n    return { data: null, error: `فشل في تحديث طلب الصيانة: ${error.message || 'خطأ غير معروف'}` };\r\n  }\r\n}\r\n\r\nexport async function getMaintenanceItemsAction(maintenanceId: string) {\r\n  try {\r\n    const items = await getMaintenanceItems(maintenanceId);\r\n    return { data: items, error: null };\r\n  } catch (error: any) {\r\n    console.error(`خطأ في جلب عناصر طلب الصيانة رقم ${maintenanceId}:`, error);\r\n    return { data: [], error: `فشل في جلب عناصر طلب الصيانة: ${error.message || 'خطأ غير معروف'}` };\r\n  }\r\n}"],"names":[],"mappings":";;;;;;;;;AAEA;;;;;;;;;AASO,eAAe,6BACpB,SAAkB,EAClB,UAAmB,EACnB,MAAqC;IAErC,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,4IAAA,CAAA,yBAAsB,AAAD,EAAE,WAAW,YAAY;QACrE,OAAO;YAAE,MAAM;YAAU,OAAO;QAAK;IACvC,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO;YAAE,MAAM,EAAE;YAAE,OAAO,CAAC,0BAA0B,EAAE,MAAM,OAAO,IAAI,iBAAiB;QAAC;IAC5F;AACF;AAEO,eAAe,gCAAgC,EAAU;IAC9D,IAAI;QACF,MAAM,UAAU,MAAM,CAAA,GAAA,4IAAA,CAAA,4BAAyB,AAAD,EAAE;QAChD,OAAO;YAAE,MAAM;YAAS,OAAO;QAAK;IACtC,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,CAAC,2BAA2B,EAAE,GAAG,CAAC,CAAC,EAAE;QACnD,OAAO;YAAE,MAAM;YAAM,OAAO,CAAC,wBAAwB,EAAE,MAAM,OAAO,IAAI,iBAAiB;QAAC;IAC5F;AACF;AAEO,eAAe,+BACpB,OAAyD;IAEzD,IAAI;QACF,MAAM,aAAa,MAAM,CAAA,GAAA,4IAAA,CAAA,2BAAwB,AAAD,EAAE;QAClD,OAAO;YAAE,MAAM;YAAY,OAAO;QAAK;IACzC,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO;YAAE,MAAM;YAAM,OAAO,CAAC,0BAA0B,EAAE,MAAM,OAAO,IAAI,iBAAiB;QAAC;IAC9F;AACF;AAEO,eAAe,+BACpB,EAAU,EACV,OAAoC;IAEpC,IAAI;QACF,MAAM,iBAAiB,MAAM,CAAA,GAAA,4IAAA,CAAA,2BAAwB,AAAD,EAAE,IAAI;QAC1D,OAAO;YAAE,MAAM;YAAgB,OAAO;QAAK;IAC7C,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC,EAAE;QACrD,OAAO;YAAE,MAAM;YAAM,OAAO,CAAC,0BAA0B,EAAE,MAAM,OAAO,IAAI,iBAAiB;QAAC;IAC9F;AACF;AAEO,eAAe,0BAA0B,aAAqB;IACnE,IAAI;QACF,MAAM,QAAQ,MAAM,CAAA,GAAA,4IAAA,CAAA,sBAAmB,AAAD,EAAE;QACxC,OAAO;YAAE,MAAM;YAAO,OAAO;QAAK;IACpC,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,CAAC,iCAAiC,EAAE,cAAc,CAAC,CAAC,EAAE;QACpE,OAAO;YAAE,MAAM,EAAE;YAAE,OAAO,CAAC,8BAA8B,EAAE,MAAM,OAAO,IAAI,iBAAiB;QAAC;IAChG;AACF;;;IAzDsB;IAcA;IAUA;IAYA;IAaA;;AAjDA,+OAAA;AAcA,+OAAA;AAUA,+OAAA;AAYA,+OAAA;AAaA,+OAAA","debugId":null}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/services/housingService.ts"],"sourcesContent":["import { \r\n  ResidentialComplex, \r\n  Building, \r\n  Room,\r\n  Facility\r\n} from '@/models/types';\r\n\r\n// Residential Complex Operations\r\nexport const getComplexes = async (): Promise<ResidentialComplex[]> => {\r\n  try {\r\n    const response = await fetch('/api/housing');\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`فشل في جلب المجمعات السكنية: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('فشل في جلب المجمعات السكنية:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getComplexById = async (id: string): Promise<ResidentialComplex | null> => {\r\n  try {\r\n    const response = await fetch(`/api/housing/${id}`);\r\n    \r\n    if (response.status === 404) {\r\n      return null;\r\n    }\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`فشل في جلب المجمع السكني: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`فشل في جلب المجمع السكني بالمعرف ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createComplex = async (complex: Omit<ResidentialComplex, 'id' | 'created_at'>): Promise<ResidentialComplex> => {\r\n  console.log('محاولة إنشاء مجمع سكني جديد:', complex);\r\n  \r\n  try {\r\n    // التحقق من وجود الحقول المطلوبة\r\n    if (!complex.name || !complex.location) {\r\n      throw new Error('اسم المجمع والموقع مطلوبان');\r\n    }\r\n    \r\n    const response = await fetch('/api/housing', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(complex),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `فشل في إنشاء المجمع السكني: ${response.statusText}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    console.log('تم إنشاء المجمع بنجاح:', data);\r\n    return data;\r\n  } catch (err) {\r\n    console.error('خطأ غير متوقع عند إنشاء المجمع:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updateComplex = async (id: string, updates: Partial<ResidentialComplex>): Promise<ResidentialComplex> => {\r\n  try {\r\n    const response = await fetch('/api/housing', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        id,\r\n        ...updates\r\n      }),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `فشل في تحديث المجمع السكني: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`فشل في تحديث المجمع السكني بالمعرف ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteComplex = async (id: string): Promise<void> => {\r\n  try {\r\n    const response = await fetch(`/api/housing?id=${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `فشل في حذف المجمع السكني: ${response.statusText}`);\r\n    }\r\n  } catch (error) {\r\n    console.error(`فشل في حذف المجمع السكني بالمعرف ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const testDatabaseConnection = async (): Promise<boolean> => {\r\n  try {\r\n    const response = await fetch('/api/housing', {\r\n      method: 'OPTIONS',\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      return false;\r\n    }\r\n    \r\n    const data = await response.json();\r\n    return data.success;\r\n  } catch (error) {\r\n    console.error('فشل في اختبار الاتصال بقاعدة البيانات:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Building Operations\r\nexport const getBuildings = async (complexId?: string): Promise<Building[]> => {\r\n  try {\r\n    const url = complexId ? `/api/housing/buildings?complexId=${complexId}` : '/api/housing/buildings';\r\n    const response = await fetch(url);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`فشل في جلب المباني: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('فشل في جلب المباني:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getBuildingById = async (id: string): Promise<Building | null> => {\r\n  try {\r\n    const response = await fetch(`/api/housing/buildings/${id}`);\r\n    \r\n    if (response.status === 404) {\r\n      return null;\r\n    }\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`فشل في جلب المبنى: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`فشل في جلب المبنى بالمعرف ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createBuilding = async (building: Omit<Building, 'id'>): Promise<Building> => {\r\n  try {\r\n    const response = await fetch('/api/housing/buildings', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(building),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `فشل في إنشاء المبنى: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('فشل في إنشاء مبنى جديد:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateBuilding = async (id: string, updates: Partial<Building>): Promise<Building> => {\r\n  try {\r\n    const response = await fetch('/api/housing/buildings', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        id,\r\n        ...updates\r\n      }),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `فشل في تحديث المبنى: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`فشل في تحديث المبنى بالمعرف ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteBuilding = async (id: string): Promise<void> => {\r\n  try {\r\n    const response = await fetch(`/api/housing/buildings?id=${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `فشل في حذف المبنى: ${response.statusText}`);\r\n    }\r\n  } catch (error) {\r\n    console.error(`فشل في حذف المبنى بالمعرف ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Room Operations\r\nexport const getRooms = async (buildingId?: string): Promise<Room[]> => {\r\n  try {\r\n    const url = buildingId ? `/api/housing/rooms?buildingId=${buildingId}` : '/api/housing/rooms';\r\n    \r\n    console.log(`Fetching rooms from ${url}`);\r\n    const response = await fetch(url, {\r\n      // Adding cache: no-store to prevent caching issues\r\n      cache: 'no-store'\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      let errorMessage;\r\n      try {\r\n        // Try to parse as JSON\r\n        const errorData = JSON.parse(errorText);\r\n        errorMessage = errorData.error || response.statusText;\r\n      } catch {\r\n        // If not JSON, use as plain text\r\n        errorMessage = errorText || response.statusText;\r\n      }\r\n      \r\n      console.error(`Error response from rooms API: ${errorMessage}`);\r\n      throw new Error(`فشل في جلب الغرف: ${errorMessage}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Map database schema to the expected Room interface if needed\r\n    return data.map((room: any) => ({\r\n      id: room.id,\r\n      building_id: room.building_id,\r\n      room_number: room.room_number,\r\n      type: room.type,\r\n      status: room.status || 'available',\r\n      floor: room.floor,\r\n      // Add other expected fields with defaults\r\n      name: room.room_number // Use room_number as name if not present\r\n    }));\r\n  } catch (error: any) {\r\n    console.error('فشل في جلب الغرف:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Facility Operations\r\nexport const getFacilities = async (complexId?: string, buildingId?: string): Promise<Facility[]> => {\r\n  try {\r\n    let url = '/api/housing/facilities';\r\n    const params = new URLSearchParams();\r\n    \r\n    if (complexId) params.append('complexId', complexId);\r\n    if (buildingId) params.append('buildingId', buildingId);\r\n    \r\n    if (params.toString()) {\r\n      url += `?${params.toString()}`;\r\n    }\r\n    \r\n    console.log(`Fetching facilities from ${url}`);\r\n    const response = await fetch(url, {\r\n      // Adding cache: no-store to prevent caching issues\r\n      cache: 'no-store' \r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      let errorMessage;\r\n      try {\r\n        // Try to parse as JSON\r\n        const errorData = JSON.parse(errorText);\r\n        errorMessage = errorData.error || response.statusText;\r\n      } catch {\r\n        // If not JSON, use as plain text\r\n        errorMessage = errorText || response.statusText;\r\n      }\r\n      \r\n      console.error(`Error response from facilities API: ${errorMessage}`);\r\n      throw new Error(`فشل في جلب المرافق: ${errorMessage}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Map database schema to the expected Facility interface if needed\r\n    return data.map((facility: any) => ({\r\n      id: facility.id,\r\n      complex_id: facility.complex_id,\r\n      building_id: facility.building_id,\r\n      name: facility.name,\r\n      type: facility.type,\r\n      location_description: facility.location_description\r\n    }));\r\n  } catch (error: any) {\r\n    console.error('فشل في جلب المرافق:', error);\r\n    throw error;\r\n  }\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 693, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/app/api/server-actions/housing-actions.ts"],"sourcesContent":["'use server';\r\n\r\nimport { \r\n  getComplexes,\r\n  getComplexById,\r\n  createComplex,\r\n  updateComplex,\r\n  getBuildings,\r\n  getBuildingById,\r\n  createBuilding,\r\n  updateBuilding,\r\n  getRooms,\r\n  getFacilities\r\n} from '@/lib/services/housingService';\r\nimport { HousingComplex, Building, Room, Facility } from '@/models/types';\r\n\r\n// إجراءات المجمعات السكنية\r\nexport async function getComplexesAction() {\r\n  try {\r\n    const complexes = await getComplexes();\r\n    return { data: complexes, error: null };\r\n  } catch (error: any) {\r\n    console.error('خطأ في جلب المجمعات السكنية:', error);\r\n    return { data: [], error: `فشل في جلب المجمعات السكنية: ${error.message || 'خطأ غير معروف'}` };\r\n  }\r\n}\r\n\r\nexport async function getComplexByIdAction(id: string) {\r\n  try {\r\n    const complex = await getComplexById(id);\r\n    return { data: complex, error: null };\r\n  } catch (error: any) {\r\n    console.error(`خطأ في جلب المجمع السكني رقم ${id}:`, error);\r\n    return { data: null, error: `فشل في جلب المجمع السكني: ${error.message || 'خطأ غير معروف'}` };\r\n  }\r\n}\r\n\r\nexport async function createComplexAction(complex: Omit<HousingComplex, 'id'>) {\r\n  try {\r\n    const newComplex = await createComplex(complex);\r\n    return { data: newComplex, error: null };\r\n  } catch (error: any) {\r\n    console.error('خطأ في إنشاء مجمع سكني جديد:', error);\r\n    return { data: null, error: `فشل في إنشاء المجمع السكني: ${error.message || 'خطأ غير معروف'}` };\r\n  }\r\n}\r\n\r\nexport async function updateComplexAction(id: string, updates: Partial<HousingComplex>) {\r\n  try {\r\n    const updatedComplex = await updateComplex(id, updates);\r\n    return { data: updatedComplex, error: null };\r\n  } catch (error: any) {\r\n    console.error(`خطأ في تحديث المجمع السكني رقم ${id}:`, error);\r\n    return { data: null, error: `فشل في تحديث المجمع السكني: ${error.message || 'خطأ غير معروف'}` };\r\n  }\r\n}\r\n\r\n// إجراءات المباني\r\nexport async function getBuildingsAction(complexId?: string) {\r\n  try {\r\n    const buildings = await getBuildings(complexId);\r\n    return { data: buildings, error: null };\r\n  } catch (error: any) {\r\n    console.error('خطأ في جلب المباني:', error);\r\n    return { data: [], error: `فشل في جلب المباني: ${error.message || 'خطأ غير معروف'}` };\r\n  }\r\n}\r\n\r\nexport async function getBuildingByIdAction(id: string) {\r\n  try {\r\n    const building = await getBuildingById(id);\r\n    return { data: building, error: null };\r\n  } catch (error: any) {\r\n    console.error(`خطأ في جلب المبنى رقم ${id}:`, error);\r\n    return { data: null, error: `فشل في جلب المبنى: ${error.message || 'خطأ غير معروف'}` };\r\n  }\r\n}\r\n\r\nexport async function createBuildingAction(building: Omit<Building, 'id'>) {\r\n  try {\r\n    const newBuilding = await createBuilding(building);\r\n    return { data: newBuilding, error: null };\r\n  } catch (error: any) {\r\n    console.error('خطأ في إنشاء مبنى جديد:', error);\r\n    return { data: null, error: `فشل في إنشاء المبنى: ${error.message || 'خطأ غير معروف'}` };\r\n  }\r\n}\r\n\r\nexport async function updateBuildingAction(id: string, updates: Partial<Building>) {\r\n  try {\r\n    const updatedBuilding = await updateBuilding(id, updates);\r\n    return { data: updatedBuilding, error: null };\r\n  } catch (error: any) {\r\n    console.error(`خطأ في تحديث المبنى رقم ${id}:`, error);\r\n    return { data: null, error: `فشل في تحديث المبنى: ${error.message || 'خطأ غير معروف'}` };\r\n  }\r\n}\r\n\r\n// إجراءات الغرف والمرافق\r\nexport async function getRoomsAction(buildingId?: string) {\r\n  try {\r\n    const rooms = await getRooms(buildingId);\r\n    return { data: rooms, error: null };\r\n  } catch (error: any) {\r\n    console.error('خطأ في جلب الغرف:', error);\r\n    return { data: [], error: `فشل في جلب الغرف: ${error.message || 'خطأ غير معروف'}` };\r\n  }\r\n}\r\n\r\nexport async function getFacilitiesAction(complexId?: string, buildingId?: string) {\r\n  try {\r\n    const facilities = await getFacilities(complexId, buildingId);\r\n    return { data: facilities, error: null };\r\n  } catch (error: any) {\r\n    console.error('خطأ في جلب المرافق:', error);\r\n    return { data: [], error: `فشل في جلب المرافق: ${error.message || 'خطأ غير معروف'}` };\r\n  }\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 891, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/.next-internal/server/app/maintenance/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getMaintenanceRequestsAction as '70bb6ee1ec2b889e82cd193d1be01daa9a9933b2af'} from 'ACTIONS_MODULE0'\nexport {getComplexesAction as '00bb2d82c6928939996d181af8789efc1543424a70'} from 'ACTIONS_MODULE1'\nexport {getBuildingsAction as '4068c37e97217c3e9e4ef4b719b483eb451ec8170b'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 969, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/app/maintenance/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/maintenance/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/maintenance/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgS,GAC7T,8DACA","debugId":null}},
    {"offset": {"line": 983, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/app/maintenance/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/maintenance/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/maintenance/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4Q,GACzS,0CACA","debugId":null}},
    {"offset": {"line": 997, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}