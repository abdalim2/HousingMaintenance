{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/components/Navigation.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { usePathname } from 'next/navigation';\r\n\r\n// Icons for the navigation menu (using heroicons style)\r\nconst DashboardIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n    <path d=\"M2 10a8 8 0 018-8v8h8a8 8 0 11-16 0z\" />\r\n    <path d=\"M12 2.252A8.014 8.014 0 0117.748 8H12V2.252z\" />\r\n  </svg>\r\n);\r\n\r\nconst BuildingIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\r\n  </svg>\r\n);\r\n\r\nconst HousingComplexIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 14v3m4-3v3m4-3v3M3 21h18M3 10h18M3 7l9-4 9 4M4 10h16v11H4V10z\" />\r\n  </svg>\r\n);\r\n\r\nconst ToolsIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n  </svg>\r\n);\r\n\r\nconst BoxIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\" />\r\n  </svg>\r\n);\r\n\r\nconst CartIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n  </svg>\r\n);\r\n\r\nconst ReportIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n  </svg>\r\n);\r\n\r\nconst MenuIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n  </svg>\r\n);\r\n\r\nconst CloseIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n  </svg>\r\n);\r\n\r\nconst MoonIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" />\r\n  </svg>\r\n);\r\n\r\nconst SunIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\r\n  </svg>\r\n);\r\n\r\nconst navItems = [\r\n  {\r\n    name: 'لوحة التحكم',\r\n    href: '/',\r\n    icon: <DashboardIcon />,\r\n    description: 'نظرة عامة على النظام',\r\n  },\r\n  {\r\n    name: 'السكنات',\r\n    href: '/housing',\r\n    icon: <BuildingIcon />,\r\n    description: 'إدارة مباني السكن',\r\n  },\r\n  {\r\n    name: 'إدارة المجمعات',\r\n    href: '/housing/management',\r\n    icon: <HousingComplexIcon />,\r\n    description: 'هيكلة المجمعات السكنية',\r\n  },\r\n  {\r\n    name: 'طلبات الصيانة',\r\n    href: '/maintenance',\r\n    icon: <ToolsIcon />,\r\n    description: 'إدارة طلبات صيانة المرافق',\r\n  },\r\n  {\r\n    name: 'المخزون',\r\n    href: '/inventory',\r\n    icon: <BoxIcon />,\r\n    description: 'إدارة المخزون والأصناف',\r\n  },\r\n  {\r\n    name: 'طلبات الشراء',\r\n    href: '/purchase-orders',\r\n    icon: <CartIcon />,\r\n    description: 'إدارة عمليات الشراء',\r\n  },\r\n  {\r\n    name: 'التقارير',\r\n    href: '/reports',\r\n    icon: <ReportIcon />,\r\n    description: 'تقارير وإحصائيات النظام',\r\n  },\r\n];\r\n\r\nexport default function Navigation() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isCollapsed, setIsCollapsed] = useState(false);\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const pathname = usePathname();\r\n\r\n  // Handle dark mode preference\r\n  useEffect(() => {\r\n    // Check for user preference in local storage\r\n    const storedDarkMode = localStorage.getItem('darkMode') === 'true';\r\n    // Check for system preference\r\n    const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n    \r\n    setIsDarkMode(storedDarkMode ?? systemPrefersDark);\r\n    \r\n    if (storedDarkMode || (!storedDarkMode && systemPrefersDark)) {\r\n      document.documentElement.classList.add('dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n    }\r\n  }, []);\r\n\r\n  const toggleDarkMode = () => {\r\n    const newDarkMode = !isDarkMode;\r\n    setIsDarkMode(newDarkMode);\r\n    localStorage.setItem('darkMode', newDarkMode.toString());\r\n    \r\n    if (newDarkMode) {\r\n      document.documentElement.classList.add('dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n    }\r\n  };\r\n\r\n  const toggleMenu = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const toggleCollapse = () => {\r\n    setIsCollapsed(!isCollapsed);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Mobile Menu Button - Right side fixed */}\r\n      <button\r\n        type=\"button\"\r\n        className=\"lg:hidden fixed top-4 right-4 z-40 p-2 rounded-md bg-primary-600 text-white shadow-md\"\r\n        onClick={toggleMenu}\r\n        aria-label={isOpen ? \"أغلق القائمة\" : \"افتح القائمة\"}\r\n      >\r\n        {isOpen ? <CloseIcon /> : <MenuIcon />}\r\n      </button>\r\n\r\n      {/* Dark Mode Toggle Button - Left side fixed */}\r\n      <button\r\n        type=\"button\"\r\n        className=\"fixed top-4 left-4 z-40 p-2 rounded-md bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 shadow-md transition-colors duration-200\"\r\n        onClick={toggleDarkMode}\r\n        aria-label={isDarkMode ? \"تفعيل الوضع النهاري\" : \"تفعيل الوضع الليلي\"}\r\n      >\r\n        {isDarkMode ? <SunIcon /> : <MoonIcon />}\r\n      </button>\r\n\r\n      {/* Sidebar Navigation */}\r\n      <aside\r\n        className={`sidebar ${isCollapsed ? 'sidebar-collapsed' : ''} ${\r\n          isOpen ? 'translate-x-0' : 'translate-x-full lg:translate-x-0'\r\n        } shadow-nav z-30 fixed inset-y-0 right-0 transition-all duration-300 ease-in-out`}\r\n      >\r\n        <div className=\"flex flex-col h-full\">\r\n          {/* Header/Logo Section */}\r\n          <div className=\"p-4 border-b border-gray-800\">\r\n            <div className={`flex items-center ${isCollapsed ? 'justify-center' : 'justify-between'}`}>\r\n              {!isCollapsed && (\r\n                <h1 className=\"text-lg font-bold\">نظام إدارة المجمعات</h1>\r\n              )}\r\n              <button\r\n                onClick={toggleCollapse}\r\n                className=\"p-2 rounded-md hover:bg-gray-800 lg:flex hidden items-center justify-center\"\r\n                aria-label={isCollapsed ? \"توسيع القائمة\" : \"طي القائمة\"}\r\n              >\r\n                {isCollapsed ? (\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 5l7 7-7 7M5 5l7 7-7 7\" />\r\n                  </svg>\r\n                ) : (\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 19l-7-7 7-7m8 14l-7-7 7-7\" />\r\n                  </svg>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Navigation Links */}\r\n          <nav className=\"flex-grow py-5 overflow-y-auto\">\r\n            <ul className=\"space-y-1.5 px-3\">\r\n              {navItems.map((item) => {\r\n                const isActive = pathname === item.href;\r\n                return (\r\n                  <li key={item.href}>\r\n                    <Link \r\n                      href={item.href}\r\n                      className={`nav-link ${isActive ? 'nav-link-active' : ''} ${isCollapsed ? 'justify-center' : ''}`}\r\n                      title={isCollapsed ? item.name : ''}\r\n                    >\r\n                      <span className={`${isCollapsed ? '' : 'ml-3'}`}>{item.icon}</span>\r\n                      {!isCollapsed && (\r\n                        <>\r\n                          <span>{item.name}</span>\r\n                          {isActive && (\r\n                            <span className=\"absolute inset-y-0 right-0 w-1 bg-primary-500 rounded-tr-md rounded-br-md\" aria-hidden=\"true\"></span>\r\n                          )}\r\n                        </>\r\n                      )}\r\n                    </Link>\r\n                    {/* Tooltip for collapsed mode */}\r\n                    {isCollapsed && isActive && (\r\n                      <span className=\"absolute inset-y-0 right-0 w-1 bg-primary-500 rounded-tr-md rounded-br-md\" aria-hidden=\"true\"></span>\r\n                    )}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </nav>\r\n          \r\n          {/* Footer Section */}\r\n          <div className={`mt-auto p-4 border-t border-gray-800 ${isCollapsed ? 'text-center' : ''}`}>\r\n            {!isCollapsed && (\r\n              <p className=\"text-xs text-gray-400\">© {new Date().getFullYear()} نظام إدارة المجمعات السكنية</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </aside>\r\n\r\n      {/* Overlay for mobile */}\r\n      {isOpen && (\r\n        <div \r\n          className=\"lg:hidden fixed inset-0 bg-black/50 z-20 backdrop-blur-sm\"\r\n          onClick={toggleMenu} \r\n          aria-hidden=\"true\"\r\n        />\r\n      )}\r\n\r\n      {/* Spacer for fixed sidebar on desktop */}\r\n      <div className={`hidden lg:block ${isCollapsed ? 'w-16' : 'w-64'} transition-all duration-300`} />\r\n    </>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,wDAAwD;AACxD,MAAM,gBAAgB,kBACpB,8OAAC;QAAI,OAAM;QAA6B,WAAU;QAAU,SAAQ;QAAY,MAAK;;0BACnF,8OAAC;gBAAK,GAAE;;;;;;0BACR,8OAAC;gBAAK,GAAE;;;;;;;;;;;;AAIZ,MAAM,eAAe,kBACnB,8OAAC;QAAI,OAAM;QAA6B,WAAU;QAAU,MAAK;QAAO,SAAQ;QAAY,QAAO;kBACjG,cAAA,8OAAC;YAAK,eAAc;YAAQ,gBAAe;YAAQ,aAAa;YAAG,GAAE;;;;;;;;;;;AAIzE,MAAM,qBAAqB,kBACzB,8OAAC;QAAI,OAAM;QAA6B,WAAU;QAAU,MAAK;QAAO,SAAQ;QAAY,QAAO;kBACjG,cAAA,8OAAC;YAAK,eAAc;YAAQ,gBAAe;YAAQ,aAAa;YAAG,GAAE;;;;;;;;;;;AAIzE,MAAM,YAAY,kBAChB,8OAAC;QAAI,OAAM;QAA6B,WAAU;QAAU,MAAK;QAAO,SAAQ;QAAY,QAAO;;0BACjG,8OAAC;gBAAK,eAAc;gBAAQ,gBAAe;gBAAQ,aAAa;gBAAG,GAAE;;;;;;0BACrE,8OAAC;gBAAK,eAAc;gBAAQ,gBAAe;gBAAQ,aAAa;gBAAG,GAAE;;;;;;;;;;;;AAIzE,MAAM,UAAU,kBACd,8OAAC;QAAI,OAAM;QAA6B,WAAU;QAAU,MAAK;QAAO,SAAQ;QAAY,QAAO;kBACjG,cAAA,8OAAC;YAAK,eAAc;YAAQ,gBAAe;YAAQ,aAAa;YAAG,GAAE;;;;;;;;;;;AAIzE,MAAM,WAAW,kBACf,8OAAC;QAAI,OAAM;QAA6B,WAAU;QAAU,MAAK;QAAO,SAAQ;QAAY,QAAO;kBACjG,cAAA,8OAAC;YAAK,eAAc;YAAQ,gBAAe;YAAQ,aAAa;YAAG,GAAE;;;;;;;;;;;AAIzE,MAAM,aAAa,kBACjB,8OAAC;QAAI,OAAM;QAA6B,WAAU;QAAU,MAAK;QAAO,SAAQ;QAAY,QAAO;kBACjG,cAAA,8OAAC;YAAK,eAAc;YAAQ,gBAAe;YAAQ,aAAa;YAAG,GAAE;;;;;;;;;;;AAIzE,MAAM,WAAW,kBACf,8OAAC;QAAI,OAAM;QAA6B,WAAU;QAAU,MAAK;QAAO,SAAQ;QAAY,QAAO;kBACjG,cAAA,8OAAC;YAAK,eAAc;YAAQ,gBAAe;YAAQ,aAAa;YAAG,GAAE;;;;;;;;;;;AAIzE,MAAM,YAAY,kBAChB,8OAAC;QAAI,OAAM;QAA6B,WAAU;QAAU,MAAK;QAAO,SAAQ;QAAY,QAAO;kBACjG,cAAA,8OAAC;YAAK,eAAc;YAAQ,gBAAe;YAAQ,aAAa;YAAG,GAAE;;;;;;;;;;;AAIzE,MAAM,WAAW,kBACf,8OAAC;QAAI,OAAM;QAA6B,WAAU;QAAU,MAAK;QAAO,SAAQ;QAAY,QAAO;kBACjG,cAAA,8OAAC;YAAK,eAAc;YAAQ,gBAAe;YAAQ,aAAa;YAAG,GAAE;;;;;;;;;;;AAIzE,MAAM,UAAU,kBACd,8OAAC;QAAI,OAAM;QAA6B,WAAU;QAAU,MAAK;QAAO,SAAQ;QAAY,QAAO;kBACjG,cAAA,8OAAC;YAAK,eAAc;YAAQ,gBAAe;YAAQ,aAAa;YAAG,GAAE;;;;;;;;;;;AAIzE,MAAM,WAAW;IACf;QACE,MAAM;QACN,MAAM;QACN,oBAAM,8OAAC;;;;;QACP,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,oBAAM,8OAAC;;;;;QACP,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,oBAAM,8OAAC;;;;;QACP,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,oBAAM,8OAAC;;;;;QACP,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,oBAAM,8OAAC;;;;;QACP,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,oBAAM,8OAAC;;;;;QACP,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,oBAAM,8OAAC;;;;;QACP,aAAa;IACf;CACD;AAEc,SAAS;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAE3B,8BAA8B;IAC9B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,6CAA6C;QAC7C,MAAM,iBAAiB,aAAa,OAAO,CAAC,gBAAgB;QAC5D,8BAA8B;QAC9B,MAAM,oBAAoB,OAAO,UAAU,CAAC,gCAAgC,OAAO;QAEnF,cAAc,kBAAkB;QAEhC,IAAI,kBAAmB,CAAC,kBAAkB,mBAAoB;YAC5D,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;QACzC,OAAO;YACL,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC;QAC5C;IACF,GAAG,EAAE;IAEL,MAAM,iBAAiB;QACrB,MAAM,cAAc,CAAC;QACrB,cAAc;QACd,aAAa,OAAO,CAAC,YAAY,YAAY,QAAQ;QAErD,IAAI,aAAa;YACf,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;QACzC,OAAO;YACL,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC;QAC5C;IACF;IAEA,MAAM,aAAa;QACjB,UAAU,CAAC;IACb;IAEA,MAAM,iBAAiB;QACrB,eAAe,CAAC;IAClB;IAEA,qBACE;;0BAEE,8OAAC;gBACC,MAAK;gBACL,WAAU;gBACV,SAAS;gBACT,cAAY,SAAS,iBAAiB;0BAErC,uBAAS,8OAAC;;;;yCAAe,8OAAC;;;;;;;;;;0BAI7B,8OAAC;gBACC,MAAK;gBACL,WAAU;gBACV,SAAS;gBACT,cAAY,aAAa,wBAAwB;0BAEhD,2BAAa,8OAAC;;;;yCAAa,8OAAC;;;;;;;;;;0BAI/B,8OAAC;gBACC,WAAW,CAAC,QAAQ,EAAE,cAAc,sBAAsB,GAAG,CAAC,EAC5D,SAAS,kBAAkB,oCAC5B,gFAAgF,CAAC;0BAElF,cAAA,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAW,CAAC,kBAAkB,EAAE,cAAc,mBAAmB,mBAAmB;;oCACtF,CAAC,6BACA,8OAAC;wCAAG,WAAU;kDAAoB;;;;;;kDAEpC,8OAAC;wCACC,SAAS;wCACT,WAAU;wCACV,cAAY,cAAc,kBAAkB;kDAE3C,4BACC,8OAAC;4CAAI,OAAM;4CAA6B,WAAU;4CAAU,MAAK;4CAAO,SAAQ;4CAAY,QAAO;sDACjG,cAAA,8OAAC;gDAAK,eAAc;gDAAQ,gBAAe;gDAAQ,aAAa;gDAAG,GAAE;;;;;;;;;;iEAGvE,8OAAC;4CAAI,OAAM;4CAA6B,WAAU;4CAAU,MAAK;4CAAO,SAAQ;4CAAY,QAAO;sDACjG,cAAA,8OAAC;gDAAK,eAAc;gDAAQ,gBAAe;gDAAQ,aAAa;gDAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAQ/E,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAG,WAAU;0CACX,SAAS,GAAG,CAAC,CAAC;oCACb,MAAM,WAAW,aAAa,KAAK,IAAI;oCACvC,qBACE,8OAAC;;0DACC,8OAAC,4JAAA,CAAA,UAAI;gDACH,MAAM,KAAK,IAAI;gDACf,WAAW,CAAC,SAAS,EAAE,WAAW,oBAAoB,GAAG,CAAC,EAAE,cAAc,mBAAmB,IAAI;gDACjG,OAAO,cAAc,KAAK,IAAI,GAAG;;kEAEjC,8OAAC;wDAAK,WAAW,GAAG,cAAc,KAAK,QAAQ;kEAAG,KAAK,IAAI;;;;;;oDAC1D,CAAC,6BACA;;0EACE,8OAAC;0EAAM,KAAK,IAAI;;;;;;4DACf,0BACC,8OAAC;gEAAK,WAAU;gEAA4E,eAAY;;;;;;;;;;;;;;4CAM/G,eAAe,0BACd,8OAAC;gDAAK,WAAU;gDAA4E,eAAY;;;;;;;uCAlBnG,KAAK,IAAI;;;;;gCAsBtB;;;;;;;;;;;sCAKJ,8OAAC;4BAAI,WAAW,CAAC,qCAAqC,EAAE,cAAc,gBAAgB,IAAI;sCACvF,CAAC,6BACA,8OAAC;gCAAE,WAAU;;oCAAwB;oCAAG,IAAI,OAAO,WAAW;oCAAG;;;;;;;;;;;;;;;;;;;;;;;YAOxE,wBACC,8OAAC;gBACC,WAAU;gBACV,SAAS;gBACT,eAAY;;;;;;0BAKhB,8OAAC;gBAAI,WAAW,CAAC,gBAAgB,EAAE,cAAc,SAAS,OAAO,4BAA4B,CAAC;;;;;;;;AAGpG","debugId":null}},
    {"offset": {"line": 699, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\n// Initialize the Supabase client with proper Supabase URL and key\r\nconst supabaseUrl = 'https://mticvmyfrdmciaeipfxu.supabase.co';\r\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im10aWN2bXlmcmRtY2lhZWlwZnh1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDEwODc1OTMsImV4cCI6MjA1NjY2MzU5M30.6iudxBl6js0heW1mhoSmcXegTIN_lAN2GiFeA3plSIo';\r\n\r\n// Create the Supabase client\r\nexport const supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\n// Store PostgreSQL direct connection URL for database initialization scripts\r\nexport const postgresUrl = 'postgresql://HousingMaintenance_owner:npg_fC8S4bpZLsJw@ep-weathered-meadow-a44a1v3i-pooler.us-east-1.aws.neon.tech/HousingMaintenance?sslmode=require';"],"names":[],"mappings":";;;;AAAA;;AAEA,kEAAkE;AAClE,MAAM,cAAc;AACpB,MAAM,cAAc;AAGb,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AAG3C,MAAM,cAAc","debugId":null}},
    {"offset": {"line": 716, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/services/maintenanceService.ts"],"sourcesContent":["import { supabase } from '../supabase';\r\nimport { MaintenanceRequest, MaintenanceItem } from '@/models/types';\r\n\r\n// Function to check if maintenance_requests table exists\r\nexport const checkMaintenanceTablesExist = async (): Promise<{ exists: boolean, message: string }> => {\r\n  try {\r\n    // Try to get just one record to check if the table exists\r\n    const { data, error } = await supabase.from('maintenance_requests').select('id').limit(1);\r\n    \r\n    if (error) {\r\n      if (error.message.includes('does not exist')) {\r\n        return { \r\n          exists: false, \r\n          message: 'The maintenance_requests table does not exist. Database initialization is required.' \r\n        };\r\n      }\r\n      \r\n      return { \r\n        exists: false, \r\n        message: `Error checking table: ${error.message}` \r\n      };\r\n    }\r\n    \r\n    return { exists: true, message: 'Table exists and is accessible' };\r\n  } catch (err: any) {\r\n    return { \r\n      exists: false, \r\n      message: `Error checking maintenance tables: ${err.message}`\r\n    };\r\n  }\r\n};\r\n\r\n// Maintenance Request Operations\r\nexport const getMaintenanceRequests = async (\r\n  complexId?: string, \r\n  buildingId?: string, \r\n  status?: MaintenanceRequest['status']\r\n): Promise<MaintenanceRequest[]> => {\r\n  try {\r\n    // Check if table exists first\r\n    const tableStatus = await checkMaintenanceTablesExist();\r\n    if (!tableStatus.exists) {\r\n      console.warn(`Table check warning: ${tableStatus.message}`);\r\n      return []; // Return empty array instead of throwing\r\n    }\r\n    \r\n    let query = supabase.from('maintenance_requests').select('*');\r\n    \r\n    if (complexId) {\r\n      query = query.eq('complex_id', complexId);\r\n    }\r\n    \r\n    if (buildingId) {\r\n      query = query.eq('building_id', buildingId);\r\n    }\r\n    \r\n    if (status) {\r\n      query = query.eq('status', status);\r\n    }\r\n    \r\n    const { data, error } = await query.order('reported_date', { ascending: false });\r\n    \r\n    if (error) {\r\n      console.error('Supabase error in getMaintenanceRequests:', error);\r\n      return []; // Return empty array on error\r\n    }\r\n    \r\n    return data || [];\r\n  } catch (err) {\r\n    console.error('Error in getMaintenanceRequests:', err);\r\n    return []; // Return empty array on error\r\n  }\r\n};\r\n\r\nexport const getMaintenanceRequestById = async (id: string): Promise<MaintenanceRequest | null> => {\r\n  try {\r\n    // Check if table exists first\r\n    const tableStatus = await checkMaintenanceTablesExist();\r\n    if (!tableStatus.exists) {\r\n      console.warn(`Table check warning: ${tableStatus.message}`);\r\n      return null;\r\n    }\r\n\r\n    const { data, error } = await supabase\r\n      .from('maintenance_requests')\r\n      .select('*')\r\n      .eq('id', id)\r\n      .single();\r\n    \r\n    if (error) {\r\n      console.error('Error fetching maintenance request:', error);\r\n      return null;\r\n    }\r\n    \r\n    return data;\r\n  } catch (err) {\r\n    console.error('Error in getMaintenanceRequestById:', err);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const createMaintenanceRequest = async (\r\n  request: Omit<MaintenanceRequest, 'id' | 'reported_date'>\r\n): Promise<MaintenanceRequest> => {\r\n  try {\r\n    // Check if table exists first\r\n    const tableStatus = await checkMaintenanceTablesExist();\r\n    if (!tableStatus.exists) {\r\n      throw new Error(`Cannot create maintenance request: ${tableStatus.message}`);\r\n    }\r\n    \r\n    const newRequest = {\r\n      ...request,\r\n      reported_date: new Date().toISOString(),\r\n      status: request.status || 'pending'\r\n    };\r\n\r\n    const { data, error } = await supabase\r\n      .from('maintenance_requests')\r\n      .insert([newRequest])\r\n      .select()\r\n      .single();\r\n    \r\n    if (error) throw error;\r\n    return data;\r\n  } catch (err: any) {\r\n    console.error('Error creating maintenance request:', err);\r\n    throw new Error(`Failed to create maintenance request: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const updateMaintenanceRequest = async (\r\n  id: string, \r\n  updates: Partial<MaintenanceRequest>\r\n): Promise<MaintenanceRequest> => {\r\n  try {\r\n    // Check if table exists first\r\n    const tableStatus = await checkMaintenanceTablesExist();\r\n    if (!tableStatus.exists) {\r\n      throw new Error(`Cannot update maintenance request: ${tableStatus.message}`);\r\n    }\r\n\r\n    const { data, error } = await supabase\r\n      .from('maintenance_requests')\r\n      .update(updates)\r\n      .eq('id', id)\r\n      .select()\r\n      .single();\r\n    \r\n    if (error) throw error;\r\n    return data;\r\n  } catch (err: any) {\r\n    console.error('Error updating maintenance request:', err);\r\n    throw new Error(`Failed to update maintenance request: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const deleteMaintenanceRequest = async (id: string): Promise<void> => {\r\n  try {\r\n    // Check if table exists first\r\n    const tableStatus = await checkMaintenanceTablesExist();\r\n    if (!tableStatus.exists) {\r\n      throw new Error(`Cannot delete maintenance request: ${tableStatus.message}`);\r\n    }\r\n\r\n    const { error } = await supabase\r\n      .from('maintenance_requests')\r\n      .delete()\r\n      .eq('id', id);\r\n    \r\n    if (error) throw error;\r\n  } catch (err: any) {\r\n    console.error('Error deleting maintenance request:', err);\r\n    throw new Error(`Failed to delete maintenance request: ${err.message}`);\r\n  }\r\n};\r\n\r\n// Maintenance Items Operations\r\nexport const getMaintenanceItems = async (\r\n  maintenanceId: string\r\n): Promise<MaintenanceItem[]> => {\r\n  const { data, error } = await supabase\r\n    .from('maintenance_items')\r\n    .select('*')\r\n    .eq('maintenance_id', maintenanceId);\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};\r\n\r\nexport const getMaintenanceItemById = async (id: string): Promise<MaintenanceItem | null> => {\r\n  const { data, error } = await supabase\r\n    .from('maintenance_items')\r\n    .select('*')\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const createMaintenanceItem = async (\r\n  item: Omit<MaintenanceItem, 'id'>\r\n): Promise<MaintenanceItem> => {\r\n  const { data, error } = await supabase\r\n    .from('maintenance_items')\r\n    .insert([item])\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updateMaintenanceItem = async (\r\n  id: string, \r\n  updates: Partial<MaintenanceItem>\r\n): Promise<MaintenanceItem> => {\r\n  const { data, error } = await supabase\r\n    .from('maintenance_items')\r\n    .update(updates)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const deleteMaintenanceItem = async (id: string): Promise<void> => {\r\n  const { error } = await supabase\r\n    .from('maintenance_items')\r\n    .delete()\r\n    .eq('id', id);\r\n  \r\n  if (error) throw error;\r\n};\r\n\r\n// Get maintenance requests for monthly summary\r\nexport const getMonthlyMaintenanceRequests = async (\r\n  year: number,\r\n  month: number\r\n): Promise<MaintenanceRequest[]> => {\r\n  // Create start and end date for the specified month\r\n  const startDate = new Date(year, month - 1, 1).toISOString();\r\n  const endDate = new Date(year, month, 0).toISOString();\r\n  \r\n  const { data, error } = await supabase\r\n    .from('maintenance_requests')\r\n    .select('*')\r\n    .gte('reported_date', startDate)\r\n    .lte('reported_date', endDate);\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 900, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/services/inventoryService.ts"],"sourcesContent":["import { supabase } from '../supabase';\r\nimport { Category, Item, Inventory } from '@/models/types';\r\n\r\n// Category Operations\r\nexport const getCategories = async (): Promise<Category[]> => {\r\n  const { data, error } = await supabase\r\n    .from('categories')\r\n    .select('*');\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};\r\n\r\nexport const getCategoryById = async (id: string): Promise<Category | null> => {\r\n  const { data, error } = await supabase\r\n    .from('categories')\r\n    .select('*')\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const createCategory = async (category: Omit<Category, 'id'>): Promise<Category> => {\r\n  const { data, error } = await supabase\r\n    .from('categories')\r\n    .insert([category])\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updateCategory = async (id: string, updates: Partial<Category>): Promise<Category> => {\r\n  const { data, error } = await supabase\r\n    .from('categories')\r\n    .update(updates)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const deleteCategory = async (id: string): Promise<void> => {\r\n  const { error } = await supabase\r\n    .from('categories')\r\n    .delete()\r\n    .eq('id', id);\r\n  \r\n  if (error) throw error;\r\n};\r\n\r\n// Item Operations\r\nexport const getItems = async (categoryId?: string): Promise<Item[]> => {\r\n  let query = supabase.from('items').select('*');\r\n  \r\n  if (categoryId) {\r\n    query = query.eq('category_id', categoryId);\r\n  }\r\n  \r\n  const { data, error } = await query;\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};\r\n\r\nexport const getItemById = async (id: string): Promise<Item | null> => {\r\n  const { data, error } = await supabase\r\n    .from('items')\r\n    .select('*')\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const createItem = async (item: Omit<Item, 'id'>): Promise<Item> => {\r\n  const { data, error } = await supabase\r\n    .from('items')\r\n    .insert([item])\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updateItem = async (id: string, updates: Partial<Item>): Promise<Item> => {\r\n  const { data, error } = await supabase\r\n    .from('items')\r\n    .update(updates)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const deleteItem = async (id: string): Promise<void> => {\r\n  const { error } = await supabase\r\n    .from('items')\r\n    .delete()\r\n    .eq('id', id);\r\n  \r\n  if (error) throw error;\r\n};\r\n\r\n// Inventory Operations\r\nexport const getInventory = async (itemId?: string): Promise<Inventory[]> => {\r\n  let query = supabase\r\n    .from('inventory')\r\n    .select(`\r\n      *,\r\n      items:item_id (\r\n        id,\r\n        name,\r\n        category_id,\r\n        unit\r\n      )\r\n    `);\r\n  \r\n  if (itemId) {\r\n    query = query.eq('item_id', itemId);\r\n  }\r\n  \r\n  const { data, error } = await query;\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};\r\n\r\nexport const getInventoryItemById = async (id: string): Promise<Inventory | null> => {\r\n  const { data, error } = await supabase\r\n    .from('inventory')\r\n    .select(`\r\n      *,\r\n      items:item_id (\r\n        id,\r\n        name,\r\n        category_id,\r\n        unit\r\n      )\r\n    `)\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updateInventoryQuantity = async (\r\n  itemId: string, \r\n  quantityChange: number\r\n): Promise<Inventory> => {\r\n  // First, get the current inventory item\r\n  const { data: currentInventory, error: fetchError } = await supabase\r\n    .from('inventory')\r\n    .select('*')\r\n    .eq('item_id', itemId)\r\n    .single();\r\n  \r\n  if (fetchError && fetchError.code !== 'PGRST116') {\r\n    // PGRST116 is the error code for \"no rows returned\"\r\n    throw fetchError;\r\n  }\r\n  \r\n  // If inventory item exists, update it\r\n  if (currentInventory) {\r\n    const newQuantity = currentInventory.quantity + quantityChange;\r\n    \r\n    if (newQuantity < 0) {\r\n      throw new Error('Insufficient inventory quantity');\r\n    }\r\n    \r\n    const { data, error } = await supabase\r\n      .from('inventory')\r\n      .update({\r\n        quantity: newQuantity,\r\n        last_updated: new Date().toISOString()\r\n      })\r\n      .eq('id', currentInventory.id)\r\n      .select()\r\n      .single();\r\n    \r\n    if (error) throw error;\r\n    return data;\r\n  } \r\n  // If inventory item does not exist, create it (only if adding quantity)\r\n  else if (quantityChange > 0) {\r\n    const { data, error } = await supabase\r\n      .from('inventory')\r\n      .insert([{\r\n        item_id: itemId,\r\n        quantity: quantityChange,\r\n        last_updated: new Date().toISOString()\r\n      }])\r\n      .select()\r\n      .single();\r\n    \r\n    if (error) throw error;\r\n    return data;\r\n  } else {\r\n    throw new Error('Cannot reduce quantity of non-existent inventory item');\r\n  }\r\n};\r\n\r\nexport const updateInventoryItem = async (\r\n  id: string, \r\n  updates: Partial<Inventory>\r\n): Promise<Inventory> => {\r\n  const updateData = {\r\n    ...updates,\r\n    last_updated: new Date().toISOString()\r\n  };\r\n  \r\n  const { data, error } = await supabase\r\n    .from('inventory')\r\n    .update(updateData)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const getLowStockItems = async (threshold: number = 10): Promise<Inventory[]> => {\r\n  const { data, error } = await supabase\r\n    .from('inventory')\r\n    .select(`\r\n      *,\r\n      items:item_id (\r\n        id,\r\n        name,\r\n        category_id,\r\n        unit\r\n      )\r\n    `)\r\n    .lte('quantity', threshold);\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1066, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/services/purchaseService.ts"],"sourcesContent":["import { supabase } from '../supabase';\r\nimport { PurchaseOrder, PurchaseItem } from '@/models/types';\r\n\r\n// Function to check if purchase_orders table exists\r\nexport const checkPurchaseTablesExist = async (): Promise<{ exists: boolean, message: string }> => {\r\n  try {\r\n    // Try to get just one record to check if the table exists\r\n    const { data, error } = await supabase.from('purchase_orders').select('id').limit(1);\r\n    \r\n    if (error) {\r\n      if (error.message.includes('does not exist')) {\r\n        return { \r\n          exists: false, \r\n          message: 'The purchase_orders table does not exist. Database initialization is required.' \r\n        };\r\n      }\r\n      \r\n      return { \r\n        exists: false, \r\n        message: `Error checking table: ${error.message}` \r\n      };\r\n    }\r\n    \r\n    return { exists: true, message: 'Purchase tables exist and are accessible' };\r\n  } catch (err: any) {\r\n    return { \r\n      exists: false, \r\n      message: `Error checking purchase tables: ${err.message}`\r\n    };\r\n  }\r\n};\r\n\r\n// Purchase Order Operations\r\nexport const getPurchaseOrders = async (\r\n  status?: PurchaseOrder['status']\r\n): Promise<PurchaseOrder[]> => {\r\n  try {\r\n    // Check if table exists first\r\n    const tableStatus = await checkPurchaseTablesExist();\r\n    if (!tableStatus.exists) {\r\n      console.warn(`Table check warning: ${tableStatus.message}`);\r\n      return []; // Return empty array instead of throwing\r\n    }\r\n    \r\n    let query = supabase.from('purchase_orders').select('*');\r\n    \r\n    if (status) {\r\n      query = query.eq('status', status);\r\n    }\r\n    \r\n    const { data, error } = await query.order('order_date', { ascending: false });\r\n    \r\n    if (error) {\r\n      console.error('Supabase error in getPurchaseOrders:', error);\r\n      return []; // Return empty array on error\r\n    }\r\n    \r\n    return data || [];\r\n  } catch (err) {\r\n    console.error('Error in getPurchaseOrders:', err);\r\n    return []; // Return empty array on error\r\n  }\r\n};\r\n\r\nexport const getPurchaseOrderById = async (id: string): Promise<PurchaseOrder | null> => {\r\n  try {\r\n    // Check if table exists first\r\n    const tableStatus = await checkPurchaseTablesExist();\r\n    if (!tableStatus.exists) {\r\n      console.warn(`Table check warning: ${tableStatus.message}`);\r\n      return null;\r\n    }\r\n\r\n    const { data, error } = await supabase\r\n      .from('purchase_orders')\r\n      .select('*')\r\n      .eq('id', id)\r\n      .single();\r\n    \r\n    if (error) {\r\n      console.error('Error fetching purchase order:', error);\r\n      return null;\r\n    }\r\n    \r\n    return data;\r\n  } catch (err) {\r\n    console.error('Error in getPurchaseOrderById:', err);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const createPurchaseOrder = async (\r\n  order: Omit<PurchaseOrder, 'id' | 'order_date'>\r\n): Promise<PurchaseOrder> => {\r\n  try {\r\n    // Check if table exists first\r\n    const tableStatus = await checkPurchaseTablesExist();\r\n    if (!tableStatus.exists) {\r\n      throw new Error(`Cannot create purchase order: ${tableStatus.message}`);\r\n    }\r\n    \r\n    const newOrder = {\r\n      ...order,\r\n      order_date: new Date().toISOString(),\r\n      status: order.status || 'draft'\r\n    };\r\n\r\n    const { data, error } = await supabase\r\n      .from('purchase_orders')\r\n      .insert([newOrder])\r\n      .select()\r\n      .single();\r\n    \r\n    if (error) throw error;\r\n    return data;\r\n  } catch (err: any) {\r\n    console.error('Error creating purchase order:', err);\r\n    throw new Error(`Failed to create purchase order: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const updatePurchaseOrder = async (\r\n  id: string, \r\n  updates: Partial<PurchaseOrder>\r\n): Promise<PurchaseOrder> => {\r\n  try {\r\n    // Check if table exists first\r\n    const tableStatus = await checkPurchaseTablesExist();\r\n    if (!tableStatus.exists) {\r\n      throw new Error(`Cannot update purchase order: ${tableStatus.message}`);\r\n    }\r\n\r\n    const { data, error } = await supabase\r\n      .from('purchase_orders')\r\n      .update(updates)\r\n      .eq('id', id)\r\n      .select()\r\n      .single();\r\n    \r\n    if (error) throw error;\r\n    return data;\r\n  } catch (err: any) {\r\n    console.error('Error updating purchase order:', err);\r\n    throw new Error(`Failed to update purchase order: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const deletePurchaseOrder = async (id: string): Promise<void> => {\r\n  try {\r\n    // Check if table exists first\r\n    const tableStatus = await checkPurchaseTablesExist();\r\n    if (!tableStatus.exists) {\r\n      throw new Error(`Cannot delete purchase order: ${tableStatus.message}`);\r\n    }\r\n\r\n    const { error } = await supabase\r\n      .from('purchase_orders')\r\n      .delete()\r\n      .eq('id', id);\r\n    \r\n    if (error) throw error;\r\n  } catch (err: any) {\r\n    console.error('Error deleting purchase order:', err);\r\n    throw new Error(`Failed to delete purchase order: ${err.message}`);\r\n  }\r\n};\r\n\r\n// Function to check if purchase_items table exists\r\nexport const checkPurchaseItemsTableExists = async (): Promise<{ exists: boolean, message: string }> => {\r\n  try {\r\n    // Try to get just one record to check if the table exists\r\n    const { data, error } = await supabase.from('purchase_items').select('id').limit(1);\r\n    \r\n    if (error) {\r\n      if (error.message.includes('does not exist')) {\r\n        return { \r\n          exists: false, \r\n          message: 'The purchase_items table does not exist. Database initialization is required.' \r\n        };\r\n      }\r\n      \r\n      return { \r\n        exists: false, \r\n        message: `Error checking table: ${error.message}` \r\n      };\r\n    }\r\n    \r\n    return { exists: true, message: 'Purchase items table exists and is accessible' };\r\n  } catch (err: any) {\r\n    return { \r\n      exists: false, \r\n      message: `Error checking purchase items table: ${err.message}`\r\n    };\r\n  }\r\n};\r\n\r\n// Purchase Items Operations\r\nexport const getPurchaseItems = async (\r\n  purchaseOrderId: string\r\n): Promise<PurchaseItem[]> => {\r\n  try {\r\n    // Check if table exists first\r\n    const tableStatus = await checkPurchaseItemsTableExists();\r\n    if (!tableStatus.exists) {\r\n      console.warn(`Table check warning: ${tableStatus.message}`);\r\n      return []; // Return empty array instead of throwing\r\n    }\r\n    \r\n    const { data, error } = await supabase\r\n      .from('purchase_items')\r\n      .select(`\r\n        *,\r\n        items:item_id (\r\n          id,\r\n          name,\r\n          category_id,\r\n          unit\r\n        )\r\n      `)\r\n      .eq('purchase_order_id', purchaseOrderId);\r\n    \r\n    if (error) {\r\n      console.error('Error fetching purchase items:', error);\r\n      return [];\r\n    }\r\n    \r\n    return data || [];\r\n  } catch (err) {\r\n    console.error('Error in getPurchaseItems:', err);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getPurchaseItemById = async (id: string): Promise<PurchaseItem | null> => {\r\n  try {\r\n    // Check if table exists first\r\n    const tableStatus = await checkPurchaseItemsTableExists();\r\n    if (!tableStatus.exists) {\r\n      console.warn(`Table check warning: ${tableStatus.message}`);\r\n      return null;\r\n    }\r\n    \r\n    const { data, error } = await supabase\r\n      .from('purchase_items')\r\n      .select(`\r\n        *,\r\n        items:item_id (\r\n          id,\r\n          name,\r\n          category_id,\r\n          unit\r\n        )\r\n      `)\r\n      .eq('id', id)\r\n      .single();\r\n    \r\n    if (error) {\r\n      console.error('Error fetching purchase item:', error);\r\n      return null;\r\n    }\r\n    \r\n    return data;\r\n  } catch (err) {\r\n    console.error('Error in getPurchaseItemById:', err);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const createPurchaseItem = async (\r\n  item: Omit<PurchaseItem, 'id'>\r\n): Promise<PurchaseItem> => {\r\n  try {\r\n    // Check if table exists first\r\n    const tableStatus = await checkPurchaseItemsTableExists();\r\n    if (!tableStatus.exists) {\r\n      throw new Error(`Cannot create purchase item: ${tableStatus.message}`);\r\n    }\r\n    \r\n    const { data, error } = await supabase\r\n      .from('purchase_items')\r\n      .insert([item])\r\n      .select()\r\n      .single();\r\n    \r\n    if (error) throw error;\r\n    return data;\r\n  } catch (err: any) {\r\n    console.error('Error creating purchase item:', err);\r\n    throw new Error(`Failed to create purchase item: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const updatePurchaseItem = async (\r\n  id: string, \r\n  updates: Partial<PurchaseItem>\r\n): Promise<PurchaseItem> => {\r\n  try {\r\n    // Check if table exists first\r\n    const tableStatus = await checkPurchaseItemsTableExists();\r\n    if (!tableStatus.exists) {\r\n      throw new Error(`Cannot update purchase item: ${tableStatus.message}`);\r\n    }\r\n    \r\n    const { data, error } = await supabase\r\n      .from('purchase_items')\r\n      .update(updates)\r\n      .eq('id', id)\r\n      .select()\r\n      .single();\r\n    \r\n    if (error) throw error;\r\n    return data;\r\n  } catch (err: any) {\r\n    console.error('Error updating purchase item:', err);\r\n    throw new Error(`Failed to update purchase item: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const deletePurchaseItem = async (id: string): Promise<void> => {\r\n  try {\r\n    // Check if table exists first\r\n    const tableStatus = await checkPurchaseItemsTableExists();\r\n    if (!tableStatus.exists) {\r\n      throw new Error(`Cannot delete purchase item: ${tableStatus.message}`);\r\n    }\r\n    \r\n    const { error } = await supabase\r\n      .from('purchase_items')\r\n      .delete()\r\n      .eq('id', id);\r\n    \r\n    if (error) throw error;\r\n  } catch (err: any) {\r\n    console.error('Error deleting purchase item:', err);\r\n    throw new Error(`Failed to delete purchase item: ${err.message}`);\r\n  }\r\n};\r\n\r\n// Generate Monthly Purchase Orders\r\nexport const generateMonthlyPurchaseOrder = async (\r\n  year: number,\r\n  month: number,\r\n  createdBy: string\r\n): Promise<PurchaseOrder> => {\r\n  try {\r\n    // First check if purchase_orders table exists\r\n    const tableStatus = await checkPurchaseTablesExist();\r\n    if (!tableStatus.exists) {\r\n      throw new Error(`Cannot generate monthly purchase order: ${tableStatus.message}`);\r\n    }\r\n    \r\n    // 1. Get all maintenance requests for the month\r\n    const startDate = new Date(year, month - 1, 1).toISOString();\r\n    const endDate = new Date(year, month, 0).toISOString();\r\n    \r\n    // Get all maintenance requests for the specified month first\r\n    const { data: maintenanceRequests, error: requestsError } = await supabase\r\n      .from('maintenance_requests')\r\n      .select('id')\r\n      .gte('reported_date', startDate)\r\n      .lte('reported_date', endDate);\r\n    \r\n    if (requestsError) {\r\n      // If the table doesn't exist, create a purchase order without items\r\n      if (requestsError.message.includes('does not exist')) {\r\n        console.warn('Maintenance requests table does not exist yet. Creating empty purchase order.');\r\n        return createEmptyPurchaseOrder(year, month, createdBy);\r\n      }\r\n      throw requestsError;\r\n    }\r\n    \r\n    if (!maintenanceRequests || maintenanceRequests.length === 0) {\r\n      console.log('No maintenance requests found for the specified month. Creating empty purchase order.');\r\n      return createEmptyPurchaseOrder(year, month, createdBy);\r\n    }\r\n    \r\n    // Get maintenance items for these requests\r\n    const maintenanceIds = maintenanceRequests.map(req => req.id);\r\n    const { data: maintenanceItems, error: itemsError } = await supabase\r\n      .from('maintenance_items')\r\n      .select('*')\r\n      .in('maintenance_id', maintenanceIds);\r\n    \r\n    if (itemsError) {\r\n      // If the table doesn't exist, create a purchase order without items\r\n      if (itemsError.message.includes('does not exist')) {\r\n        console.warn('Maintenance items table does not exist yet. Creating empty purchase order.');\r\n        return createEmptyPurchaseOrder(year, month, createdBy);\r\n      }\r\n      throw itemsError;\r\n    }\r\n    \r\n    if (!maintenanceItems || maintenanceItems.length === 0) {\r\n      console.log('No maintenance items found for the specified month. Creating empty purchase order.');\r\n      return createEmptyPurchaseOrder(year, month, createdBy);\r\n    }\r\n    \r\n    // 2. Group items by item_id and sum quantities\r\n    const itemQuantities: Record<string, number> = {};\r\n    \r\n    maintenanceItems.forEach(item => {\r\n      if (!itemQuantities[item.item_id]) {\r\n        itemQuantities[item.item_id] = 0;\r\n      }\r\n      itemQuantities[item.item_id] += item.quantity_needed;\r\n    });\r\n    \r\n    // 3. Create a new purchase order\r\n    const { data: purchaseOrder, error: orderError } = await supabase\r\n      .from('purchase_orders')\r\n      .insert([{\r\n        order_date: new Date().toISOString(),\r\n        status: 'draft',\r\n        created_by: createdBy,\r\n        notes: `Auto-generated order for ${year}-${month.toString().padStart(2, '0')}`\r\n      }])\r\n      .select()\r\n      .single();\r\n    \r\n    if (orderError) throw orderError;\r\n    \r\n    // 4. Create purchase items for each item type\r\n    if (Object.keys(itemQuantities).length > 0) {\r\n      const purchaseItems = Object.entries(itemQuantities).map(([itemId, quantity]) => ({\r\n        purchase_order_id: purchaseOrder.id,\r\n        item_id: itemId,\r\n        quantity: quantity\r\n      }));\r\n      \r\n      const { error: purchaseItemsError } = await supabase\r\n        .from('purchase_items')\r\n        .insert(purchaseItems);\r\n      \r\n      if (purchaseItemsError) throw purchaseItemsError;\r\n    }\r\n    \r\n    return purchaseOrder;\r\n  } catch (error: any) {\r\n    console.error('Error generating monthly purchase order:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Helper function to create an empty purchase order when no maintenance items are found\r\nconst createEmptyPurchaseOrder = async (\r\n  year: number,\r\n  month: number,\r\n  createdBy: string\r\n): Promise<PurchaseOrder> => {\r\n  const { data: purchaseOrder, error: orderError } = await supabase\r\n    .from('purchase_orders')\r\n    .insert([{\r\n      order_date: new Date().toISOString(),\r\n      status: 'draft',\r\n      created_by: createdBy,\r\n      notes: `Auto-generated order for ${year}-${month.toString().padStart(2, '0')} (No maintenance items found)`\r\n    }])\r\n    .select()\r\n    .single();\r\n  \r\n  if (orderError) throw orderError;\r\n  return purchaseOrder;\r\n};\r\n\r\n// Process Received Items\r\nexport const processReceivedItems = async (\r\n  purchaseOrderId: string, \r\n  receivedItems: Array<{ id: string, received_quantity: number }>\r\n): Promise<void> => {\r\n  // Start a transaction to update both purchase items and inventory\r\n  for (const item of receivedItems) {\r\n    // 1. Update the purchase item\r\n    const { data: purchaseItem, error: updateError } = await supabase\r\n      .from('purchase_items')\r\n      .update({ received_quantity: item.received_quantity })\r\n      .eq('id', item.id)\r\n      .select('*')\r\n      .single();\r\n    \r\n    if (updateError) throw updateError;\r\n    \r\n    // 2. Update inventory\r\n    // First, get the current inventory for this item\r\n    const { data: currentInventory, error: inventoryError } = await supabase\r\n      .from('inventory')\r\n      .select('*')\r\n      .eq('item_id', purchaseItem.item_id)\r\n      .single();\r\n    \r\n    if (inventoryError && inventoryError.code !== 'PGRST116') {\r\n      throw inventoryError;\r\n    }\r\n    \r\n    // If inventory entry exists, update it\r\n    if (currentInventory) {\r\n      const { error: updateInventoryError } = await supabase\r\n        .from('inventory')\r\n        .update({\r\n          quantity: currentInventory.quantity + item.received_quantity,\r\n          last_updated: new Date().toISOString()\r\n        })\r\n        .eq('id', currentInventory.id);\r\n      \r\n      if (updateInventoryError) throw updateInventoryError;\r\n    } \r\n    // If no inventory entry exists, create one\r\n    else {\r\n      const { error: createInventoryError } = await supabase\r\n        .from('inventory')\r\n        .insert([{\r\n          item_id: purchaseItem.item_id,\r\n          quantity: item.received_quantity,\r\n          unit_price: purchaseItem.unit_price,\r\n          last_updated: new Date().toISOString()\r\n        }]);\r\n      \r\n      if (createInventoryError) throw createInventoryError;\r\n    }\r\n  }\r\n  \r\n  // 3. Update the purchase order status to 'received'\r\n  const { error: orderUpdateError } = await supabase\r\n    .from('purchase_orders')\r\n    .update({ status: 'received' })\r\n    .eq('id', purchaseOrderId);\r\n  \r\n  if (orderUpdateError) throw orderUpdateError;\r\n};"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;;AAIO,MAAM,2BAA2B;IACtC,IAAI;QACF,0DAA0D;QAC1D,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,mBAAmB,MAAM,CAAC,MAAM,KAAK,CAAC;QAElF,IAAI,OAAO;YACT,IAAI,MAAM,OAAO,CAAC,QAAQ,CAAC,mBAAmB;gBAC5C,OAAO;oBACL,QAAQ;oBACR,SAAS;gBACX;YACF;YAEA,OAAO;gBACL,QAAQ;gBACR,SAAS,CAAC,sBAAsB,EAAE,MAAM,OAAO,EAAE;YACnD;QACF;QAEA,OAAO;YAAE,QAAQ;YAAM,SAAS;QAA2C;IAC7E,EAAE,OAAO,KAAU;QACjB,OAAO;YACL,QAAQ;YACR,SAAS,CAAC,gCAAgC,EAAE,IAAI,OAAO,EAAE;QAC3D;IACF;AACF;AAGO,MAAM,oBAAoB,OAC/B;IAEA,IAAI;QACF,8BAA8B;QAC9B,MAAM,cAAc,MAAM;QAC1B,IAAI,CAAC,YAAY,MAAM,EAAE;YACvB,QAAQ,IAAI,CAAC,CAAC,qBAAqB,EAAE,YAAY,OAAO,EAAE;YAC1D,OAAO,EAAE,EAAE,yCAAyC;QACtD;QAEA,IAAI,QAAQ,sHAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,mBAAmB,MAAM,CAAC;QAEpD,IAAI,QAAQ;YACV,QAAQ,MAAM,EAAE,CAAC,UAAU;QAC7B;QAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,MAAM,KAAK,CAAC,cAAc;YAAE,WAAW;QAAM;QAE3E,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,wCAAwC;YACtD,OAAO,EAAE,EAAE,8BAA8B;QAC3C;QAEA,OAAO,QAAQ,EAAE;IACnB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO,EAAE,EAAE,8BAA8B;IAC3C;AACF;AAEO,MAAM,uBAAuB,OAAO;IACzC,IAAI;QACF,8BAA8B;QAC9B,MAAM,cAAc,MAAM;QAC1B,IAAI,CAAC,YAAY,MAAM,EAAE;YACvB,QAAQ,IAAI,CAAC,CAAC,qBAAqB,EAAE,YAAY,OAAO,EAAE;YAC1D,OAAO;QACT;QAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,mBACL,MAAM,CAAC,KACP,EAAE,CAAC,MAAM,IACT,MAAM;QAET,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,kCAAkC;YAChD,OAAO;QACT;QAEA,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO;IACT;AACF;AAEO,MAAM,sBAAsB,OACjC;IAEA,IAAI;QACF,8BAA8B;QAC9B,MAAM,cAAc,MAAM;QAC1B,IAAI,CAAC,YAAY,MAAM,EAAE;YACvB,MAAM,IAAI,MAAM,CAAC,8BAA8B,EAAE,YAAY,OAAO,EAAE;QACxE;QAEA,MAAM,WAAW;YACf,GAAG,KAAK;YACR,YAAY,IAAI,OAAO,WAAW;YAClC,QAAQ,MAAM,MAAM,IAAI;QAC1B;QAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,mBACL,MAAM,CAAC;YAAC;SAAS,EACjB,MAAM,GACN,MAAM;QAET,IAAI,OAAO,MAAM;QACjB,OAAO;IACT,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,kCAAkC;QAChD,MAAM,IAAI,MAAM,CAAC,iCAAiC,EAAE,IAAI,OAAO,EAAE;IACnE;AACF;AAEO,MAAM,sBAAsB,OACjC,IACA;IAEA,IAAI;QACF,8BAA8B;QAC9B,MAAM,cAAc,MAAM;QAC1B,IAAI,CAAC,YAAY,MAAM,EAAE;YACvB,MAAM,IAAI,MAAM,CAAC,8BAA8B,EAAE,YAAY,OAAO,EAAE;QACxE;QAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,mBACL,MAAM,CAAC,SACP,EAAE,CAAC,MAAM,IACT,MAAM,GACN,MAAM;QAET,IAAI,OAAO,MAAM;QACjB,OAAO;IACT,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,kCAAkC;QAChD,MAAM,IAAI,MAAM,CAAC,iCAAiC,EAAE,IAAI,OAAO,EAAE;IACnE;AACF;AAEO,MAAM,sBAAsB,OAAO;IACxC,IAAI;QACF,8BAA8B;QAC9B,MAAM,cAAc,MAAM;QAC1B,IAAI,CAAC,YAAY,MAAM,EAAE;YACvB,MAAM,IAAI,MAAM,CAAC,8BAA8B,EAAE,YAAY,OAAO,EAAE;QACxE;QAEA,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CAC7B,IAAI,CAAC,mBACL,MAAM,GACN,EAAE,CAAC,MAAM;QAEZ,IAAI,OAAO,MAAM;IACnB,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,kCAAkC;QAChD,MAAM,IAAI,MAAM,CAAC,iCAAiC,EAAE,IAAI,OAAO,EAAE;IACnE;AACF;AAGO,MAAM,gCAAgC;IAC3C,IAAI;QACF,0DAA0D;QAC1D,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,kBAAkB,MAAM,CAAC,MAAM,KAAK,CAAC;QAEjF,IAAI,OAAO;YACT,IAAI,MAAM,OAAO,CAAC,QAAQ,CAAC,mBAAmB;gBAC5C,OAAO;oBACL,QAAQ;oBACR,SAAS;gBACX;YACF;YAEA,OAAO;gBACL,QAAQ;gBACR,SAAS,CAAC,sBAAsB,EAAE,MAAM,OAAO,EAAE;YACnD;QACF;QAEA,OAAO;YAAE,QAAQ;YAAM,SAAS;QAAgD;IAClF,EAAE,OAAO,KAAU;QACjB,OAAO;YACL,QAAQ;YACR,SAAS,CAAC,qCAAqC,EAAE,IAAI,OAAO,EAAE;QAChE;IACF;AACF;AAGO,MAAM,mBAAmB,OAC9B;IAEA,IAAI;QACF,8BAA8B;QAC9B,MAAM,cAAc,MAAM;QAC1B,IAAI,CAAC,YAAY,MAAM,EAAE;YACvB,QAAQ,IAAI,CAAC,CAAC,qBAAqB,EAAE,YAAY,OAAO,EAAE;YAC1D,OAAO,EAAE,EAAE,yCAAyC;QACtD;QAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,kBACL,MAAM,CAAC,CAAC;;;;;;;;MAQT,CAAC,EACA,EAAE,CAAC,qBAAqB;QAE3B,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,kCAAkC;YAChD,OAAO,EAAE;QACX;QAEA,OAAO,QAAQ,EAAE;IACnB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,EAAE;IACX;AACF;AAEO,MAAM,sBAAsB,OAAO;IACxC,IAAI;QACF,8BAA8B;QAC9B,MAAM,cAAc,MAAM;QAC1B,IAAI,CAAC,YAAY,MAAM,EAAE;YACvB,QAAQ,IAAI,CAAC,CAAC,qBAAqB,EAAE,YAAY,OAAO,EAAE;YAC1D,OAAO;QACT;QAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,kBACL,MAAM,CAAC,CAAC;;;;;;;;MAQT,CAAC,EACA,EAAE,CAAC,MAAM,IACT,MAAM;QAET,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,iCAAiC;YAC/C,OAAO;QACT;QAEA,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO;IACT;AACF;AAEO,MAAM,qBAAqB,OAChC;IAEA,IAAI;QACF,8BAA8B;QAC9B,MAAM,cAAc,MAAM;QAC1B,IAAI,CAAC,YAAY,MAAM,EAAE;YACvB,MAAM,IAAI,MAAM,CAAC,6BAA6B,EAAE,YAAY,OAAO,EAAE;QACvE;QAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,kBACL,MAAM,CAAC;YAAC;SAAK,EACb,MAAM,GACN,MAAM;QAET,IAAI,OAAO,MAAM;QACjB,OAAO;IACT,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,MAAM,IAAI,MAAM,CAAC,gCAAgC,EAAE,IAAI,OAAO,EAAE;IAClE;AACF;AAEO,MAAM,qBAAqB,OAChC,IACA;IAEA,IAAI;QACF,8BAA8B;QAC9B,MAAM,cAAc,MAAM;QAC1B,IAAI,CAAC,YAAY,MAAM,EAAE;YACvB,MAAM,IAAI,MAAM,CAAC,6BAA6B,EAAE,YAAY,OAAO,EAAE;QACvE;QAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,kBACL,MAAM,CAAC,SACP,EAAE,CAAC,MAAM,IACT,MAAM,GACN,MAAM;QAET,IAAI,OAAO,MAAM;QACjB,OAAO;IACT,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,MAAM,IAAI,MAAM,CAAC,gCAAgC,EAAE,IAAI,OAAO,EAAE;IAClE;AACF;AAEO,MAAM,qBAAqB,OAAO;IACvC,IAAI;QACF,8BAA8B;QAC9B,MAAM,cAAc,MAAM;QAC1B,IAAI,CAAC,YAAY,MAAM,EAAE;YACvB,MAAM,IAAI,MAAM,CAAC,6BAA6B,EAAE,YAAY,OAAO,EAAE;QACvE;QAEA,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CAC7B,IAAI,CAAC,kBACL,MAAM,GACN,EAAE,CAAC,MAAM;QAEZ,IAAI,OAAO,MAAM;IACnB,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,MAAM,IAAI,MAAM,CAAC,gCAAgC,EAAE,IAAI,OAAO,EAAE;IAClE;AACF;AAGO,MAAM,+BAA+B,OAC1C,MACA,OACA;IAEA,IAAI;QACF,8CAA8C;QAC9C,MAAM,cAAc,MAAM;QAC1B,IAAI,CAAC,YAAY,MAAM,EAAE;YACvB,MAAM,IAAI,MAAM,CAAC,wCAAwC,EAAE,YAAY,OAAO,EAAE;QAClF;QAEA,gDAAgD;QAChD,MAAM,YAAY,IAAI,KAAK,MAAM,QAAQ,GAAG,GAAG,WAAW;QAC1D,MAAM,UAAU,IAAI,KAAK,MAAM,OAAO,GAAG,WAAW;QAEpD,6DAA6D;QAC7D,MAAM,EAAE,MAAM,mBAAmB,EAAE,OAAO,aAAa,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CACvE,IAAI,CAAC,wBACL,MAAM,CAAC,MACP,GAAG,CAAC,iBAAiB,WACrB,GAAG,CAAC,iBAAiB;QAExB,IAAI,eAAe;YACjB,oEAAoE;YACpE,IAAI,cAAc,OAAO,CAAC,QAAQ,CAAC,mBAAmB;gBACpD,QAAQ,IAAI,CAAC;gBACb,OAAO,yBAAyB,MAAM,OAAO;YAC/C;YACA,MAAM;QACR;QAEA,IAAI,CAAC,uBAAuB,oBAAoB,MAAM,KAAK,GAAG;YAC5D,QAAQ,GAAG,CAAC;YACZ,OAAO,yBAAyB,MAAM,OAAO;QAC/C;QAEA,2CAA2C;QAC3C,MAAM,iBAAiB,oBAAoB,GAAG,CAAC,CAAA,MAAO,IAAI,EAAE;QAC5D,MAAM,EAAE,MAAM,gBAAgB,EAAE,OAAO,UAAU,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CACjE,IAAI,CAAC,qBACL,MAAM,CAAC,KACP,EAAE,CAAC,kBAAkB;QAExB,IAAI,YAAY;YACd,oEAAoE;YACpE,IAAI,WAAW,OAAO,CAAC,QAAQ,CAAC,mBAAmB;gBACjD,QAAQ,IAAI,CAAC;gBACb,OAAO,yBAAyB,MAAM,OAAO;YAC/C;YACA,MAAM;QACR;QAEA,IAAI,CAAC,oBAAoB,iBAAiB,MAAM,KAAK,GAAG;YACtD,QAAQ,GAAG,CAAC;YACZ,OAAO,yBAAyB,MAAM,OAAO;QAC/C;QAEA,+CAA+C;QAC/C,MAAM,iBAAyC,CAAC;QAEhD,iBAAiB,OAAO,CAAC,CAAA;YACvB,IAAI,CAAC,cAAc,CAAC,KAAK,OAAO,CAAC,EAAE;gBACjC,cAAc,CAAC,KAAK,OAAO,CAAC,GAAG;YACjC;YACA,cAAc,CAAC,KAAK,OAAO,CAAC,IAAI,KAAK,eAAe;QACtD;QAEA,iCAAiC;QACjC,MAAM,EAAE,MAAM,aAAa,EAAE,OAAO,UAAU,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CAC9D,IAAI,CAAC,mBACL,MAAM,CAAC;YAAC;gBACP,YAAY,IAAI,OAAO,WAAW;gBAClC,QAAQ;gBACR,YAAY;gBACZ,OAAO,CAAC,yBAAyB,EAAE,KAAK,CAAC,EAAE,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,MAAM;YAChF;SAAE,EACD,MAAM,GACN,MAAM;QAET,IAAI,YAAY,MAAM;QAEtB,8CAA8C;QAC9C,IAAI,OAAO,IAAI,CAAC,gBAAgB,MAAM,GAAG,GAAG;YAC1C,MAAM,gBAAgB,OAAO,OAAO,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC,QAAQ,SAAS,GAAK,CAAC;oBAChF,mBAAmB,cAAc,EAAE;oBACnC,SAAS;oBACT,UAAU;gBACZ,CAAC;YAED,MAAM,EAAE,OAAO,kBAAkB,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CACjD,IAAI,CAAC,kBACL,MAAM,CAAC;YAEV,IAAI,oBAAoB,MAAM;QAChC;QAEA,OAAO;IACT,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,4CAA4C;QAC1D,MAAM;IACR;AACF;AAEA,wFAAwF;AACxF,MAAM,2BAA2B,OAC/B,MACA,OACA;IAEA,MAAM,EAAE,MAAM,aAAa,EAAE,OAAO,UAAU,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CAC9D,IAAI,CAAC,mBACL,MAAM,CAAC;QAAC;YACP,YAAY,IAAI,OAAO,WAAW;YAClC,QAAQ;YACR,YAAY;YACZ,OAAO,CAAC,yBAAyB,EAAE,KAAK,CAAC,EAAE,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,KAAK,6BAA6B,CAAC;QAC7G;KAAE,EACD,MAAM,GACN,MAAM;IAET,IAAI,YAAY,MAAM;IACtB,OAAO;AACT;AAGO,MAAM,uBAAuB,OAClC,iBACA;IAEA,kEAAkE;IAClE,KAAK,MAAM,QAAQ,cAAe;QAChC,8BAA8B;QAC9B,MAAM,EAAE,MAAM,YAAY,EAAE,OAAO,WAAW,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CAC9D,IAAI,CAAC,kBACL,MAAM,CAAC;YAAE,mBAAmB,KAAK,iBAAiB;QAAC,GACnD,EAAE,CAAC,MAAM,KAAK,EAAE,EAChB,MAAM,CAAC,KACP,MAAM;QAET,IAAI,aAAa,MAAM;QAEvB,sBAAsB;QACtB,iDAAiD;QACjD,MAAM,EAAE,MAAM,gBAAgB,EAAE,OAAO,cAAc,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CACrE,IAAI,CAAC,aACL,MAAM,CAAC,KACP,EAAE,CAAC,WAAW,aAAa,OAAO,EAClC,MAAM;QAET,IAAI,kBAAkB,eAAe,IAAI,KAAK,YAAY;YACxD,MAAM;QACR;QAEA,uCAAuC;QACvC,IAAI,kBAAkB;YACpB,MAAM,EAAE,OAAO,oBAAoB,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CACnD,IAAI,CAAC,aACL,MAAM,CAAC;gBACN,UAAU,iBAAiB,QAAQ,GAAG,KAAK,iBAAiB;gBAC5D,cAAc,IAAI,OAAO,WAAW;YACtC,GACC,EAAE,CAAC,MAAM,iBAAiB,EAAE;YAE/B,IAAI,sBAAsB,MAAM;QAClC,OAEK;YACH,MAAM,EAAE,OAAO,oBAAoB,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CACnD,IAAI,CAAC,aACL,MAAM,CAAC;gBAAC;oBACP,SAAS,aAAa,OAAO;oBAC7B,UAAU,KAAK,iBAAiB;oBAChC,YAAY,aAAa,UAAU;oBACnC,cAAc,IAAI,OAAO,WAAW;gBACtC;aAAE;YAEJ,IAAI,sBAAsB,MAAM;QAClC;IACF;IAEA,oDAAoD;IACpD,MAAM,EAAE,OAAO,gBAAgB,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CAC/C,IAAI,CAAC,mBACL,MAAM,CAAC;QAAE,QAAQ;IAAW,GAC5B,EAAE,CAAC,MAAM;IAEZ,IAAI,kBAAkB,MAAM;AAC9B","debugId":null}},
    {"offset": {"line": 1464, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/components/SideInfo.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { getMaintenanceRequests } from '@/lib/services/maintenanceService';\r\nimport { getLowStockItems } from '@/lib/services/inventoryService';\r\nimport { getPurchaseOrders } from '@/lib/services/purchaseService';\r\nimport { MaintenanceRequest, InventoryWithItem, PurchaseOrder } from '@/models/types';\r\n\r\nexport default function SideInfo() {\r\n  const [pendingMaintenanceCount, setPendingMaintenanceCount] = useState(0);\r\n  const [lowStockItems, setLowStockItems] = useState<InventoryWithItem[]>([]);\r\n  const [recentOrders, setRecentOrders] = useState<PurchaseOrder[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    fetchSidebarData();\r\n    \r\n    // تحديث التاريخ والوقت كل دقيقة\r\n    const intervalId = setInterval(() => {\r\n      setCurrentDate(new Date());\r\n    }, 60000);\r\n    \r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  const fetchSidebarData = async () => {\r\n    try {\r\n      // الحصول على طلبات الصيانة المعلقة\r\n      try {\r\n        const pendingRequests = await getMaintenanceRequests(undefined, undefined, 'pending');\r\n        setPendingMaintenanceCount(pendingRequests.length);\r\n      } catch (err) {\r\n        console.warn('لم نتمكن من تحميل بيانات الصيانة:', err);\r\n        setPendingMaintenanceCount(0);\r\n      }\r\n\r\n      // الحصول على العناصر منخفضة المخزون\r\n      try {\r\n        const lowStock = await getLowStockItems(5);\r\n        setLowStockItems(lowStock.slice(0, 3)); // نعرض فقط أول 3 عناصر\r\n      } catch (err) {\r\n        console.warn('لم نتمكن من تحميل بيانات المخزون:', err);\r\n        setLowStockItems([]);\r\n      }\r\n\r\n      // الحصول على آخر طلبات الشراء\r\n      try {\r\n        const orders = await getPurchaseOrders();\r\n        setRecentOrders(orders.slice(0, 2)); // نعرض فقط أول طلبين\r\n      } catch (err) {\r\n        console.warn('لم نتمكن من تحميل بيانات طلبات الشراء:', err);\r\n        setRecentOrders([]);\r\n      }\r\n\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error('خطأ في تحميل بيانات الشريط الجانبي:', err);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // تنسيق التاريخ باللغة العربية\r\n  const formatDate = (date: Date) => {\r\n    const options: Intl.DateTimeFormatOptions = {\r\n      weekday: 'long',\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    };\r\n    return date.toLocaleDateString('ar-SA', options);\r\n  };\r\n\r\n  // تنسيق الوقت\r\n  const formatTime = (date: Date) => {\r\n    return date.toLocaleTimeString('ar-SA', { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n  \r\n  // تحويل حالة الطلب إلى اللغة العربية\r\n  const getOrderStatusText = (status: string) => {\r\n    switch (status) {\r\n      case 'draft': return 'مسودة';\r\n      case 'submitted': return 'مقدم';\r\n      case 'approved': return 'موافق عليه';\r\n      case 'received': return 'مستلم';\r\n      case 'completed': return 'مكتمل';\r\n      default: return status;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-6\">\r\n      {/* عرض التاريخ والوقت */}\r\n      <div className=\"card p-4 text-center\">\r\n        <h3 className=\"text-lg font-bold opacity-70\">{formatDate(currentDate)}</h3>\r\n        <p className=\"text-3xl font-bold\">{formatTime(currentDate)}</p>\r\n      </div>\r\n\r\n      {/* ملخص الصيانة */}\r\n      <div className=\"card p-4\">\r\n        <h3 className=\"text-xl font-bold mb-3 flex justify-between items-center\">\r\n          <span>طلبات الصيانة</span>\r\n          <Link href=\"/maintenance\" className=\"text-xs text-primary hover:underline\">\r\n            عرض الكل\r\n          </Link>\r\n        </h3>\r\n        \r\n        {loading ? (\r\n          <div className=\"flex justify-center py-4\">\r\n            <div className=\"w-6 h-6 border-2 border-primary border-t-transparent rounded-full animate-spin\"></div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"mt-2\">\r\n            <div className=\"flex justify-between items-center p-3 bg-base-200 rounded-lg mb-2\">\r\n              <span className=\"font-medium\">طلبات معلقة</span>\r\n              <span className=\"badge badge-primary\">{pendingMaintenanceCount}</span>\r\n            </div>\r\n            \r\n            <div className=\"mt-4\">\r\n              <Link \r\n                href=\"/maintenance/new\" \r\n                className=\"btn btn-primary btn-sm w-full\"\r\n              >\r\n                إنشاء طلب صيانة جديد\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* المخزون المنخفض */}\r\n      {!loading && lowStockItems.length > 0 && (\r\n        <div className=\"card p-4\">\r\n          <h3 className=\"text-xl font-bold mb-3 flex justify-between items-center\">\r\n            <span>مخزون منخفض</span>\r\n            <Link href=\"/inventory\" className=\"text-xs text-primary hover:underline\">\r\n              عرض الكل\r\n            </Link>\r\n          </h3>\r\n          \r\n          <div className=\"mt-2 space-y-2\">\r\n            {lowStockItems.map((item) => (\r\n              <div key={item.id} className=\"flex justify-between items-center p-2 bg-base-200 rounded-md\">\r\n                <div>\r\n                  <p className=\"font-medium\">{item.items?.name || 'غير معرف'}</p>\r\n                  <div className=\"text-xs opacity-70 flex items-center mt-1\">\r\n                    <span className=\"inline-block w-2 h-2 rounded-full bg-warning mr-1\"></span>\r\n                    {item.quantity} {item.items?.unit || 'قطعة'}\r\n                  </div>\r\n                </div>\r\n                <Link \r\n                  href={`/purchase-orders/new?item=${item.item_id}`}\r\n                  className=\"text-xs text-primary hover:underline\"\r\n                >\r\n                  طلب\r\n                </Link>\r\n              </div>\r\n            ))}\r\n            \r\n            <Link \r\n              href=\"/purchase-orders/new\" \r\n              className=\"btn btn-outline btn-sm w-full mt-2\"\r\n            >\r\n              إنشاء طلب شراء\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* آخر طلبات الشراء */}\r\n      {!loading && recentOrders.length > 0 && (\r\n        <div className=\"card p-4\">\r\n          <h3 className=\"text-xl font-bold mb-3 flex justify-between items-center\">\r\n            <span>طلبات الشراء</span>\r\n            <Link href=\"/purchase-orders\" className=\"text-xs text-primary hover:underline\">\r\n              عرض الكل\r\n            </Link>\r\n          </h3>\r\n          \r\n          <div className=\"mt-2 space-y-2\">\r\n            {recentOrders.map((order) => (\r\n              <Link \r\n                href={`/purchase-orders/${order.id}`}\r\n                key={order.id} \r\n                className=\"block p-2 bg-base-200 rounded-md hover:bg-base-300 transition-colors\"\r\n              >\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"font-medium\">طلب #{order.id.substring(0, 6)}</span>\r\n                  <span className=\"badge badge-sm\">\r\n                    {getOrderStatusText(order.status)}\r\n                  </span>\r\n                </div>\r\n                <div className=\"text-xs mt-1 opacity-70\">\r\n                  {new Date(order.order_date).toLocaleDateString('ar-SA')}\r\n                </div>\r\n              </Link>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* روابط سريعة */}\r\n      <div className=\"card p-4\">\r\n        <h3 className=\"text-xl font-bold mb-3\">روابط سريعة</h3>\r\n        \r\n        <div className=\"mt-2 space-y-2\">\r\n          <Link href=\"/housing/management\" className=\"flex items-center p-2 bg-base-200 rounded-md hover:bg-base-300 transition-colors\">\r\n            <div className=\"w-8 h-8 flex items-center justify-center bg-purple-100 text-purple-600 rounded-lg ml-3\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\r\n              </svg>\r\n            </div>\r\n            <span>إدارة المجمعات</span>\r\n          </Link>\r\n          \r\n          <Link href=\"/inventory/file-processor\" className=\"flex items-center p-2 bg-base-200 rounded-md hover:bg-base-300 transition-colors\">\r\n            <div className=\"w-8 h-8 flex items-center justify-center bg-green-100 text-green-600 rounded-lg ml-3\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\r\n              </svg>\r\n            </div>\r\n            <span>رفع المخزون</span>\r\n          </Link>\r\n          \r\n          <Link href=\"/reports\" className=\"flex items-center p-2 bg-base-200 rounded-md hover:bg-base-300 transition-colors\">\r\n            <div className=\"w-8 h-8 flex items-center justify-center bg-blue-100 text-blue-600 rounded-lg ml-3\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n              </svg>\r\n            </div>\r\n            <span>التقارير</span>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2051, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/AppDataContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { getMaintenanceRequests } from './services/maintenanceService';\r\nimport { getLowStockItems } from './services/inventoryService';\r\nimport { getPurchaseOrders } from './services/purchaseService';\r\nimport { MaintenanceRequest, InventoryWithItem, PurchaseOrder } from '@/models/types';\r\n\r\n// تعريف نوع البيانات للسياق\r\ninterface AppDataContextType {\r\n  pendingMaintenanceCount: number;\r\n  lowStockItems: InventoryWithItem[];\r\n  recentOrders: PurchaseOrder[];\r\n  loading: boolean;\r\n  refreshData: () => Promise<void>;\r\n  lastUpdated: Date | null;\r\n}\r\n\r\n// إنشاء السياق مع قيم افتراضية\r\nconst AppDataContext = createContext<AppDataContextType>({\r\n  pendingMaintenanceCount: 0,\r\n  lowStockItems: [],\r\n  recentOrders: [],\r\n  loading: true,\r\n  refreshData: async () => {},\r\n  lastUpdated: null,\r\n});\r\n\r\n// مقدم السياق (Provider)\r\nexport function AppDataProvider({ children }: { children: ReactNode }) {\r\n  const [pendingMaintenanceCount, setPendingMaintenanceCount] = useState(0);\r\n  const [lowStockItems, setLowStockItems] = useState<InventoryWithItem[]>([]);\r\n  const [recentOrders, setRecentOrders] = useState<PurchaseOrder[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);\r\n  \r\n  // دالة لتحديث البيانات\r\n  const refreshData = async () => {\r\n    setLoading(true);\r\n    \r\n    try {\r\n      // طلبات الصيانة المعلقة\r\n      try {\r\n        const pendingRequests = await getMaintenanceRequests(undefined, undefined, 'pending');\r\n        setPendingMaintenanceCount(pendingRequests.length);\r\n      } catch (err) {\r\n        console.warn('لم نتمكن من تحميل بيانات الصيانة:', err);\r\n      }\r\n\r\n      // العناصر منخفضة المخزون\r\n      try {\r\n        const lowStock = await getLowStockItems(5);\r\n        setLowStockItems(lowStock.slice(0, 3));\r\n      } catch (err) {\r\n        console.warn('لم نتمكن من تحميل بيانات المخزون:', err);\r\n      }\r\n\r\n      // طلبات الشراء الحديثة\r\n      try {\r\n        const orders = await getPurchaseOrders();\r\n        setRecentOrders(orders.slice(0, 2));\r\n      } catch (err) {\r\n        console.warn('لم نتمكن من تحميل بيانات طلبات الشراء:', err);\r\n      }\r\n      \r\n      setLastUpdated(new Date());\r\n    } catch (err) {\r\n      console.error('خطأ أثناء تحديث بيانات التطبيق:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // تحميل البيانات عند بدء التشغيل\r\n  useEffect(() => {\r\n    refreshData();\r\n    \r\n    // تحديث البيانات كل 5 دقائق\r\n    const intervalId = setInterval(() => {\r\n      refreshData();\r\n    }, 5 * 60 * 1000);\r\n    \r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n    <AppDataContext.Provider\r\n      value={{\r\n        pendingMaintenanceCount,\r\n        lowStockItems,\r\n        recentOrders,\r\n        loading,\r\n        refreshData,\r\n        lastUpdated\r\n      }}\r\n    >\r\n      {children}\r\n    </AppDataContext.Provider>\r\n  );\r\n}\r\n\r\n// Hook لاستخدام سياق بيانات التطبيق\r\nexport function useAppData() {\r\n  return useContext(AppDataContext);\r\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAkBA,+BAA+B;AAC/B,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAsB;IACvD,yBAAyB;IACzB,eAAe,EAAE;IACjB,cAAc,EAAE;IAChB,SAAS;IACT,aAAa,WAAa;IAC1B,aAAa;AACf;AAGO,SAAS,gBAAgB,EAAE,QAAQ,EAA2B;IACnE,MAAM,CAAC,yBAAyB,2BAA2B,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvE,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAuB,EAAE;IAC1E,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAmB,EAAE;IACpE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAE5D,uBAAuB;IACvB,MAAM,cAAc;QAClB,WAAW;QAEX,IAAI;YACF,wBAAwB;YACxB,IAAI;gBACF,MAAM,kBAAkB,MAAM,CAAA,GAAA,4IAAA,CAAA,yBAAsB,AAAD,EAAE,WAAW,WAAW;gBAC3E,2BAA2B,gBAAgB,MAAM;YACnD,EAAE,OAAO,KAAK;gBACZ,QAAQ,IAAI,CAAC,qCAAqC;YACpD;YAEA,yBAAyB;YACzB,IAAI;gBACF,MAAM,WAAW,MAAM,CAAA,GAAA,0IAAA,CAAA,mBAAgB,AAAD,EAAE;gBACxC,iBAAiB,SAAS,KAAK,CAAC,GAAG;YACrC,EAAE,OAAO,KAAK;gBACZ,QAAQ,IAAI,CAAC,qCAAqC;YACpD;YAEA,uBAAuB;YACvB,IAAI;gBACF,MAAM,SAAS,MAAM,CAAA,GAAA,yIAAA,CAAA,oBAAiB,AAAD;gBACrC,gBAAgB,OAAO,KAAK,CAAC,GAAG;YAClC,EAAE,OAAO,KAAK;gBACZ,QAAQ,IAAI,CAAC,0CAA0C;YACzD;YAEA,eAAe,IAAI;QACrB,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,mCAAmC;QACnD,SAAU;YACR,WAAW;QACb;IACF;IAEA,iCAAiC;IACjC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;QAEA,4BAA4B;QAC5B,MAAM,aAAa,YAAY;YAC7B;QACF,GAAG,IAAI,KAAK;QAEZ,OAAO,IAAM,cAAc;IAC7B,GAAG,EAAE;IAEL,qBACE,8OAAC,eAAe,QAAQ;QACtB,OAAO;YACL;YACA;YACA;YACA;YACA;YACA;QACF;kBAEC;;;;;;AAGP;AAGO,SAAS;IACd,OAAO,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;AACpB","debugId":null}},
    {"offset": {"line": 2147, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/components/PageTransitionProgress.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { usePathname, useSearchParams } from 'next/navigation';\r\nimport NProgress from 'nprogress';\r\n\r\n// تكوين NProgress\r\nNProgress.configure({\r\n  showSpinner: false,\r\n  trickleSpeed: 100,\r\n  minimum: 0.15,\r\n  easing: 'ease',\r\n  speed: 300,\r\n});\r\n\r\nexport default function PageTransitionProgress() {\r\n  const [isNavigating, setIsNavigating] = useState(false);\r\n  const pathname = usePathname();\r\n  const searchParams = useSearchParams();\r\n\r\n  // تتبع التغيرات في المسار وبدء/إيقاف مؤشر التقدم\r\n  useEffect(() => {\r\n    // إذا كان التنقل قيد التنفيذ، أوقف NProgress عند انتهاء التنقل\r\n    if (isNavigating) {\r\n      setIsNavigating(false);\r\n      NProgress.done();\r\n    }\r\n  }, [pathname, searchParams]);\r\n\r\n  // تعيين مستمعي الأحداث للتنقل\r\n  useEffect(() => {\r\n    // يبدأ عند بدء التنقل\r\n    const handleRouteChangeStart = () => {\r\n      setIsNavigating(true);\r\n      NProgress.start();\r\n    };\r\n\r\n    // ينتهي عند اكتمال التنقل\r\n    const handleRouteChangeComplete = () => {\r\n      setIsNavigating(false);\r\n      NProgress.done();\r\n    };\r\n\r\n    // ينتهي عند فشل التنقل\r\n    const handleRouteChangeError = () => {\r\n      setIsNavigating(false);\r\n      NProgress.done();\r\n    };\r\n\r\n    // إضافة أنماط CSS لـ NProgress\r\n    const nprogress = `\r\n      #nprogress {\r\n        pointer-events: none;\r\n      }\r\n      #nprogress .bar {\r\n        background: var(--primary-color, #3b82f6);\r\n        position: fixed;\r\n        z-index: 9999;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 3px;\r\n      }\r\n      #nprogress .peg {\r\n        display: block;\r\n        position: absolute;\r\n        right: 0px;\r\n        width: 100px;\r\n        height: 100%;\r\n        box-shadow: 0 0 10px var(--primary-color, #3b82f6), 0 0 5px var(--primary-color, #3b82f6);\r\n        opacity: 1.0;\r\n        transform: rotate(3deg) translate(0px, -4px);\r\n      }\r\n    `;\r\n\r\n    // إضافة الأنماط إلى الصفحة\r\n    const style = document.createElement('style');\r\n    style.setAttribute('id', 'nprogress-styles');\r\n    style.textContent = nprogress;\r\n    document.head.appendChild(style);\r\n\r\n    // استخدام window.navigation.addEventListener لتتبع التنقل بين الصفحات إذا كان مدعوماً\r\n    if (window.navigation) {\r\n      window.navigation.addEventListener('navigate', handleRouteChangeStart);\r\n      window.navigation.addEventListener('navigatesuccess', handleRouteChangeComplete);\r\n      window.navigation.addEventListener('navigateerror', handleRouteChangeError);\r\n    }\r\n\r\n    // تسجيل مستمع تحميل الصفحة لمعالجة حالات أخرى\r\n    window.addEventListener('beforeunload', handleRouteChangeStart);\r\n\r\n    // تنظيف عند تفكيك المكون\r\n    return () => {\r\n      // إزالة مستمعي الأحداث\r\n      if (window.navigation) {\r\n        window.navigation.removeEventListener('navigate', handleRouteChangeStart);\r\n        window.navigation.removeEventListener('navigatesuccess', handleRouteChangeComplete);\r\n        window.navigation.removeEventListener('navigateerror', handleRouteChangeError);\r\n      }\r\n      window.removeEventListener('beforeunload', handleRouteChangeStart);\r\n\r\n      // إزالة الأنماط\r\n      const styleElement = document.getElementById('nprogress-styles');\r\n      if (styleElement) {\r\n        styleElement.remove();\r\n      }\r\n      \r\n      // التأكد من إيقاف NProgress\r\n      NProgress.done();\r\n    };\r\n  }, []);\r\n\r\n  // المكون لا يعرض أي شيء مرئياً - فقط يتفاعل مع NProgress\r\n  return null;\r\n}"],"names":[],"mappings":";;;AAEA;AACA;;;;;;AAHA;;;;AAMA,kBAAkB;AAClB,UAAU,SAAS,CAAC;IAClB,aAAa;IACb,cAAc;IACd,SAAS;IACT,QAAQ;IACR,OAAO;AACT;AAEe,SAAS;IACtB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IAEnC,iDAAiD;IACjD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,+DAA+D;QAC/D,IAAI,cAAc;YAChB,gBAAgB;YAChB,UAAU,IAAI;QAChB;IACF,GAAG;QAAC;QAAU;KAAa;IAE3B,8BAA8B;IAC9B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,sBAAsB;QACtB,MAAM,yBAAyB;YAC7B,gBAAgB;YAChB,UAAU,KAAK;QACjB;QAEA,0BAA0B;QAC1B,MAAM,4BAA4B;YAChC,gBAAgB;YAChB,UAAU,IAAI;QAChB;QAEA,uBAAuB;QACvB,MAAM,yBAAyB;YAC7B,gBAAgB;YAChB,UAAU,IAAI;QAChB;QAEA,+BAA+B;QAC/B,MAAM,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;IAuBnB,CAAC;QAED,2BAA2B;QAC3B,MAAM,QAAQ,SAAS,aAAa,CAAC;QACrC,MAAM,YAAY,CAAC,MAAM;QACzB,MAAM,WAAW,GAAG;QACpB,SAAS,IAAI,CAAC,WAAW,CAAC;QAE1B,sFAAsF;QACtF,IAAI,OAAO,UAAU,EAAE;YACrB,OAAO,UAAU,CAAC,gBAAgB,CAAC,YAAY;YAC/C,OAAO,UAAU,CAAC,gBAAgB,CAAC,mBAAmB;YACtD,OAAO,UAAU,CAAC,gBAAgB,CAAC,iBAAiB;QACtD;QAEA,8CAA8C;QAC9C,OAAO,gBAAgB,CAAC,gBAAgB;QAExC,yBAAyB;QACzB,OAAO;YACL,uBAAuB;YACvB,IAAI,OAAO,UAAU,EAAE;gBACrB,OAAO,UAAU,CAAC,mBAAmB,CAAC,YAAY;gBAClD,OAAO,UAAU,CAAC,mBAAmB,CAAC,mBAAmB;gBACzD,OAAO,UAAU,CAAC,mBAAmB,CAAC,iBAAiB;YACzD;YACA,OAAO,mBAAmB,CAAC,gBAAgB;YAE3C,gBAAgB;YAChB,MAAM,eAAe,SAAS,cAAc,CAAC;YAC7C,IAAI,cAAc;gBAChB,aAAa,MAAM;YACrB;YAEA,4BAA4B;YAC5B,UAAU,IAAI;QAChB;IACF,GAAG,EAAE;IAEL,yDAAyD;IACzD,OAAO;AACT","debugId":null}}]
}