{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/services/housingService.ts"],"sourcesContent":["import { \r\n  ResidentialComplex, \r\n  Building, \r\n  Room,\r\n  Facility\r\n} from '@/models/types';\r\n\r\n// Helper function to get absolute URL\r\nfunction getAbsoluteUrl(path: string): string {\r\n  // In browser, use window.location.origin\r\n  // In Node.js (server-side), we need to construct it from environment variables\r\n  const baseUrl = typeof window !== 'undefined' \r\n    ? window.location.origin \r\n    : process.env.NEXT_PUBLIC_BASE_URL || 'http://localhost:3000';\r\n    \r\n  return `${baseUrl}${path}`;\r\n}\r\n\r\n// Residential Complex Operations\r\nexport const getComplexes = async (): Promise<ResidentialComplex[]> => {\r\n  try {\r\n    const response = await fetch(getAbsoluteUrl('/api/housing'));\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`فشل في جلب المجمعات السكنية: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('فشل في جلب المجمعات السكنية:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getComplexById = async (id: string): Promise<ResidentialComplex | null> => {\r\n  try {\r\n    const response = await fetch(getAbsoluteUrl(`/api/housing/${id}`));\r\n    \r\n    if (response.status === 404) {\r\n      return null;\r\n    }\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`فشل في جلب المجمع السكني: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`فشل في جلب المجمع السكني بالمعرف ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createComplex = async (complex: Omit<ResidentialComplex, 'id' | 'created_at'>): Promise<ResidentialComplex> => {\r\n  console.log('محاولة إنشاء مجمع سكني جديد:', complex);\r\n  \r\n  try {\r\n    if (!complex.name || !complex.location) {\r\n      throw new Error('اسم المجمع والموقع مطلوبان');\r\n    }\r\n    \r\n    const response = await fetch(getAbsoluteUrl('/api/housing'), {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(complex),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `فشل في إنشاء المجمع السكني: ${response.statusText}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    console.log('تم إنشاء المجمع بنجاح:', data);\r\n    return data;\r\n  } catch (err) {\r\n    console.error('خطأ غير متوقع عند إنشاء المجمع:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updateComplex = async (id: string, updates: Partial<ResidentialComplex>): Promise<ResidentialComplex> => {\r\n  try {\r\n    const response = await fetch(getAbsoluteUrl('/api/housing'), {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        id,\r\n        ...updates\r\n      }),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `فشل في تحديث المجمع السكني: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`فشل في تحديث المجمع السكني بالمعرف ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteComplex = async (id: string): Promise<void> => {\r\n  try {\r\n    const response = await fetch(getAbsoluteUrl(`/api/housing?id=${id}`), {\r\n      method: 'DELETE',\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `فشل في حذف المجمع السكني: ${response.statusText}`);\r\n    }\r\n  } catch (error) {\r\n    console.error(`فشل في حذف المجمع السكني بالمعرف ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const testDatabaseConnection = async (): Promise<boolean> => {\r\n  try {\r\n    const response = await fetch(getAbsoluteUrl('/api/housing'), {\r\n      method: 'OPTIONS',\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      return false;\r\n    }\r\n    \r\n    const data = await response.json();\r\n    return data.success;\r\n  } catch (error) {\r\n    console.error('فشل في اختبار الاتصال بقاعدة البيانات:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Building Operations\r\nexport const getBuildings = async (complexId?: string): Promise<Building[]> => {\r\n  try {\r\n    const url = complexId \r\n      ? getAbsoluteUrl(`/api/housing/buildings?complexId=${complexId}`) \r\n      : getAbsoluteUrl('/api/housing/buildings');\r\n      \r\n    const response = await fetch(url);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`فشل في جلب المباني: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('فشل في جلب المباني:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getBuildingById = async (id: string): Promise<Building | null> => {\r\n  try {\r\n    const response = await fetch(getAbsoluteUrl(`/api/housing/buildings/${id}`));\r\n    \r\n    if (response.status === 404) {\r\n      return null;\r\n    }\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`فشل في جلب المبنى: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`فشل في جلب المبنى بالمعرف ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createBuilding = async (building: Omit<Building, 'id'>): Promise<Building> => {\r\n  try {\r\n    const response = await fetch(getAbsoluteUrl('/api/housing/buildings'), {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(building),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `فشل في إنشاء المبنى: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('فشل في إنشاء مبنى جديد:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateBuilding = async (id: string, updates: Partial<Building>): Promise<Building> => {\r\n  try {\r\n    const response = await fetch(getAbsoluteUrl('/api/housing/buildings'), {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        id,\r\n        ...updates\r\n      }),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `فشل في تحديث المبنى: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`فشل في تحديث المبنى بالمعرف ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteBuilding = async (id: string): Promise<void> => {\r\n  try {\r\n    const response = await fetch(getAbsoluteUrl(`/api/housing/buildings?id=${id}`), {\r\n      method: 'DELETE',\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `فشل في حذف المبنى: ${response.statusText}`);\r\n    }\r\n  } catch (error) {\r\n    console.error(`فشل في حذف المبنى بالمعرف ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Room Operations\r\nexport const getRooms = async (buildingId?: string): Promise<Room[]> => {\r\n  try {\r\n    const url = buildingId \r\n      ? getAbsoluteUrl(`/api/housing/rooms?buildingId=${buildingId}`) \r\n      : getAbsoluteUrl('/api/housing/rooms');\r\n    \r\n    console.log(`Fetching rooms from ${url}`);\r\n    const response = await fetch(url, {\r\n      cache: 'no-store'\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      let errorMessage;\r\n      try {\r\n        const errorData = JSON.parse(errorText);\r\n        errorMessage = errorData.error || response.statusText;\r\n      } catch {\r\n        errorMessage = errorText || response.statusText;\r\n      }\r\n      \r\n      console.error(`Error response from rooms API: ${errorMessage}`);\r\n      throw new Error(`فشل في جلب الغرف: ${errorMessage}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    \r\n    return data.map((room: any) => ({\r\n      id: room.id,\r\n      building_id: room.building_id,\r\n      room_number: room.room_number,\r\n      type: room.type,\r\n      status: room.status || 'available',\r\n      floor: room.floor,\r\n      name: room.room_number\r\n    }));\r\n  } catch (error: any) {\r\n    console.error('فشل في جلب الغرف:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Facility Operations\r\nexport const getFacilities = async (complexId?: string, buildingId?: string): Promise<Facility[]> => {\r\n  try {\r\n    let url = '/api/housing/facilities';\r\n    const params = new URLSearchParams();\r\n    \r\n    if (complexId) params.append('complexId', complexId);\r\n    if (buildingId) params.append('buildingId', buildingId);\r\n    \r\n    if (params.toString()) {\r\n      url += `?${params.toString()}`;\r\n    }\r\n    \r\n    const absoluteUrl = getAbsoluteUrl(url);\r\n    console.log(`Fetching facilities from ${absoluteUrl}`);\r\n    const response = await fetch(absoluteUrl, {\r\n      cache: 'no-store' \r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      let errorMessage;\r\n      try {\r\n        const errorData = JSON.parse(errorText);\r\n        errorMessage = errorData.error || response.statusText;\r\n      } catch {\r\n        errorMessage = errorText || response.statusText;\r\n      }\r\n      \r\n      console.error(`Error response from facilities API: ${errorMessage}`);\r\n      throw new Error(`فشل في جلب المرافق: ${errorMessage}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    \r\n    return data.map((facility: any) => ({\r\n      id: facility.id,\r\n      complex_id: facility.complex_id,\r\n      building_id: facility.building_id,\r\n      name: facility.name,\r\n      type: facility.type,\r\n      location_description: facility.location_description\r\n    }));\r\n  } catch (error: any) {\r\n    console.error('فشل في جلب المرافق:', error);\r\n    throw error;\r\n  }\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/components/HousingVisualization.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from 'react';\r\nimport { ResidentialComplex, Building, Floor, Room, Service } from '@/models/types';\r\n\r\ninterface HousingVisualizationProps {\r\n  complexes: ResidentialComplex[];\r\n  onSelectComplex?: (complexId: string) => void;\r\n  onSelectBuilding?: (buildingId: string) => void;\r\n  onSelectFloor?: (floorNumber: number) => void;\r\n  onSelectRoom?: (roomNumber: string) => void;\r\n}\r\n\r\nexport default function HousingVisualization({\r\n  complexes,\r\n  onSelectComplex,\r\n  onSelectBuilding,\r\n  onSelectFloor,\r\n  onSelectRoom\r\n}: HousingVisualizationProps) {\r\n  const [selectedComplex, setSelectedComplex] = useState<string | null>(null);\r\n  const [selectedBuilding, setSelectedBuilding] = useState<string | null>(null);\r\n  const [selectedFloor, setSelectedFloor] = useState<number | null>(null);\r\n  const [activeView, setActiveView] = useState<'card' | 'tree' | '3d'>('card');\r\n  const [showDetails, setShowDetails] = useState<boolean>(false);\r\n  \r\n  // Get current selected complex object\r\n  const currentComplex = complexes.find(c => c.id === selectedComplex);\r\n  \r\n  // Get current selected building object\r\n  const currentBuilding = currentComplex && currentComplex.buildings ? \r\n    currentComplex.buildings.find(b => b.id === selectedBuilding) : undefined;\r\n  \r\n  // Get current selected floor object\r\n  const currentFloor = currentBuilding && currentBuilding.floors ? \r\n    currentBuilding.floors.find(f => f.number === selectedFloor) : undefined;\r\n\r\n  const handleComplexSelect = (complexId: string) => {\r\n    setSelectedComplex(complexId);\r\n    setSelectedBuilding(null);\r\n    setSelectedFloor(null);\r\n    if (onSelectComplex) onSelectComplex(complexId);\r\n  };\r\n\r\n  const handleBuildingSelect = (buildingId: string) => {\r\n    setSelectedBuilding(buildingId);\r\n    setSelectedFloor(null);\r\n    if (onSelectBuilding) onSelectBuilding(buildingId);\r\n  };\r\n\r\n  const handleFloorSelect = (floorNumber: number) => {\r\n    setSelectedFloor(floorNumber);\r\n    if (onSelectFloor) onSelectFloor(floorNumber);\r\n  };\r\n\r\n  const handleRoomSelect = (roomNumber: string) => {\r\n    if (onSelectRoom) onSelectRoom(roomNumber);\r\n  };\r\n\r\n  // Color generator for consistent but different colors\r\n  const getColor = (index: number, type: 'complex' | 'building' | 'floor' | 'room') => {\r\n    const baseColors = {\r\n      complex: 'bg-primary',\r\n      building: 'bg-secondary',\r\n      floor: 'bg-accent',\r\n      room: 'bg-neutral'\r\n    };\r\n    \r\n    const colorVariants = [\r\n      'bg-primary',\r\n      'bg-secondary',\r\n      'bg-accent',\r\n      'bg-neutral',\r\n      'bg-info',\r\n      'bg-success',\r\n      'bg-warning',\r\n      'bg-error'\r\n    ];\r\n    \r\n    // For complexes, use rotating colors\r\n    if (type === 'complex') return colorVariants[index % colorVariants.length];\r\n    \r\n    // Otherwise use the base color for the type\r\n    return baseColors[type];\r\n  };\r\n\r\n  // Room status to styling mapping\r\n  const getRoomStatusClass = (status: string) => {\r\n    switch(status) {\r\n      case 'available': return 'border-success bg-success bg-opacity-10';\r\n      case 'occupied': return 'border-warning bg-warning bg-opacity-10';\r\n      case 'maintenance': return 'border-error bg-error bg-opacity-10';\r\n      default: return 'border-neutral';\r\n    }\r\n  };\r\n\r\n  const getStatusLabel = (status: string) => {\r\n    switch(status) {\r\n      case 'available': return 'متاح';\r\n      case 'occupied': return 'مشغول';\r\n      case 'maintenance': return 'قيد الصيانة';\r\n      default: return status;\r\n    }\r\n  };\r\n\r\n  // Card View\r\n  const renderCardView = () => (\r\n    <div className=\"p-4\">\r\n      {/* Complexes Section */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n        {complexes.map((complex, index) => (\r\n          <div \r\n            key={complex.id}\r\n            className={`card shadow-lg cursor-pointer transition-all transform hover:scale-105 border-2 ${selectedComplex === complex.id ? 'border-primary' : 'border-transparent'}`}\r\n            onClick={() => handleComplexSelect(complex.id)}\r\n          >\r\n            <div className={`card-body ${getColor(index, 'complex')} text-white`}>\r\n              <h2 className=\"card-title text-xl text-right flex justify-between\">\r\n                {complex.name}\r\n                <span className=\"badge badge-neutral\">{complex.buildings && complex.buildings.length || 0} مبنى</span>\r\n              </h2>\r\n              <p className=\"text-right\">{complex.location}</p>\r\n              {complex.description && <p className=\"text-right text-sm opacity-80\">{complex.description}</p>}\r\n            </div>\r\n            \r\n            {/* Show Buildings when complex is selected */}\r\n            {selectedComplex === complex.id && complex.buildings && Array.isArray(complex.buildings) && (\r\n              <div className=\"p-4 bg-base-200\">\r\n                <h3 className=\"text-right mb-3 font-bold text-lg\">المباني</h3>\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\r\n                  {complex.buildings.map((building, buildingIndex) => (\r\n                    <div \r\n                      key={building.id} \r\n                      className={`card shadow bg-base-100 cursor-pointer hover:bg-base-200 ${selectedBuilding === building.id ? 'border-2 border-secondary' : ''}`}\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleBuildingSelect(building.id);\r\n                      }}\r\n                    >\r\n                      <div className=\"card-body p-4\">\r\n                        <h4 className=\"text-right font-bold\">{building.name}</h4>\r\n                        <p className=\"text-right text-sm\">{building.floors_count || (building.floors && building.floors.length) || 0} طابق</p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Building Details Section - Show when a building is selected */}\r\n      {currentBuilding && (\r\n        <div className=\"mt-8 card shadow-lg border-2 border-secondary\">\r\n          <div className=\"card-body bg-secondary text-white\">\r\n            <h2 className=\"card-title text-xl text-right\">\r\n              {currentBuilding.name} - {currentComplex?.name}\r\n              <span className=\"badge badge-neutral\">{currentBuilding.floors && currentBuilding.floors.length || 0} طابق</span>\r\n            </h2>\r\n            {currentBuilding.description && (\r\n              <p className=\"text-right\">{currentBuilding.description}</p>\r\n            )}\r\n          </div>\r\n          \r\n          {/* Floors Section */}\r\n          <div className=\"p-4\">\r\n            <h3 className=\"text-right mb-3 font-bold text-lg\">الطوابق</h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-3\">\r\n              {currentBuilding.floors && currentBuilding.floors\r\n                .sort((a, b) => b.number - a.number) // Sort floors in descending order\r\n                .map((floor) => (\r\n                <div \r\n                  key={floor.id} \r\n                  className={`card shadow cursor-pointer bg-base-100 hover:bg-base-200 ${selectedFloor === floor.number ? 'border-2 border-accent' : ''}`}\r\n                  onClick={() => handleFloorSelect(floor.number)}\r\n                >\r\n                  <div className=\"card-body p-4\">\r\n                    <h4 className=\"text-right font-bold\">الطابق {floor.number}</h4>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"badge badge-primary\">{floor.rooms && floor.rooms.length || 0} غرفة</span>\r\n                      <span className=\"badge badge-secondary\">{floor.services && floor.services.length || 0} خدمة</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Floor Details Section - Show when a floor is selected */}\r\n      {currentFloor && (\r\n        <div className=\"mt-8 card shadow-lg border-2 border-accent\">\r\n          <div className=\"card-body bg-accent text-white\">\r\n            <h2 className=\"card-title text-xl text-right\">\r\n              الطابق {currentFloor.number} - {currentBuilding?.name}\r\n            </h2>\r\n            <div className=\"flex justify-end gap-2\">\r\n              <span className=\"badge badge-neutral\">{currentFloor.rooms && currentFloor.rooms.length || 0} غرفة</span>\r\n              <span className=\"badge badge-neutral\">{currentFloor.services && currentFloor.services.length || 0} خدمة</span>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Rooms Section */}\r\n          <div className=\"p-4\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <div className=\"flex gap-4\">\r\n                <div className=\"flex items-center\">\r\n                  <span className=\"h-3 w-3 rounded-full bg-success mr-2\"></span>\r\n                  <span className=\"text-xs\">متاح</span>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                  <span className=\"h-3 w-3 rounded-full bg-warning mr-2\"></span>\r\n                  <span className=\"text-xs\">مشغول</span>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                  <span className=\"h-3 w-3 rounded-full bg-error mr-2\"></span>\r\n                  <span className=\"text-xs\">صيانة</span>\r\n                </div>\r\n              </div>\r\n              <h3 className=\"text-right font-bold text-lg\">الغرف</h3>\r\n            </div>\r\n            {currentFloor.rooms && currentFloor.rooms.length > 0 ? (\r\n              <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-3 mb-6\">\r\n                {currentFloor.rooms.map((room) => (\r\n                  <div \r\n                    key={room.id} \r\n                    className={`relative card shadow cursor-pointer hover:shadow-lg border-2 ${getRoomStatusClass(room.status)}`}\r\n                    onClick={() => handleRoomSelect(room.room_number)}\r\n                  >\r\n                    <div className=\"absolute top-2 left-2\">\r\n                      <span className={`text-xs badge ${\r\n                        room.status === 'available' ? 'badge-success' : \r\n                        room.status === 'occupied' ? 'badge-warning' : 'badge-error'\r\n                      }`}>\r\n                        {getStatusLabel(room.status)}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"card-body p-3\">\r\n                      <h4 className=\"text-right font-bold\">{room.name}</h4>\r\n                      <p className=\"text-right text-sm\">رقم الغرفة: {room.room_number}</p>\r\n                      <p className=\"text-right text-xs opacity-70\">{room.type}</p>\r\n                      {room.services && room.services.length > 0 && (\r\n                        <div className=\"text-right mt-2\">\r\n                          <span className=\"badge badge-sm\">{room.services.length} خدمة</span>\r\n                        </div>\r\n                      )}\r\n                      {room.area && (\r\n                        <p className=\"text-right text-xs mt-1\">{room.area} م²</p>\r\n                      )}\r\n                      {room.hasBalcony && (\r\n                        <div className=\"text-right mt-1\">\r\n                          <span className=\"badge badge-outline badge-xs\">شرفة</span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"alert alert-info\">\r\n                <p className=\"text-center\">لا توجد غرف في هذا الطابق</p>\r\n              </div>\r\n            )}\r\n\r\n            {/* Services Section */}\r\n            {currentFloor.services && currentFloor.services.length > 0 && (\r\n              <>\r\n                <h3 className=\"text-right mb-3 font-bold text-lg\">الخدمات المشتركة بالطابق</h3>\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"table table-compact w-full\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"text-right\">الاسم</th>\r\n                        <th className=\"text-right\">النوع</th>\r\n                        <th className=\"text-right\">الموقع</th>\r\n                        <th className=\"text-right\">الوصف</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {currentFloor.services.map((service) => (\r\n                        <tr key={service.id} className=\"hover\">\r\n                          <td className=\"text-right\">{service.name}</td>\r\n                          <td className=\"text-right\">{service.type}</td>\r\n                          <td className=\"text-right\">{service.location}</td>\r\n                          <td className=\"text-right\">{service.description}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  // Tree View - Hierarchical representation\r\n  const renderTreeView = () => (\r\n    <div className=\"p-4\">\r\n      <div className=\"flex flex-col space-y-4\">\r\n        {complexes.map((complex, index) => (\r\n          <div key={complex.id} className=\"border rounded-lg overflow-hidden\">\r\n            <div \r\n              className={`${getColor(index, 'complex')} p-4 flex justify-between items-center text-white cursor-pointer`}\r\n              onClick={() => handleComplexSelect(complex.id)}\r\n            >\r\n              <div className=\"flex items-center\">\r\n                <span className=\"badge badge-neutral\">{complex.buildings && complex.buildings.length || 0} مبنى</span>\r\n              </div>\r\n              <div className=\"text-right\">\r\n                <h2 className=\"font-bold text-lg\">{complex.name}</h2>\r\n                <p className=\"text-sm opacity-90\">{complex.location}</p>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Expand buildings when complex is selected */}\r\n            {selectedComplex === complex.id && complex.buildings && Array.isArray(complex.buildings) && complex.buildings.length > 0 && (\r\n              <div className=\"bg-base-100 p-2 border-t\">\r\n                <div className=\"relative\">\r\n                  {/* Vertical line connecting buildings */}\r\n                  <div className=\"absolute bottom-0 top-0 right-7 border-r-2 border-dashed\"></div>\r\n                  \r\n                  {complex.buildings.map((building, buildingIndex) => (\r\n                    <div key={building.id} className=\"relative mr-8 mb-2\">\r\n                      {/* Horizontal line to building */}\r\n                      <div className=\"absolute top-6 right-[-28px] w-7 border-t-2 border-dashed\"></div>\r\n                      \r\n                      <div \r\n                        className={`${selectedBuilding === building.id ? 'border-2 border-secondary' : 'border'} \r\n                                    rounded-lg overflow-hidden shadow-sm`}\r\n                      >\r\n                        <div \r\n                          className=\"bg-base-200 p-3 flex justify-between items-center cursor-pointer\"\r\n                          onClick={() => handleBuildingSelect(building.id)}\r\n                        >\r\n                          <span className=\"badge badge-secondary\">{building.floors && building.floors.length || 0} طابق</span>\r\n                          <h3 className=\"text-right font-bold\">{building.name}</h3>\r\n                        </div>\r\n                        \r\n                        {/* Expand floors when building is selected */}\r\n                        {selectedBuilding === building.id && building.floors && Array.isArray(building.floors) && building.floors.length > 0 && (\r\n                          <div className=\"bg-base-100 p-2 border-t relative\">\r\n                            {/* Vertical line connecting floors */}\r\n                            <div className=\"absolute bottom-0 top-0 right-7 border-r-2 border-dotted\"></div>\r\n                            \r\n                            {building.floors\r\n                              .sort((a, b) => b.number - a.number)\r\n                              .map((floor) => (\r\n                              <div key={floor.id} className=\"relative mr-8 mb-2\">\r\n                                {/* Horizontal line to floor */}\r\n                                <div className=\"absolute top-6 right-[-28px] w-7 border-t-2 border-dotted\"></div>\r\n                                \r\n                                <div \r\n                                  className={`${selectedFloor === floor.number ? 'border-2 border-accent' : 'border'} \r\n                                            rounded-lg overflow-hidden shadow-sm`}\r\n                                >\r\n                                  <div \r\n                                    className=\"bg-base-200 p-2 flex justify-between items-center cursor-pointer\"\r\n                                    onClick={() => handleFloorSelect(floor.number)}\r\n                                  >\r\n                                    <div className=\"flex space-x-2\">\r\n                                      <span className=\"badge badge-primary badge-sm\">{floor.rooms.length} غرفة</span>\r\n                                      <span className=\"badge badge-secondary badge-sm\">{floor.services.length} خدمة</span>\r\n                                    </div>\r\n                                    <h4 className=\"text-right\">الطابق {floor.number}</h4>\r\n                                  </div>\r\n                                  \r\n                                  {/* Expand rooms when floor is selected */}\r\n                                  {selectedFloor === floor.number && (\r\n                                    <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-2 p-2 border-t\">\r\n                                      {floor.rooms.map((room) => (\r\n                                        <div \r\n                                          key={room.id}\r\n                                          className={`border rounded p-2 text-right cursor-pointer ${getRoomStatusClass(room.status)}`}\r\n                                          onClick={() => handleRoomSelect(room.room_number)}\r\n                                        >\r\n                                          <div className=\"flex justify-between items-center\">\r\n                                            <span className={`badge badge-xs ${\r\n                                              room.status === 'available' ? 'badge-success' :\r\n                                              room.status === 'occupied' ? 'badge-warning' : 'badge-error'\r\n                                            }`}>\r\n                                              {getStatusLabel(room.status)}\r\n                                            </span>\r\n                                            <span className=\"font-bold\">{room.name}</span>\r\n                                          </div>\r\n                                          <div className=\"text-xs\">{room.room_number}</div>\r\n                                        </div>\r\n                                      ))}\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // 3D-like View\r\n  const render3DView = () => (\r\n    <div className=\"p-4\">\r\n      <div className=\"grid grid-cols-1 gap-8\">\r\n        {complexes.map((complex, index) => (\r\n          <div key={complex.id} className=\"perspective\">\r\n            <div\r\n              className={`relative p-4 transform-style-3d cursor-pointer ${\r\n                selectedComplex === complex.id ? 'rotate-x-5' : ''\r\n              }`}\r\n              onClick={() => handleComplexSelect(complex.id)}\r\n            >\r\n              <div className={`${getColor(index, 'complex')} p-6 rounded-lg shadow-xl transform text-white transition-all duration-300`}>\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"badge badge-lg badge-outline\">{complex.buildings && complex.buildings.length || 0} مبنى</span>\r\n                  <h2 className=\"text-xl font-bold text-right\">{complex.name}</h2>\r\n                </div>\r\n                <p className=\"text-right mt-2\">{complex.location}</p>\r\n                {complex.description && <p className=\"text-right text-sm mt-2 opacity-80\">{complex.description}</p>}\r\n              </div>\r\n              \r\n              {/* Buildings */}\r\n              {selectedComplex === complex.id && complex.buildings && Array.isArray(complex.buildings) && complex.buildings.length > 0 && (\r\n                <div className=\"mt-4 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                  {complex.buildings.map((building, bIndex) => (\r\n                    <div \r\n                      key={building.id} \r\n                      className={`transform-style-3d cursor-pointer ${\r\n                        selectedBuilding === building.id ? 'translate-z-12' : 'hover:translate-z-4'\r\n                      }`}\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleBuildingSelect(building.id);\r\n                      }}\r\n                    >\r\n                      <div className={`bg-secondary p-4 rounded-lg shadow-lg transform transition-all duration-300 ${\r\n                        selectedBuilding === building.id ? 'rotate-y-5 shadow-2xl' : ''\r\n                      }`}>\r\n                        <div className=\"flex justify-between items-center text-white\">\r\n                          <span className=\"badge badge-outline\">{building.floors && building.floors.length || 0} طابق</span>\r\n                          <h3 className=\"font-bold text-right\">{building.name}</h3>\r\n                        </div>\r\n                      </div>\r\n                      \r\n                      {/* Floors Stack */}\r\n                      {selectedBuilding === building.id && building.floors && Array.isArray(building.floors) && building.floors.length > 0 && (\r\n                        <div className=\"mt-4 relative pt-4 pb-4 perspective-600\">\r\n                          {building.floors\r\n                            .sort((a, b) => b.number - a.number)\r\n                            .map((floor, fIndex) => {\r\n                              // Calculate offset for 3D stack effect\r\n                              const offset = fIndex * 8;\r\n                              return (\r\n                                <div\r\n                                  key={floor.id}\r\n                                  style={{\r\n                                    marginTop: `-${offset}px`,\r\n                                    marginBottom: `${offset}px`,\r\n                                    zIndex: building.floors.length - fIndex,\r\n                                    transform: `translateZ(${fIndex * -5}px)`,\r\n                                  }}\r\n                                  className={`relative bg-accent p-3 rounded-lg shadow ${\r\n                                    selectedFloor === floor.number ? 'translate-y-[-10px] shadow-lg' : ''\r\n                                  } mb-2 cursor-pointer transition-all hover:translate-y-[-5px]`}\r\n                                  onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    handleFloorSelect(floor.number);\r\n                                  }}\r\n                                >\r\n                                  <div className=\"flex justify-between items-center text-white\">\r\n                                    <div className=\"flex gap-2\">\r\n                                      <span className=\"badge badge-xs badge-outline\">{floor.rooms && floor.rooms.length || 0} غرفة</span>\r\n                                      <span className=\"badge badge-xs badge-outline\">{floor.services && floor.services.length || 0} خدمة</span>\r\n                                    </div>\r\n                                    <span className=\"font-bold\">الطابق {floor.number}</span>\r\n                                  </div>\r\n                                </div>\r\n                              );\r\n                            })}\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {/* Floor Details */}\r\n                      {selectedFloor !== null && selectedBuilding === building.id && currentFloor && (\r\n                        <div className=\"mt-4 bg-base-200 rounded-lg p-4 shadow-inner\">\r\n                          <h4 className=\"text-right font-bold mb-2\">محتويات الطابق {selectedFloor}</h4>\r\n                          <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-2\">\r\n                            {currentFloor.rooms && currentFloor.rooms.length > 0 && currentFloor.rooms.map((room) => (\r\n                              <div\r\n                                key={room.id}\r\n                                className={`text-right p-2 rounded ${getRoomStatusClass(room.status)} cursor-pointer`}\r\n                                onClick={(e) => {\r\n                                  e.stopPropagation();\r\n                                  handleRoomSelect(room.room_number);\r\n                                }}\r\n                              >\r\n                                <div className=\"flex justify-between\">\r\n                                  <span className={`badge badge-xs ${\r\n                                    room.status === 'available' ? 'badge-success' :\r\n                                    room.status === 'occupied' ? 'badge-warning' : 'badge-error'\r\n                                  }`}></span>\r\n                                  <span className=\"font-bold\">{room.name}</span>\r\n                                </div>\r\n                                <span className=\"text-xs block\">{room.room_number}</span>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // CSS classes for the 3D effect\r\n  const styleElement = (\r\n    <style jsx global>{`\r\n      .perspective {\r\n        perspective: 2000px;\r\n      }\r\n      .perspective-600 {\r\n        perspective: 600px;\r\n      }\r\n      .transform-style-3d {\r\n        transform-style: preserve-3d;\r\n      }\r\n      .rotate-x-5 {\r\n        transform: rotateX(5deg);\r\n      }\r\n      .rotate-y-5 {\r\n        transform: rotateY(5deg);\r\n      }\r\n      .translate-z-4 {\r\n        transform: translateZ(4px);\r\n      }\r\n      .translate-z-12 {\r\n        transform: translateZ(12px);\r\n      }\r\n    `}</style>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {styleElement}\r\n      <div className=\"container mx-auto\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <div className=\"flex gap-2\">\r\n            <button \r\n              className={`btn btn-sm ${activeView === 'card' ? 'btn-primary' : 'btn-ghost'}`} \r\n              onClick={() => setActiveView('card')}\r\n            >\r\n              عرض البطاقات\r\n            </button>\r\n            <button \r\n              className={`btn btn-sm ${activeView === 'tree' ? 'btn-primary' : 'btn-ghost'}`} \r\n              onClick={() => setActiveView('tree')}\r\n            >\r\n              عرض شجري\r\n            </button>\r\n            <button \r\n              className={`btn btn-sm ${activeView === '3d' ? 'btn-primary' : 'btn-ghost'}`} \r\n              onClick={() => setActiveView('3d')}\r\n            >\r\n              عرض ثلاثي الأبعاد\r\n            </button>\r\n          </div>\r\n          <div className=\"text-right\">\r\n            <h1 className=\"text-2xl font-bold\">هيكل الإسكان</h1>\r\n            <p className=\"text-sm opacity-70\">عرض المجمعات والمباني والطوابق والغرف</p>\r\n          </div>\r\n        </div>\r\n\r\n        {complexes.length === 0 ? (\r\n          <div className=\"text-center p-12 bg-base-200 rounded-lg\">\r\n            <h2 className=\"text-xl font-bold\">لا توجد مجمعات سكنية حالياً</h2>\r\n            <p className=\"text-sm mt-2\">قم بإضافة مجمعات سكنية للبدء</p>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {activeView === 'card' && renderCardView()}\r\n            {activeView === 'tree' && renderTreeView()}\r\n            {activeView === '3d' && render3DView()}\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1785, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/app/housing/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { \r\n  getComplexes, \r\n  getBuildings, \r\n  getRooms, \r\n  getFacilities,\r\n  createComplex,\r\n  testDatabaseConnection\r\n} from '@/lib/services/housingService';\r\nimport { ResidentialComplex, Building, Room, Facility } from '@/models/types';\r\nimport HousingVisualization from '@/components/HousingVisualization';\r\n\r\nexport default function HousingPage() {\r\n  const [complexes, setComplexes] = useState<ResidentialComplex[]>([]);\r\n  const [selectedComplex, setSelectedComplex] = useState<string | null>(null);\r\n  const [buildings, setBuildings] = useState<Building[]>([]);\r\n  const [selectedBuilding, setSelectedBuilding] = useState<string | null>(null);\r\n  const [rooms, setRooms] = useState<Room[]>([]);\r\n  const [facilities, setFacilities] = useState<Facility[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [activeTab, setActiveTab] = useState<'visualization' | 'rooms' | 'facilities'>('visualization');\r\n  \r\n  const [showAddComplexModal, setShowAddComplexModal] = useState(false);\r\n  const [newComplex, setNewComplex] = useState({ name: '', location: '', description: '' });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // Safe data fetching utility that handles errors properly\r\n  const safeDataFetch = async <T,>(fetchFn: () => Promise<T>, errorMessage: string): Promise<T | undefined> => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      return await fetchFn();\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError(errorMessage);\r\n      return undefined;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Load all complexes on component mount\r\n  useEffect(() => {\r\n    const loadComplexes = async () => {\r\n      await safeDataFetch(\r\n        async () => {\r\n          const data = await getComplexes();\r\n          setComplexes(data);\r\n          return data;\r\n        },\r\n        'فشل في جلب المجمعات السكنية. يرجى التحقق من الاتصال والمحاولة مرة أخرى.'\r\n      );\r\n    };\r\n\r\n    loadComplexes();\r\n  }, []);\r\n\r\n  // Load buildings when a complex is selected\r\n  useEffect(() => {\r\n    if (selectedComplex) {\r\n      const fetchBuildings = async () => {\r\n        await safeDataFetch(\r\n          async () => {\r\n            const data = await getBuildings(selectedComplex);\r\n            setBuildings(data);\r\n            setSelectedBuilding(data.length > 0 ? data[0].id : null);\r\n            return data;\r\n          },\r\n          'فشل في جلب المباني. يرجى التحقق من الاتصال والمحاولة مرة أخرى.'\r\n        );\r\n      };\r\n      fetchBuildings();\r\n    }\r\n  }, [selectedComplex]);\r\n\r\n  // Load rooms and facilities when a building is selected\r\n  useEffect(() => {\r\n    if (selectedBuilding) {\r\n      const fetchRoomsAndFacilities = async () => {\r\n        await safeDataFetch(\r\n          async () => {\r\n            const [roomsData, facilitiesData] = await Promise.all([\r\n              getRooms(selectedBuilding),\r\n              selectedComplex ? getFacilities(selectedComplex) : Promise.resolve([])\r\n            ]);\r\n            setRooms(roomsData);\r\n            setFacilities(facilitiesData);\r\n            return { rooms: roomsData, facilities: facilitiesData };\r\n          },\r\n          'فشل في جلب الغرف والمرافق. يرجى التحقق من الاتصال والمحاولة مرة أخرى.'\r\n        );\r\n      };\r\n      fetchRoomsAndFacilities();\r\n    }\r\n  }, [selectedBuilding, selectedComplex]);\r\n\r\n  const handleAddComplex = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!newComplex.name || !newComplex.location) {\r\n      setError('الاسم والموقع مطلوبان');\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    try {\r\n      const createdComplex = await createComplex({\r\n        ...newComplex,\r\n        buildings: []\r\n      });\r\n      setComplexes(prev => [...prev, createdComplex]);\r\n      setNewComplex({ name: '', location: '', description: '' });\r\n      setShowAddComplexModal(false);\r\n    } catch (error) {\r\n      console.error('Error creating complex:', error);\r\n      setError('حدث خطأ أثناء إنشاء المجمع. يرجى المحاولة مرة أخرى.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleSelectComplex = (complexId: string) => {\r\n    setSelectedComplex(complexId);\r\n  };\r\n\r\n  const handleSelectBuilding = (buildingId: string) => {\r\n    setSelectedBuilding(buildingId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <div className=\"flex space-x-2\">\r\n          <div>\r\n            <button className=\"btn btn-primary\" onClick={() => setShowAddComplexModal(true)}>\r\n              إضافة مجمع جديد\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <h1 className=\"text-2xl font-bold text-right\">إدارة السكن</h1>\r\n      </div>\r\n\r\n      {loading && <div className=\"loading loading-spinner loading-lg\"></div>}\r\n\r\n      {error && (\r\n        <div className=\"alert alert-error mb-4\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" /></svg>\r\n          <span>{error}</span>\r\n          <button className=\"btn btn-sm\" onClick={() => setError(null)}>إغلاق</button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"flex justify-between mb-6\">\r\n        <div>\r\n          <label className=\"mr-2\">المجمع السكني:</label>\r\n          <select \r\n            className=\"select select-bordered\" \r\n            value={selectedComplex || ''}\r\n            onChange={e => setSelectedComplex(e.target.value || null)}\r\n          >\r\n            <option value=\"\">اختر مجمع سكني</option>\r\n            {complexes.map(complex => (\r\n              <option key={complex.id} value={complex.id}>{complex.name}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"tabs tabs-boxed mb-6\">\r\n        <a \r\n          className={`tab ${activeTab === 'visualization' ? 'tab-active' : ''}`}\r\n          onClick={() => setActiveTab('visualization')}\r\n        >\r\n          عرض الهيكل\r\n        </a>\r\n        <a \r\n          className={`tab ${activeTab === 'rooms' ? 'tab-active' : ''}`}\r\n          onClick={() => setActiveTab('rooms')}\r\n        >\r\n          الغرف\r\n        </a>\r\n        <a \r\n          className={`tab ${activeTab === 'facilities' ? 'tab-active' : ''}`}\r\n          onClick={() => setActiveTab('facilities')}\r\n        >\r\n          المرافق\r\n        </a>\r\n      </div>\r\n\r\n      {/* Visualization Tab */}\r\n      {activeTab === 'visualization' && (\r\n        <div className=\"bg-base-200 rounded-lg p-4 mb-4\">\r\n          <HousingVisualization \r\n            complexes={complexes} \r\n            onSelectComplex={handleSelectComplex} \r\n            onSelectBuilding={handleSelectBuilding}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Rooms Tab */}\r\n      {activeTab === 'rooms' && selectedBuilding && (\r\n        <div className=\"bg-base-200 rounded-lg p-4\">\r\n          <h2 className=\"text-xl font-bold mb-4 text-right\">الغرف</h2>\r\n          {rooms.length > 0 ? (\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"table w-full\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-right\">رقم الغرفة</th>\r\n                    <th className=\"text-right\">النوع</th>\r\n                    <th className=\"text-right\">الحالة</th>\r\n                    <th className=\"text-right\">الإجراءات</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {rooms.map(room => (\r\n                    <tr key={room.id}>\r\n                      <td className=\"text-right\">{room.room_number}</td>\r\n                      <td className=\"text-right\">{room.type}</td>\r\n                      <td className=\"text-right\">{\r\n                        room.status === 'available' ? 'متاحة' :\r\n                        room.status === 'occupied' ? 'مشغولة' : 'صيانة'\r\n                      }</td>\r\n                      <td>\r\n                        <button className=\"btn btn-xs btn-primary\">تفاصيل</button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <div className=\"card p-4\">\r\n              <p className=\"text-center\">لا توجد غرف في هذا المبنى</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Facilities Tab */}\r\n      {activeTab === 'facilities' && selectedComplex && (\r\n        <div className=\"bg-base-200 rounded-lg p-4\">\r\n          <h2 className=\"text-xl font-bold mb-4 text-right\">المرافق</h2>\r\n          {facilities.length > 0 ? (\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"table w-full\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-right\">الاسم</th>\r\n                    <th className=\"text-right\">النوع</th>\r\n                    <th className=\"text-right\">الموقع</th>\r\n                    <th className=\"text-right\">الإجراءات</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {facilities.map(facility => (\r\n                    <tr key={facility.id}>\r\n                      <td className=\"text-right\">{facility.name}</td>\r\n                      <td className=\"text-right\">{facility.type}</td>\r\n                      <td className=\"text-right\">{facility.location_description}</td>\r\n                      <td>\r\n                        <button className=\"btn btn-xs btn-primary\">تفاصيل</button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <div className=\"card p-4\">\r\n              <p className=\"text-center\">لا توجد مرافق في هذا المجمع</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Add Complex Modal */}\r\n      {showAddComplexModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 z-40 flex items-center justify-center p-4\">\r\n          <div className=\"bg-white rounded-lg shadow-lg p-6 w-full max-w-md\">\r\n            <h2 className=\"text-xl font-bold mb-4 text-right\">إضافة مجمع سكني جديد</h2>\r\n            <form onSubmit={handleAddComplex} className=\"text-right\">\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-gray-700 mb-2\">اسم المجمع</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input input-bordered w-full\"\r\n                  value={newComplex.name}\r\n                  onChange={e => setNewComplex({...newComplex, name: e.target.value})}\r\n                  placeholder=\"ادخل اسم المجمع السكني\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-gray-700 mb-2\">الموقع</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input input-bordered w-full\"\r\n                  value={newComplex.location}\r\n                  onChange={e => setNewComplex({...newComplex, location: e.target.value})}\r\n                  placeholder=\"ادخل موقع المجمع\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"mb-6\">\r\n                <label className=\"block text-gray-700 mb-2\">الوصف (اختياري)</label>\r\n                <textarea\r\n                  className=\"textarea textarea-bordered w-full\"\r\n                  value={newComplex.description}\r\n                  onChange={e => setNewComplex({...newComplex, description: e.target.value})}\r\n                  placeholder=\"وصف إضافي للمجمع\"\r\n                  rows={3}\r\n                />\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-outline\"\r\n                  onClick={() => setShowAddComplexModal(false)}\r\n                >\r\n                  إلغاء\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  {isSubmitting ? 'جاري الإضافة...' : 'إضافة المجمع'}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}