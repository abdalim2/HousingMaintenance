{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/neondb.ts"],"sourcesContent":["import { Pool } from 'pg';\r\n\r\n// استخدام عنوان الاتصال المباشر بقاعدة بيانات Neon\r\nconst connectionString = 'postgresql://HousingMaintenance_owner:npg_fC8S4bpZLsJw@ep-weathered-meadow-a44a1v3i-pooler.us-east-1.aws.neon.tech/HousingMaintenance?sslmode=require';\r\n\r\n// إنشاء تجمع اتصالات لقاعدة البيانات\r\nconst poolInstance = new Pool({\r\n  connectionString,\r\n  max: 20, // زيادة عدد الاتصالات المتزامنة\r\n  idleTimeoutMillis: 30000, // وقت انتظار أطول\r\n  connectionTimeoutMillis: 5000, // مهلة اتصال أقصر\r\n});\r\n\r\n// إصدار تجمع الاتصالات للاستخدام في الوظائف الأخرى\r\nexport const pool = poolInstance;\r\n\r\n// وظيفة مساعدة لتنفيذ استعلامات قاعدة البيانات مع إعادة المحاولة\r\nexport async function query(text: string, params?: any[], retries = 3) {\r\n  let lastError;\r\n  for (let attempt = 0; attempt < retries; attempt++) {\r\n    const client = await poolInstance.connect().catch(err => {\r\n      console.error(`فشل الاتصال بقاعدة البيانات (محاولة ${attempt + 1}/${retries}):`, err.message);\r\n      return null;\r\n    });\r\n    \r\n    if (!client) {\r\n      lastError = new Error('تعذر إنشاء اتصال بقاعدة البيانات');\r\n      continue;\r\n    }\r\n    \r\n    try {\r\n      const result = await client.query(text, params);\r\n      return result;\r\n    } catch (error: any) {\r\n      lastError = error;\r\n      console.error(`فشل الاستعلام (محاولة ${attempt + 1}/${retries}):`, error.message);\r\n    } finally {\r\n      client.release();\r\n    }\r\n  }\r\n  \r\n  // إذا وصلنا إلى هنا، فقد فشلت جميع المحاولات\r\n  throw lastError || new Error('فشل الاستعلام بعد عدة محاولات');\r\n}\r\n\r\n// التحقق من اتصال قاعدة البيانات\r\nexport async function testConnection() {\r\n  try {\r\n    const result = await query('SELECT NOW()', [], 1);\r\n    console.log('اتصال ناجح بقاعدة بيانات Neon:', result.rows[0]);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('فشل الاتصال بقاعدة بيانات Neon:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// وظيفة مساعدة للحصول على بيانات آمنة\r\nexport async function safeQuery(text: string, params?: any[], defaultValue: any = []) {\r\n  try {\r\n    const result = await query(text, params);\r\n    return result.rows || defaultValue;\r\n  } catch (error) {\r\n    console.error('فشل الاستعلام، استخدام القيمة الافتراضية:', error);\r\n    return defaultValue;\r\n  }\r\n}"],"names":[],"mappings":";;;;;;AAAA;;;;;;AAEA,mDAAmD;AACnD,MAAM,mBAAmB;AAEzB,qCAAqC;AACrC,MAAM,eAAe,IAAI,oGAAA,CAAA,OAAI,CAAC;IAC5B;IACA,KAAK;IACL,mBAAmB;IACnB,yBAAyB;AAC3B;AAGO,MAAM,OAAO;AAGb,eAAe,MAAM,IAAY,EAAE,MAAc,EAAE,UAAU,CAAC;IACnE,IAAI;IACJ,IAAK,IAAI,UAAU,GAAG,UAAU,SAAS,UAAW;QAClD,MAAM,SAAS,MAAM,aAAa,OAAO,GAAG,KAAK,CAAC,CAAA;YAChD,QAAQ,KAAK,CAAC,CAAC,oCAAoC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,OAAO;YAC5F,OAAO;QACT;QAEA,IAAI,CAAC,QAAQ;YACX,YAAY,IAAI,MAAM;YACtB;QACF;QAEA,IAAI;YACF,MAAM,SAAS,MAAM,OAAO,KAAK,CAAC,MAAM;YACxC,OAAO;QACT,EAAE,OAAO,OAAY;YACnB,YAAY;YACZ,QAAQ,KAAK,CAAC,CAAC,sBAAsB,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,OAAO;QAClF,SAAU;YACR,OAAO,OAAO;QAChB;IACF;IAEA,6CAA6C;IAC7C,MAAM,aAAa,IAAI,MAAM;AAC/B;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,SAAS,MAAM,MAAM,gBAAgB,EAAE,EAAE;QAC/C,QAAQ,GAAG,CAAC,kCAAkC,OAAO,IAAI,CAAC,EAAE;QAC5D,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mCAAmC;QACjD,OAAO;IACT;AACF;AAGO,eAAe,UAAU,IAAY,EAAE,MAAc,EAAE,eAAoB,EAAE;IAClF,IAAI;QACF,MAAM,SAAS,MAAM,MAAM,MAAM;QACjC,OAAO,OAAO,IAAI,IAAI;IACxB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6CAA6C;QAC3D,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/app/api/housing/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport { query, testConnection } from '@/lib/neondb';\r\nimport { \r\n  ResidentialComplex, \r\n  Building, \r\n  Room,\r\n  Facility\r\n} from '@/models/types';\r\n\r\n// وظيفة للتعامل مع الأخطاء وإرجاع استجابة موحدة\r\nfunction handleError(error: any) {\r\n  console.error('خطأ في واجهة API للإسكان:', error);\r\n  \r\n  return NextResponse.json(\r\n    { error: error.message || 'حدث خطأ غير متوقع' },\r\n    { status: 500 }\r\n  );\r\n}\r\n\r\n// الحصول على جميع المجمعات السكنية\r\nexport async function GET(request: Request) {\r\n  try {\r\n    const result = await query('SELECT * FROM residential_complexes', []);\r\n    return NextResponse.json(result.rows);\r\n  } catch (error) {\r\n    return handleError(error);\r\n  }\r\n}\r\n\r\n// إنشاء مجمع سكني جديد\r\nexport async function POST(request: Request) {\r\n  try {\r\n    const body = await request.json();\r\n    \r\n    // التحقق من وجود البيانات المطلوبة\r\n    if (!body.name || !body.location) {\r\n      return NextResponse.json(\r\n        { error: 'اسم المجمع والموقع مطلوبان' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n    \r\n    // إدخال المجمع الجديد في قاعدة البيانات\r\n    const queryText = `\r\n      INSERT INTO residential_complexes (name, location, description)\r\n      VALUES ($1, $2, $3)\r\n      RETURNING *\r\n    `;\r\n    \r\n    const result = await query(queryText, [\r\n      body.name,\r\n      body.location,\r\n      body.description || ''\r\n    ]);\r\n    \r\n    return NextResponse.json(result.rows[0], { status: 201 });\r\n  } catch (error) {\r\n    return handleError(error);\r\n  }\r\n}\r\n\r\n// تحديث مجمع سكني\r\nexport async function PUT(request: Request) {\r\n  try {\r\n    const body = await request.json();\r\n    \r\n    if (!body.id) {\r\n      return NextResponse.json(\r\n        { error: 'معرف المجمع مطلوب للتحديث' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n    \r\n    const fields: string[] = [];\r\n    const values: any[] = [];\r\n    let paramIndex = 1;\r\n    \r\n    if (body.name !== undefined) {\r\n      fields.push(`name = $${paramIndex}`);\r\n      values.push(body.name);\r\n      paramIndex++;\r\n    }\r\n    \r\n    if (body.location !== undefined) {\r\n      fields.push(`location = $${paramIndex}`);\r\n      values.push(body.location);\r\n      paramIndex++;\r\n    }\r\n    \r\n    if (body.description !== undefined) {\r\n      fields.push(`description = $${paramIndex}`);\r\n      values.push(body.description);\r\n      paramIndex++;\r\n    }\r\n    \r\n    if (fields.length === 0) {\r\n      return NextResponse.json(\r\n        { error: 'لم يتم تقديم أي حقول للتحديث' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n    \r\n    values.push(body.id);\r\n    \r\n    const queryText = `\r\n      UPDATE residential_complexes\r\n      SET ${fields.join(', ')}\r\n      WHERE id = $${paramIndex}\r\n      RETURNING *\r\n    `;\r\n    \r\n    const result = await query(queryText, values);\r\n    \r\n    if (result.rows.length === 0) {\r\n      return NextResponse.json(\r\n        { error: `لم يتم العثور على مجمع سكني بالمعرف ${body.id}` },\r\n        { status: 404 }\r\n      );\r\n    }\r\n    \r\n    return NextResponse.json(result.rows[0]);\r\n  } catch (error) {\r\n    return handleError(error);\r\n  }\r\n}\r\n\r\n// اختبار الاتصال بقاعدة البيانات\r\nexport async function OPTIONS() {\r\n  try {\r\n    const result = await testConnection();\r\n    \r\n    return NextResponse.json({ \r\n      success: result, \r\n      message: result ? 'اتصال ناجح بقاعدة البيانات' : 'فشل الاتصال بقاعدة البيانات' \r\n    });\r\n  } catch (error) {\r\n    return handleError(error);\r\n  }\r\n}\r\n\r\n// حذف مجمع سكني\r\nexport async function DELETE(request: Request) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const id = searchParams.get('id');\r\n    \r\n    if (!id) {\r\n      return NextResponse.json(\r\n        { error: 'معرف المجمع مطلوب للحذف' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n    \r\n    await query('DELETE FROM residential_complexes WHERE id = $1', [id]);\r\n    \r\n    return NextResponse.json({ success: true });\r\n  } catch (error) {\r\n    return handleError(error);\r\n  }\r\n}"],"names":[],"mappings":";;;;;;;AAAA;AACA;;;;;;;AAQA,gDAAgD;AAChD,SAAS,YAAY,KAAU;IAC7B,QAAQ,KAAK,CAAC,6BAA6B;IAE3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;QAAE,OAAO,MAAM,OAAO,IAAI;IAAoB,GAC9C;QAAE,QAAQ;IAAI;AAElB;AAGO,eAAe,IAAI,OAAgB;IACxC,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,sHAAA,CAAA,QAAK,AAAD,EAAE,uCAAuC,EAAE;QACpE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,OAAO,IAAI;IACtC,EAAE,OAAO,OAAO;QACd,OAAO,YAAY;IACrB;AACF;AAGO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAE/B,mCAAmC;QACnC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,QAAQ,EAAE;YAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA6B,GACtC;gBAAE,QAAQ;YAAI;QAElB;QAEA,wCAAwC;QACxC,MAAM,YAAY,CAAC;;;;IAInB,CAAC;QAED,MAAM,SAAS,MAAM,CAAA,GAAA,sHAAA,CAAA,QAAK,AAAD,EAAE,WAAW;YACpC,KAAK,IAAI;YACT,KAAK,QAAQ;YACb,KAAK,WAAW,IAAI;SACrB;QAED,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,EAAE,EAAE;YAAE,QAAQ;QAAI;IACzD,EAAE,OAAO,OAAO;QACd,OAAO,YAAY;IACrB;AACF;AAGO,eAAe,IAAI,OAAgB;IACxC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAE/B,IAAI,CAAC,KAAK,EAAE,EAAE;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA4B,GACrC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,SAAmB,EAAE;QAC3B,MAAM,SAAgB,EAAE;QACxB,IAAI,aAAa;QAEjB,IAAI,KAAK,IAAI,KAAK,WAAW;YAC3B,OAAO,IAAI,CAAC,CAAC,QAAQ,EAAE,YAAY;YACnC,OAAO,IAAI,CAAC,KAAK,IAAI;YACrB;QACF;QAEA,IAAI,KAAK,QAAQ,KAAK,WAAW;YAC/B,OAAO,IAAI,CAAC,CAAC,YAAY,EAAE,YAAY;YACvC,OAAO,IAAI,CAAC,KAAK,QAAQ;YACzB;QACF;QAEA,IAAI,KAAK,WAAW,KAAK,WAAW;YAClC,OAAO,IAAI,CAAC,CAAC,eAAe,EAAE,YAAY;YAC1C,OAAO,IAAI,CAAC,KAAK,WAAW;YAC5B;QACF;QAEA,IAAI,OAAO,MAAM,KAAK,GAAG;YACvB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA+B,GACxC;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,IAAI,CAAC,KAAK,EAAE;QAEnB,MAAM,YAAY,CAAC;;UAEb,EAAE,OAAO,IAAI,CAAC,MAAM;kBACZ,EAAE,WAAW;;IAE3B,CAAC;QAED,MAAM,SAAS,MAAM,CAAA,GAAA,sHAAA,CAAA,QAAK,AAAD,EAAE,WAAW;QAEtC,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,GAAG;YAC5B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO,CAAC,oCAAoC,EAAE,KAAK,EAAE,EAAE;YAAC,GAC1D;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,EAAE;IACzC,EAAE,OAAO,OAAO;QACd,OAAO,YAAY;IACrB;AACF;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,sHAAA,CAAA,iBAAc,AAAD;QAElC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,SAAS,SAAS,+BAA+B;QACnD;IACF,EAAE,OAAO,OAAO;QACd,OAAO,YAAY;IACrB;AACF;AAGO,eAAe,OAAO,OAAgB;IAC3C,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,KAAK,aAAa,GAAG,CAAC;QAE5B,IAAI,CAAC,IAAI;YACP,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA0B,GACnC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,CAAA,GAAA,sHAAA,CAAA,QAAK,AAAD,EAAE,mDAAmD;YAAC;SAAG;QAEnE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;IAC3C,EAAE,OAAO,OAAO;QACd,OAAO,YAAY;IACrB;AACF","debugId":null}}]
}