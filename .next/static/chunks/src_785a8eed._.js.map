{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\n// Initialize the Supabase client with proper Supabase URL and key\r\nconst supabaseUrl = 'zzzzz';\r\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im10aWN2bXlmcmRtY2lhZWlwZnh1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDEwODc1OTMsImV4cCI6MjA1NjY2MzU5M30.6iudxBl6js0heW1mhoSmcXegTIN_lAN2GiFeA3plSIo';\r\n\r\n// Create the Supabase client\r\nexport const supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\n// Store PostgreSQL direct connection URL for database initialization scripts\r\nexport const postgresUrl = 'postgresql://HousingMaintenance_owner:npg_fC8S4bpZLsJw@ep-weathered-meadow-a44a1v3i-pooler.us-east-1.aws.neon.tech/HousingMaintenance?sslmode=require';"],"names":[],"mappings":";;;;AAAA;;AAEA,kEAAkE;AAClE,MAAM,cAAc;AACpB,MAAM,cAAc;AAGb,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AAG3C,MAAM,cAAc","debugId":null}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/services/maintenanceService.ts"],"sourcesContent":["import { supabase } from '../supabase';\r\nimport { MaintenanceRequest, MaintenanceItem } from '@/models/types';\r\n\r\n// Maintenance Request Operations\r\nexport const getMaintenanceRequests = async (\r\n  complexId?: string, \r\n  buildingId?: string, \r\n  status?: MaintenanceRequest['status']\r\n): Promise<MaintenanceRequest[]> => {\r\n  try {\r\n    let query = supabase.from('maintenance_requests').select('*');\r\n    \r\n    if (complexId) {\r\n      query = query.eq('complex_id', complexId);\r\n    }\r\n    \r\n    if (buildingId) {\r\n      query = query.eq('building_id', buildingId);\r\n    }\r\n    \r\n    if (status) {\r\n      query = query.eq('status', status);\r\n    }\r\n    \r\n    const { data, error } = await query.order('reported_date', { ascending: false });\r\n    \r\n    if (error) {\r\n      console.error('Supabase error in getMaintenanceRequests:', error);\r\n      \r\n      if (error.message.includes('does not exist')) {\r\n        console.warn('The maintenance_requests table might not exist yet. Make sure to run database initialization scripts.');\r\n      }\r\n      \r\n      throw new Error(`Database error: ${error.message}`);\r\n    }\r\n    \r\n    return data || [];\r\n  } catch (err) {\r\n    console.error('Error in getMaintenanceRequests:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getMaintenanceRequestById = async (id: string): Promise<MaintenanceRequest | null> => {\r\n  const { data, error } = await supabase\r\n    .from('maintenance_requests')\r\n    .select('*')\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const createMaintenanceRequest = async (\r\n  request: Omit<MaintenanceRequest, 'id' | 'reported_date'>\r\n): Promise<MaintenanceRequest> => {\r\n  const newRequest = {\r\n    ...request,\r\n    reported_date: new Date().toISOString(),\r\n    status: request.status || 'pending'\r\n  };\r\n\r\n  const { data, error } = await supabase\r\n    .from('maintenance_requests')\r\n    .insert([newRequest])\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updateMaintenanceRequest = async (\r\n  id: string, \r\n  updates: Partial<MaintenanceRequest>\r\n): Promise<MaintenanceRequest> => {\r\n  const { data, error } = await supabase\r\n    .from('maintenance_requests')\r\n    .update(updates)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const deleteMaintenanceRequest = async (id: string): Promise<void> => {\r\n  const { error } = await supabase\r\n    .from('maintenance_requests')\r\n    .delete()\r\n    .eq('id', id);\r\n  \r\n  if (error) throw error;\r\n};\r\n\r\n// Maintenance Items Operations\r\nexport const getMaintenanceItems = async (\r\n  maintenanceId: string\r\n): Promise<MaintenanceItem[]> => {\r\n  const { data, error } = await supabase\r\n    .from('maintenance_items')\r\n    .select('*')\r\n    .eq('maintenance_id', maintenanceId);\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};\r\n\r\nexport const getMaintenanceItemById = async (id: string): Promise<MaintenanceItem | null> => {\r\n  const { data, error } = await supabase\r\n    .from('maintenance_items')\r\n    .select('*')\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const createMaintenanceItem = async (\r\n  item: Omit<MaintenanceItem, 'id'>\r\n): Promise<MaintenanceItem> => {\r\n  const { data, error } = await supabase\r\n    .from('maintenance_items')\r\n    .insert([item])\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updateMaintenanceItem = async (\r\n  id: string, \r\n  updates: Partial<MaintenanceItem>\r\n): Promise<MaintenanceItem> => {\r\n  const { data, error } = await supabase\r\n    .from('maintenance_items')\r\n    .update(updates)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const deleteMaintenanceItem = async (id: string): Promise<void> => {\r\n  const { error } = await supabase\r\n    .from('maintenance_items')\r\n    .delete()\r\n    .eq('id', id);\r\n  \r\n  if (error) throw error;\r\n};\r\n\r\n// Get maintenance requests for monthly summary\r\nexport const getMonthlyMaintenanceRequests = async (\r\n  year: number,\r\n  month: number\r\n): Promise<MaintenanceRequest[]> => {\r\n  // Create start and end date for the specified month\r\n  const startDate = new Date(year, month - 1, 1).toISOString();\r\n  const endDate = new Date(year, month, 0).toISOString();\r\n  \r\n  const { data, error } = await supabase\r\n    .from('maintenance_requests')\r\n    .select('*')\r\n    .gte('reported_date', startDate)\r\n    .lte('reported_date', endDate);\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/services/inventoryService.ts"],"sourcesContent":["import { supabase } from '../supabase';\r\nimport { Category, Item, Inventory } from '@/models/types';\r\n\r\n// Category Operations\r\nexport const getCategories = async (): Promise<Category[]> => {\r\n  const { data, error } = await supabase\r\n    .from('categories')\r\n    .select('*');\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};\r\n\r\nexport const getCategoryById = async (id: string): Promise<Category | null> => {\r\n  const { data, error } = await supabase\r\n    .from('categories')\r\n    .select('*')\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const createCategory = async (category: Omit<Category, 'id'>): Promise<Category> => {\r\n  const { data, error } = await supabase\r\n    .from('categories')\r\n    .insert([category])\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updateCategory = async (id: string, updates: Partial<Category>): Promise<Category> => {\r\n  const { data, error } = await supabase\r\n    .from('categories')\r\n    .update(updates)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const deleteCategory = async (id: string): Promise<void> => {\r\n  const { error } = await supabase\r\n    .from('categories')\r\n    .delete()\r\n    .eq('id', id);\r\n  \r\n  if (error) throw error;\r\n};\r\n\r\n// Item Operations\r\nexport const getItems = async (categoryId?: string): Promise<Item[]> => {\r\n  let query = supabase.from('items').select('*');\r\n  \r\n  if (categoryId) {\r\n    query = query.eq('category_id', categoryId);\r\n  }\r\n  \r\n  const { data, error } = await query;\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};\r\n\r\nexport const getItemById = async (id: string): Promise<Item | null> => {\r\n  const { data, error } = await supabase\r\n    .from('items')\r\n    .select('*')\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const createItem = async (item: Omit<Item, 'id'>): Promise<Item> => {\r\n  const { data, error } = await supabase\r\n    .from('items')\r\n    .insert([item])\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updateItem = async (id: string, updates: Partial<Item>): Promise<Item> => {\r\n  const { data, error } = await supabase\r\n    .from('items')\r\n    .update(updates)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const deleteItem = async (id: string): Promise<void> => {\r\n  const { error } = await supabase\r\n    .from('items')\r\n    .delete()\r\n    .eq('id', id);\r\n  \r\n  if (error) throw error;\r\n};\r\n\r\n// Inventory Operations\r\nexport const getInventory = async (itemId?: string): Promise<Inventory[]> => {\r\n  let query = supabase\r\n    .from('inventory')\r\n    .select(`\r\n      *,\r\n      items:item_id (\r\n        id,\r\n        name,\r\n        category_id,\r\n        unit\r\n      )\r\n    `);\r\n  \r\n  if (itemId) {\r\n    query = query.eq('item_id', itemId);\r\n  }\r\n  \r\n  const { data, error } = await query;\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};\r\n\r\nexport const getInventoryItemById = async (id: string): Promise<Inventory | null> => {\r\n  const { data, error } = await supabase\r\n    .from('inventory')\r\n    .select(`\r\n      *,\r\n      items:item_id (\r\n        id,\r\n        name,\r\n        category_id,\r\n        unit\r\n      )\r\n    `)\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updateInventoryQuantity = async (\r\n  itemId: string, \r\n  quantityChange: number\r\n): Promise<Inventory> => {\r\n  // First, get the current inventory item\r\n  const { data: currentInventory, error: fetchError } = await supabase\r\n    .from('inventory')\r\n    .select('*')\r\n    .eq('item_id', itemId)\r\n    .single();\r\n  \r\n  if (fetchError && fetchError.code !== 'PGRST116') {\r\n    // PGRST116 is the error code for \"no rows returned\"\r\n    throw fetchError;\r\n  }\r\n  \r\n  // If inventory item exists, update it\r\n  if (currentInventory) {\r\n    const newQuantity = currentInventory.quantity + quantityChange;\r\n    \r\n    if (newQuantity < 0) {\r\n      throw new Error('Insufficient inventory quantity');\r\n    }\r\n    \r\n    const { data, error } = await supabase\r\n      .from('inventory')\r\n      .update({\r\n        quantity: newQuantity,\r\n        last_updated: new Date().toISOString()\r\n      })\r\n      .eq('id', currentInventory.id)\r\n      .select()\r\n      .single();\r\n    \r\n    if (error) throw error;\r\n    return data;\r\n  } \r\n  // If inventory item does not exist, create it (only if adding quantity)\r\n  else if (quantityChange > 0) {\r\n    const { data, error } = await supabase\r\n      .from('inventory')\r\n      .insert([{\r\n        item_id: itemId,\r\n        quantity: quantityChange,\r\n        last_updated: new Date().toISOString()\r\n      }])\r\n      .select()\r\n      .single();\r\n    \r\n    if (error) throw error;\r\n    return data;\r\n  } else {\r\n    throw new Error('Cannot reduce quantity of non-existent inventory item');\r\n  }\r\n};\r\n\r\nexport const updateInventoryItem = async (\r\n  id: string, \r\n  updates: Partial<Inventory>\r\n): Promise<Inventory> => {\r\n  const updateData = {\r\n    ...updates,\r\n    last_updated: new Date().toISOString()\r\n  };\r\n  \r\n  const { data, error } = await supabase\r\n    .from('inventory')\r\n    .update(updateData)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const getLowStockItems = async (threshold: number = 10): Promise<Inventory[]> => {\r\n  const { data, error } = await supabase\r\n    .from('inventory')\r\n    .select(`\r\n      *,\r\n      items:item_id (\r\n        id,\r\n        name,\r\n        category_id,\r\n        unit\r\n      )\r\n    `)\r\n    .lte('quantity', threshold);\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/services/purchaseService.ts"],"sourcesContent":["import { supabase } from '../supabase';\r\nimport { PurchaseOrder, PurchaseItem } from '@/models/types';\r\n\r\n// Purchase Order Operations\r\nexport const getPurchaseOrders = async (\r\n  status?: PurchaseOrder['status']\r\n): Promise<PurchaseOrder[]> => {\r\n  try {\r\n    let query = supabase.from('purchase_orders').select('*');\r\n    \r\n    if (status) {\r\n      query = query.eq('status', status);\r\n    }\r\n    \r\n    const { data, error } = await query.order('order_date', { ascending: false });\r\n    \r\n    if (error) {\r\n      console.error('Supabase error in getPurchaseOrders:', error);\r\n      \r\n      if (error.message.includes('does not exist')) {\r\n        console.warn('The purchase_orders table might not exist yet. Make sure to run database initialization scripts.');\r\n      }\r\n      \r\n      throw new Error(`Database error: ${error.message}`);\r\n    }\r\n    \r\n    return data || [];\r\n  } catch (err) {\r\n    console.error('Error in getPurchaseOrders:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getPurchaseOrderById = async (id: string): Promise<PurchaseOrder | null> => {\r\n  const { data, error } = await supabase\r\n    .from('purchase_orders')\r\n    .select('*')\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const createPurchaseOrder = async (\r\n  order: Omit<PurchaseOrder, 'id' | 'order_date'>\r\n): Promise<PurchaseOrder> => {\r\n  const newOrder = {\r\n    ...order,\r\n    order_date: new Date().toISOString(),\r\n    status: order.status || 'draft'\r\n  };\r\n\r\n  const { data, error } = await supabase\r\n    .from('purchase_orders')\r\n    .insert([newOrder])\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updatePurchaseOrder = async (\r\n  id: string, \r\n  updates: Partial<PurchaseOrder>\r\n): Promise<PurchaseOrder> => {\r\n  const { data, error } = await supabase\r\n    .from('purchase_orders')\r\n    .update(updates)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const deletePurchaseOrder = async (id: string): Promise<void> => {\r\n  const { error } = await supabase\r\n    .from('purchase_orders')\r\n    .delete()\r\n    .eq('id', id);\r\n  \r\n  if (error) throw error;\r\n};\r\n\r\n// Purchase Items Operations\r\nexport const getPurchaseItems = async (\r\n  purchaseOrderId: string\r\n): Promise<PurchaseItem[]> => {\r\n  const { data, error } = await supabase\r\n    .from('purchase_items')\r\n    .select(`\r\n      *,\r\n      items:item_id (\r\n        id,\r\n        name,\r\n        category_id,\r\n        unit\r\n      )\r\n    `)\r\n    .eq('purchase_order_id', purchaseOrderId);\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};\r\n\r\nexport const getPurchaseItemById = async (id: string): Promise<PurchaseItem | null> => {\r\n  const { data, error } = await supabase\r\n    .from('purchase_items')\r\n    .select(`\r\n      *,\r\n      items:item_id (\r\n        id,\r\n        name,\r\n        category_id,\r\n        unit\r\n      )\r\n    `)\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const createPurchaseItem = async (\r\n  item: Omit<PurchaseItem, 'id'>\r\n): Promise<PurchaseItem> => {\r\n  const { data, error } = await supabase\r\n    .from('purchase_items')\r\n    .insert([item])\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updatePurchaseItem = async (\r\n  id: string, \r\n  updates: Partial<PurchaseItem>\r\n): Promise<PurchaseItem> => {\r\n  const { data, error } = await supabase\r\n    .from('purchase_items')\r\n    .update(updates)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const deletePurchaseItem = async (id: string): Promise<void> => {\r\n  const { error } = await supabase\r\n    .from('purchase_items')\r\n    .delete()\r\n    .eq('id', id);\r\n  \r\n  if (error) throw error;\r\n};\r\n\r\n// Generate Monthly Purchase Orders\r\nexport const generateMonthlyPurchaseOrder = async (\r\n  year: number,\r\n  month: number,\r\n  createdBy: string\r\n): Promise<PurchaseOrder> => {\r\n  try {\r\n    // 1. Get all maintenance requests for the month\r\n    const startDate = new Date(year, month - 1, 1).toISOString();\r\n    const endDate = new Date(year, month, 0).toISOString();\r\n    \r\n    // Get all maintenance requests for the specified month first\r\n    const { data: maintenanceRequests, error: requestsError } = await supabase\r\n      .from('maintenance_requests')\r\n      .select('id')\r\n      .gte('reported_date', startDate)\r\n      .lte('reported_date', endDate);\r\n    \r\n    if (requestsError) {\r\n      // If the table doesn't exist, create a purchase order without items\r\n      if (requestsError.message.includes('does not exist')) {\r\n        console.warn('Maintenance requests table does not exist yet. Creating empty purchase order.');\r\n        return createEmptyPurchaseOrder(year, month, createdBy);\r\n      }\r\n      throw requestsError;\r\n    }\r\n    \r\n    if (!maintenanceRequests || maintenanceRequests.length === 0) {\r\n      console.log('No maintenance requests found for the specified month. Creating empty purchase order.');\r\n      return createEmptyPurchaseOrder(year, month, createdBy);\r\n    }\r\n    \r\n    // Get maintenance items for these requests\r\n    const maintenanceIds = maintenanceRequests.map(req => req.id);\r\n    const { data: maintenanceItems, error: itemsError } = await supabase\r\n      .from('maintenance_items')\r\n      .select('*')\r\n      .in('maintenance_id', maintenanceIds);\r\n    \r\n    if (itemsError) {\r\n      // If the table doesn't exist, create a purchase order without items\r\n      if (itemsError.message.includes('does not exist')) {\r\n        console.warn('Maintenance items table does not exist yet. Creating empty purchase order.');\r\n        return createEmptyPurchaseOrder(year, month, createdBy);\r\n      }\r\n      throw itemsError;\r\n    }\r\n    \r\n    if (!maintenanceItems || maintenanceItems.length === 0) {\r\n      console.log('No maintenance items found for the specified month. Creating empty purchase order.');\r\n      return createEmptyPurchaseOrder(year, month, createdBy);\r\n    }\r\n    \r\n    // 2. Group items by item_id and sum quantities\r\n    const itemQuantities: Record<string, number> = {};\r\n    \r\n    maintenanceItems.forEach(item => {\r\n      if (!itemQuantities[item.item_id]) {\r\n        itemQuantities[item.item_id] = 0;\r\n      }\r\n      itemQuantities[item.item_id] += item.quantity_needed;\r\n    });\r\n    \r\n    // 3. Create a new purchase order\r\n    const { data: purchaseOrder, error: orderError } = await supabase\r\n      .from('purchase_orders')\r\n      .insert([{\r\n        order_date: new Date().toISOString(),\r\n        status: 'draft',\r\n        created_by: createdBy,\r\n        notes: `Auto-generated order for ${year}-${month.toString().padStart(2, '0')}`\r\n      }])\r\n      .select()\r\n      .single();\r\n    \r\n    if (orderError) throw orderError;\r\n    \r\n    // 4. Create purchase items for each item type\r\n    if (Object.keys(itemQuantities).length > 0) {\r\n      const purchaseItems = Object.entries(itemQuantities).map(([itemId, quantity]) => ({\r\n        purchase_order_id: purchaseOrder.id,\r\n        item_id: itemId,\r\n        quantity: quantity\r\n      }));\r\n      \r\n      const { error: purchaseItemsError } = await supabase\r\n        .from('purchase_items')\r\n        .insert(purchaseItems);\r\n      \r\n      if (purchaseItemsError) throw purchaseItemsError;\r\n    }\r\n    \r\n    return purchaseOrder;\r\n  } catch (error: any) {\r\n    console.error('Error generating monthly purchase order:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Helper function to create an empty purchase order when no maintenance items are found\r\nconst createEmptyPurchaseOrder = async (\r\n  year: number,\r\n  month: number,\r\n  createdBy: string\r\n): Promise<PurchaseOrder> => {\r\n  const { data: purchaseOrder, error: orderError } = await supabase\r\n    .from('purchase_orders')\r\n    .insert([{\r\n      order_date: new Date().toISOString(),\r\n      status: 'draft',\r\n      created_by: createdBy,\r\n      notes: `Auto-generated order for ${year}-${month.toString().padStart(2, '0')} (No maintenance items found)`\r\n    }])\r\n    .select()\r\n    .single();\r\n  \r\n  if (orderError) throw orderError;\r\n  return purchaseOrder;\r\n};\r\n\r\n// Process Received Items\r\nexport const processReceivedItems = async (\r\n  purchaseOrderId: string, \r\n  receivedItems: Array<{ id: string, received_quantity: number }>\r\n): Promise<void> => {\r\n  // Start a transaction to update both purchase items and inventory\r\n  for (const item of receivedItems) {\r\n    // 1. Update the purchase item\r\n    const { data: purchaseItem, error: updateError } = await supabase\r\n      .from('purchase_items')\r\n      .update({ received_quantity: item.received_quantity })\r\n      .eq('id', item.id)\r\n      .select('*')\r\n      .single();\r\n    \r\n    if (updateError) throw updateError;\r\n    \r\n    // 2. Update inventory\r\n    // First, get the current inventory for this item\r\n    const { data: currentInventory, error: inventoryError } = await supabase\r\n      .from('inventory')\r\n      .select('*')\r\n      .eq('item_id', purchaseItem.item_id)\r\n      .single();\r\n    \r\n    if (inventoryError && inventoryError.code !== 'PGRST116') {\r\n      throw inventoryError;\r\n    }\r\n    \r\n    // If inventory entry exists, update it\r\n    if (currentInventory) {\r\n      const { error: updateInventoryError } = await supabase\r\n        .from('inventory')\r\n        .update({\r\n          quantity: currentInventory.quantity + item.received_quantity,\r\n          last_updated: new Date().toISOString()\r\n        })\r\n        .eq('id', currentInventory.id);\r\n      \r\n      if (updateInventoryError) throw updateInventoryError;\r\n    } \r\n    // If no inventory entry exists, create one\r\n    else {\r\n      const { error: createInventoryError } = await supabase\r\n        .from('inventory')\r\n        .insert([{\r\n          item_id: purchaseItem.item_id,\r\n          quantity: item.received_quantity,\r\n          unit_price: purchaseItem.unit_price,\r\n          last_updated: new Date().toISOString()\r\n        }]);\r\n      \r\n      if (createInventoryError) throw createInventoryError;\r\n    }\r\n  }\r\n  \r\n  // 3. Update the purchase order status to 'received'\r\n  const { error: orderUpdateError } = await supabase\r\n    .from('purchase_orders')\r\n    .update({ status: 'received' })\r\n    .eq('id', purchaseOrderId);\r\n  \r\n  if (orderUpdateError) throw orderUpdateError;\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/app/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { getMaintenanceRequests } from '@/lib/services/maintenanceService';\r\nimport { getLowStockItems } from '@/lib/services/inventoryService';\r\nimport { getPurchaseOrders } from '@/lib/services/purchaseService';\r\nimport { MaintenanceRequest, Inventory, PurchaseOrder, InventoryWithItem } from '@/models/types';\r\n\r\nexport default function Dashboard() {\r\n  const [pendingMaintenanceCount, setPendingMaintenanceCount] = useState(0);\r\n  const [inProgressMaintenanceCount, setInProgressMaintenanceCount] = useState(0);\r\n  const [lowStockItems, setLowStockItems] = useState<InventoryWithItem[]>([]);\r\n  const [recentOrders, setRecentOrders] = useState<PurchaseOrder[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchDashboardData = async () => {\r\n      try {\r\n        // Get maintenance requests by status\r\n        const pendingRequests = await getMaintenanceRequests(undefined, undefined, 'pending');\r\n        setPendingMaintenanceCount(pendingRequests.length);\r\n        \r\n        const inProgressRequests = await getMaintenanceRequests(undefined, undefined, 'in_progress');\r\n        setInProgressMaintenanceCount(inProgressRequests.length);\r\n\r\n        // Get low stock items (threshold of 5)\r\n        const lowStockData = await getLowStockItems(5);\r\n        setLowStockItems(lowStockData as InventoryWithItem[]);\r\n\r\n        // Get recent purchase orders (limit to 5)\r\n        const recentPurchaseOrders = await getPurchaseOrders();\r\n        setRecentOrders(recentPurchaseOrders.slice(0, 5));\r\n        \r\n        // Clear any previous errors on success\r\n        setError(null);\r\n      } catch (err: any) {\r\n        console.error('Error fetching dashboard data:', err);\r\n        setError(`فشل في تحميل بيانات لوحة التحكم: ${err.message || 'خطأ غير معروف'}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDashboardData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* Header section with greeting and summary */}\r\n      <div className=\"mb-8\">\r\n        <h1 className=\"text-3xl font-bold mb-2\">مرحباً بك في نظام إدارة المجمعات السكنية</h1>\r\n        <p className=\"text-gray-600 dark:text-gray-400\">نظرة عامة على حالة النظام والأنشطة الأخيرة</p>\r\n      </div>\r\n      \r\n      {/* Display error message if any */}\r\n      {error && (\r\n        <div className=\"mb-6 p-4 border-r-4 border-danger-600 bg-danger-50 dark:bg-danger-900/30 dark:border-danger-500 rounded-lg\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"flex-shrink-0\">\r\n              <svg className=\"h-5 w-5 text-danger-600 dark:text-danger-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n            </div>\r\n            <div className=\"mr-3\">\r\n              <p className=\"text-sm text-danger-600 dark:text-danger-500\">{error}</p>\r\n            </div>\r\n            <button \r\n              className=\"mr-auto p-1.5 rounded-md text-danger-600 dark:text-danger-500 hover:bg-danger-100 dark:hover:bg-danger-800\" \r\n              onClick={() => setError(null)}\r\n              aria-label=\"إغلاق\"\r\n            >\r\n              <svg className=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Display loading spinner when fetching data */}\r\n      {loading ? (\r\n        <div className=\"card flex items-center justify-center py-16\">\r\n          <div className=\"flex flex-col items-center\">\r\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600\"></div>\r\n            <p className=\"mt-4 text-gray-600 dark:text-gray-400\">جاري تحميل البيانات...</p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* Stats overview section */}\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\r\n            {/* Pending maintenance requests */}\r\n            <div className=\"stat-card card-hover\">\r\n              <div className=\"flex justify-between\">\r\n                <div>\r\n                  <p className=\"stat-label\">طلبات صيانة معلقة</p>\r\n                  <p className=\"stat-value text-primary-600 dark:text-primary-400\">{pendingMaintenanceCount}</p>\r\n                </div>\r\n                <div className=\"p-3 rounded-full bg-primary-100 dark:bg-primary-900/50 text-primary-600 dark:text-primary-400\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-4\">\r\n                <Link href=\"/maintenance?status=pending\" className=\"text-sm text-primary-600 dark:text-primary-400 hover:underline font-medium inline-flex items-center\">\r\n                  عرض الطلبات \r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1 rtl:rotate-180\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                  </svg>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n\r\n            {/* In progress maintenance */}\r\n            <div className=\"stat-card card-hover\">\r\n              <div className=\"flex justify-between\">\r\n                <div>\r\n                  <p className=\"stat-label\">صيانة قيد التنفيذ</p>\r\n                  <p className=\"stat-value text-secondary-600 dark:text-secondary-400\">{inProgressMaintenanceCount}</p>\r\n                </div>\r\n                <div className=\"p-3 rounded-full bg-secondary-100 dark:bg-secondary-900/50 text-secondary-600 dark:text-secondary-400\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-4\">\r\n                <Link href=\"/maintenance?status=in_progress\" className=\"text-sm text-secondary-600 dark:text-secondary-400 hover:underline font-medium inline-flex items-center\">\r\n                  المزيد من التفاصيل\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1 rtl:rotate-180\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                  </svg>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Low stock items */}\r\n            <div className=\"stat-card card-hover\">\r\n              <div className=\"flex justify-between\">\r\n                <div>\r\n                  <p className=\"stat-label\">أصناف منخفضة المخزون</p>\r\n                  <p className=\"stat-value text-warning-600 dark:text-warning-400\">{lowStockItems.length}</p>\r\n                </div>\r\n                <div className=\"p-3 rounded-full bg-warning-100 dark:bg-warning-900/50 text-warning-600 dark:text-warning-400\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-4\">\r\n                <Link href=\"/inventory\" className=\"text-sm text-warning-600 dark:text-warning-400 hover:underline font-medium inline-flex items-center\">\r\n                  إدارة المخزون\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1 rtl:rotate-180\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                  </svg>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Purchase orders */}\r\n            <div className=\"stat-card card-hover\">\r\n              <div className=\"flex justify-between\">\r\n                <div>\r\n                  <p className=\"stat-label\">طلبات الشراء الجديدة</p>\r\n                  <p className=\"stat-value text-accent-600 dark:text-accent-400\">{recentOrders.length}</p>\r\n                </div>\r\n                <div className=\"p-3 rounded-full bg-accent-100 dark:bg-accent-900/50 text-accent-600 dark:text-accent-400\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-4\">\r\n                <Link href=\"/purchase-orders\" className=\"text-sm text-accent-600 dark:text-accent-400 hover:underline font-medium inline-flex items-center\">\r\n                  عرض طلبات الشراء\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1 rtl:rotate-180\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                  </svg>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Quick Actions Section */}\r\n          <div className=\"card mb-8\">\r\n            <h2 className=\"text-xl font-bold mb-6\">إجراءات سريعة</h2>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-6 gap-4\">\r\n              <Link \r\n                href=\"/maintenance/new\" \r\n                className=\"flex flex-col items-center justify-center p-6 text-center bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-xl hover:bg-primary-50 dark:hover:bg-gray-700/60 transition-colors group\"\r\n              >\r\n                <div className=\"p-3 rounded-full bg-primary-100 dark:bg-primary-900/30 text-primary-600 dark:text-primary-400 group-hover:bg-primary-200 dark:group-hover:bg-primary-800/50 mb-3\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n                  </svg>\r\n                </div>\r\n                <span className=\"text-sm font-medium\">طلب صيانة جديد</span>\r\n              </Link>\r\n\r\n              <Link \r\n                href=\"/purchase-orders/new\" \r\n                className=\"flex flex-col items-center justify-center p-6 text-center bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-xl hover:bg-secondary-50 dark:hover:bg-gray-700/60 transition-colors group\"\r\n              >\r\n                <div className=\"p-3 rounded-full bg-secondary-100 dark:bg-secondary-900/30 text-secondary-600 dark:text-secondary-400 group-hover:bg-secondary-200 dark:group-hover:bg-secondary-800/50 mb-3\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n                  </svg>\r\n                </div>\r\n                <span className=\"text-sm font-medium\">طلب شراء جديد</span>\r\n              </Link>\r\n\r\n              <Link \r\n                href=\"/inventory/file-processor\" \r\n                className=\"flex flex-col items-center justify-center p-6 text-center bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-xl hover:bg-green-50 dark:hover:bg-gray-700/60 transition-colors group\"\r\n              >\r\n                <div className=\"p-3 rounded-full bg-green-100 dark:bg-green-900/30 text-green-600 dark:text-green-400 group-hover:bg-green-200 dark:group-hover:bg-green-800/50 mb-3\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\r\n                  </svg>\r\n                </div>\r\n                <span className=\"text-sm font-medium\">رفع بيانات المخزون</span>\r\n              </Link>\r\n\r\n              <Link \r\n                href=\"/housing/management\" \r\n                className=\"flex flex-col items-center justify-center p-6 text-center bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-xl hover:bg-purple-50 dark:hover:bg-gray-700/60 transition-colors group\"\r\n              >\r\n                <div className=\"p-3 rounded-full bg-purple-100 dark:bg-purple-900/30 text-purple-600 dark:text-purple-400 group-hover:bg-purple-200 dark:group-hover:bg-purple-800/50 mb-3\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\r\n                  </svg>\r\n                </div>\r\n                <span className=\"text-sm font-medium\">إدارة المجمعات</span>\r\n              </Link>\r\n\r\n              <Link \r\n                href=\"/reports\" \r\n                className=\"flex flex-col items-center justify-center p-6 text-center bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-xl hover:bg-blue-50 dark:hover:bg-gray-700/60 transition-colors group\"\r\n              >\r\n                <div className=\"p-3 rounded-full bg-blue-100 dark:bg-blue-900/30 text-blue-600 dark:text-blue-400 group-hover:bg-blue-200 dark:group-hover:bg-blue-800/50 mb-3\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                  </svg>\r\n                </div>\r\n                <span className=\"text-sm font-medium\">التقارير</span>\r\n              </Link>\r\n\r\n              <Link \r\n                href=\"/purchase-orders/monthly\" \r\n                className=\"flex flex-col items-center justify-center p-6 text-center bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-xl hover:bg-yellow-50 dark:hover:bg-gray-700/60 transition-colors group\"\r\n              >\r\n                <div className=\"p-3 rounded-full bg-yellow-100 dark:bg-yellow-900/30 text-yellow-600 dark:text-yellow-400 group-hover:bg-yellow-200 dark:group-hover:bg-yellow-800/50 mb-3\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n                  </svg>\r\n                </div>\r\n                <span className=\"text-sm font-medium\">طلبات شهرية</span>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Data Overview Section */}\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n            {/* Maintenance Requests Table */}\r\n            <div className=\"card\">\r\n              <div className=\"flex justify-between items-center mb-6\">\r\n                <h2 className=\"text-xl font-bold\">أحدث طلبات الصيانة</h2>\r\n                <Link href=\"/maintenance\" className=\"text-primary-600 dark:text-primary-400 text-sm font-medium hover:underline\">\r\n                  عرض الكل\r\n                </Link>\r\n              </div>\r\n\r\n              {pendingMaintenanceCount === 0 && inProgressMaintenanceCount === 0 ? (\r\n                <div className=\"py-8 text-center\">\r\n                  <div className=\"inline-flex items-center justify-center rounded-full bg-primary-100 dark:bg-primary-900/30 p-3 mb-4\">\r\n                    <svg className=\"h-8 w-8 text-primary-600 dark:text-primary-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                    </svg>\r\n                  </div>\r\n                  <h3 className=\"text-lg font-medium mb-1\">جميع طلبات الصيانة مكتملة</h3>\r\n                  <p className=\"text-gray-600 dark:text-gray-400 mb-4\">لا توجد طلبات صيانة معلقة أو قيد التنفيذ حالياً</p>\r\n                  <Link href=\"/maintenance/new\" className=\"btn btn-sm btn-primary\">\r\n                    إنشاء طلب جديد\r\n                  </Link>\r\n                </div>\r\n              ) : (\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>رقم الطلب</th>\r\n                        <th>الموقع</th>\r\n                        <th>الحالة</th>\r\n                        <th>الأولوية</th>\r\n                        <th>التاريخ</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {/* This should be populated with real data from API */}\r\n                      <tr>\r\n                        <td className=\"font-medium\">#a93b50</td>\r\n                        <td>المجمع الشرقي - مبنى 3</td>\r\n                        <td>\r\n                          <span className=\"badge badge-warning\">قيد الانتظار</span>\r\n                        </td>\r\n                        <td>\r\n                          <span className=\"badge badge-danger\">عالية</span>\r\n                        </td>\r\n                        <td dir=\"ltr\">2025-04-25</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"font-medium\">#c25e71</td>\r\n                        <td>المجمع الغربي - مبنى 1</td>\r\n                        <td>\r\n                          <span className=\"badge badge-primary\">قيد التنفيذ</span>\r\n                        </td>\r\n                        <td>\r\n                          <span className=\"badge badge-warning\">متوسطة</span>\r\n                        </td>\r\n                        <td dir=\"ltr\">2025-04-24</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Low Stock Items */}\r\n            <div className=\"card\">\r\n              <div className=\"flex justify-between items-center mb-6\">\r\n                <h2 className=\"text-xl font-bold\">الأصناف منخفضة المخزون</h2>\r\n                <Link href=\"/inventory\" className=\"text-primary-600 dark:text-primary-400 text-sm font-medium hover:underline\">\r\n                  إدارة المخزون\r\n                </Link>\r\n              </div>\r\n\r\n              {lowStockItems.length === 0 ? (\r\n                <div className=\"py-8 text-center\">\r\n                  <div className=\"inline-flex items-center justify-center rounded-full bg-success-100 dark:bg-success-900/30 p-3 mb-4\">\r\n                    <svg className=\"h-8 w-8 text-success-600 dark:text-success-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                    </svg>\r\n                  </div>\r\n                  <h3 className=\"text-lg font-medium mb-1\">مستويات المخزون جيدة</h3>\r\n                  <p className=\"text-gray-600 dark:text-gray-400 mb-4\">جميع الأصناف متوفرة بكميات كافية</p>\r\n                  <Link href=\"/inventory\" className=\"btn btn-sm btn-success\">\r\n                    عرض المخزون\r\n                  </Link>\r\n                </div>\r\n              ) : (\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>الصنف</th>\r\n                        <th>الفئة</th>\r\n                        <th>الكمية المتاحة</th>\r\n                        <th>الإجراءات</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {lowStockItems.map((item) => (\r\n                        <tr key={item.id}>\r\n                          <td className=\"font-medium\">{item.name || 'صنف غير معرف'}</td>\r\n                          <td>{item.category || 'بدون فئة'}</td>\r\n                          <td>\r\n                            <div className=\"flex items-center\">\r\n                              <div className=\"w-16 bg-gray-200 dark:bg-gray-700 rounded-full h-2.5 mr-2\">\r\n                                <div \r\n                                  className=\"bg-danger-600 h-2.5 rounded-full\" \r\n                                  style={{ width: `${Math.min(Math.max((item.quantity || 0) * 20, 5), 100)}%` }}\r\n                                ></div>\r\n                              </div>\r\n                              <span>{item.quantity} {item.unit}</span>\r\n                            </div>\r\n                          </td>\r\n                          <td>\r\n                            <Link \r\n                              href={`/purchase-orders/new?item=${item.item_id}`}\r\n                              className=\"text-primary-600 dark:text-primary-400 hover:underline text-sm\"\r\n                            >\r\n                              طلب شراء\r\n                            </Link>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Helper components for status badges could be defined here or imported from a shared component file"],"names":[],"mappings":"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","debugId":null}}]
}