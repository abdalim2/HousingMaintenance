{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/neondb.ts"],"sourcesContent":["import { Pool } from 'pg';\r\n\r\n// استخدام عنوان الاتصال المباشر بقاعدة بيانات Neon\r\nconst connectionString = 'postgresql://HousingMaintenance_owner:npg_fC8S4bpZLsJw@ep-weathered-meadow-a44a1v3i-pooler.us-east-1.aws.neon.tech/HousingMaintenance?sslmode=require';\r\n\r\n// إنشاء تجمع اتصالات لقاعدة البيانات\r\nexport const pool = new Pool({\r\n  connectionString,\r\n  max: 20, // زيادة عدد الاتصالات المتزامنة\r\n  idleTimeoutMillis: 30000, // وقت انتظار أطول\r\n  connectionTimeoutMillis: 5000, // مهلة اتصال أقصر\r\n});\r\n\r\n// وظيفة مساعدة لتنفيذ استعلامات قاعدة البيانات مع إعادة المحاولة\r\nexport async function query(text: string, params?: any[], retries = 3) {\r\n  let lastError;\r\n  for (let attempt = 0; attempt < retries; attempt++) {\r\n    const client = await pool.connect().catch(err => {\r\n      console.error(`فشل الاتصال بقاعدة البيانات (محاولة ${attempt + 1}/${retries}):`, err.message);\r\n      return null;\r\n    });\r\n    \r\n    if (!client) {\r\n      lastError = new Error('تعذر إنشاء اتصال بقاعدة البيانات');\r\n      continue;\r\n    }\r\n    \r\n    try {\r\n      const result = await client.query(text, params);\r\n      return result;\r\n    } catch (error: any) {\r\n      lastError = error;\r\n      console.error(`فشل الاستعلام (محاولة ${attempt + 1}/${retries}):`, error.message);\r\n    } finally {\r\n      client.release();\r\n    }\r\n  }\r\n  \r\n  // إذا وصلنا إلى هنا، فقد فشلت جميع المحاولات\r\n  throw lastError || new Error('فشل الاستعلام بعد عدة محاولات');\r\n}\r\n\r\n// التحقق من اتصال قاعدة البيانات\r\nexport async function testConnection() {\r\n  try {\r\n    const result = await query('SELECT NOW()', [], 1);\r\n    console.log('اتصال ناجح بقاعدة بيانات Neon:', result.rows[0]);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('فشل الاتصال بقاعدة بيانات Neon:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// وظيفة مساعدة للحصول على بيانات آمنة\r\nexport async function safeQuery(text: string, params?: any[], defaultValue: any = []) {\r\n  try {\r\n    const result = await query(text, params);\r\n    return result.rows || defaultValue;\r\n  } catch (error) {\r\n    console.error('فشل الاستعلام، استخدام القيمة الافتراضية:', error);\r\n    return defaultValue;\r\n  }\r\n}"],"names":[],"mappings":";;;;;;AAAA;;AAEA,mDAAmD;AACnD,MAAM,mBAAmB;AAGlB,MAAM,OAAO,IAAI,sIAAA,CAAA,OAAI,CAAC;IAC3B;IACA,KAAK;IACL,mBAAmB;IACnB,yBAAyB;AAC3B;AAGO,eAAe,MAAM,IAAY,EAAE,MAAc,EAAE,UAAU,CAAC;IACnE,IAAI;IACJ,IAAK,IAAI,UAAU,GAAG,UAAU,SAAS,UAAW;QAClD,MAAM,SAAS,MAAM,KAAK,OAAO,GAAG,KAAK,CAAC,CAAA;YACxC,QAAQ,KAAK,CAAC,CAAC,oCAAoC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,OAAO;YAC5F,OAAO;QACT;QAEA,IAAI,CAAC,QAAQ;YACX,YAAY,IAAI,MAAM;YACtB;QACF;QAEA,IAAI;YACF,MAAM,SAAS,MAAM,OAAO,KAAK,CAAC,MAAM;YACxC,OAAO;QACT,EAAE,OAAO,OAAY;YACnB,YAAY;YACZ,QAAQ,KAAK,CAAC,CAAC,sBAAsB,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,OAAO;QAClF,SAAU;YACR,OAAO,OAAO;QAChB;IACF;IAEA,6CAA6C;IAC7C,MAAM,aAAa,IAAI,MAAM;AAC/B;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,SAAS,MAAM,MAAM,gBAAgB,EAAE,EAAE;QAC/C,QAAQ,GAAG,CAAC,kCAAkC,OAAO,IAAI,CAAC,EAAE;QAC5D,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mCAAmC;QACjD,OAAO;IACT;AACF;AAGO,eAAe,UAAU,IAAY,EAAE,MAAc,EAAE,eAAoB,EAAE;IAClF,IAAI;QACF,MAAM,SAAS,MAAM,MAAM,MAAM;QACjC,OAAO,OAAO,IAAI,IAAI;IACxB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6CAA6C;QAC3D,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/services/maintenanceService.ts"],"sourcesContent":["import { query, safeQuery } from '../neondb';\r\nimport { MaintenanceRequest, MaintenanceItem } from '@/models/types';\r\n\r\n// Maintenance Request Operations\r\nexport const getMaintenanceRequests = async (\r\n  complexId?: string, \r\n  buildingId?: string, \r\n  status?: MaintenanceRequest['status']\r\n): Promise<MaintenanceRequest[]> => {\r\n  try {\r\n    let sql = 'SELECT * FROM maintenance_requests WHERE 1=1';\r\n    const params: any[] = [];\r\n    \r\n    if (complexId) {\r\n      params.push(complexId);\r\n      sql += ` AND complex_id = $${params.length}`;\r\n    }\r\n    \r\n    if (buildingId) {\r\n      params.push(buildingId);\r\n      sql += ` AND building_id = $${params.length}`;\r\n    }\r\n    \r\n    if (status) {\r\n      params.push(status);\r\n      sql += ` AND status = $${params.length}`;\r\n    }\r\n    \r\n    sql += ' ORDER BY reported_date DESC';\r\n    \r\n    return await safeQuery(sql, params, []);\r\n  } catch (err) {\r\n    console.error('Error in getMaintenanceRequests:', err);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getMaintenanceRequestById = async (id: string): Promise<MaintenanceRequest | null> => {\r\n  try {\r\n    const result = await query('SELECT * FROM maintenance_requests WHERE id = $1', [id]);\r\n    return result.rows[0] || null;\r\n  } catch (err) {\r\n    console.error('Error in getMaintenanceRequestById:', err);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const createMaintenanceRequest = async (\r\n  request: Omit<MaintenanceRequest, 'id' | 'reported_date'>\r\n): Promise<MaintenanceRequest> => {\r\n  try {\r\n    const newRequest = {\r\n      ...request,\r\n      reported_date: new Date().toISOString(),\r\n      status: request.status || 'pending'\r\n    };\r\n    \r\n    const fields = Object.keys(newRequest).join(', ');\r\n    const placeholders = Object.keys(newRequest).map((_, i) => `$${i + 1}`).join(', ');\r\n    const values = Object.values(newRequest);\r\n    \r\n    const sql = `\r\n      INSERT INTO maintenance_requests (${fields}) \r\n      VALUES (${placeholders})\r\n      RETURNING *\r\n    `;\r\n    \r\n    const result = await query(sql, values);\r\n    return result.rows[0];\r\n  } catch (err) {\r\n    console.error('Error in createMaintenanceRequest:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updateMaintenanceRequest = async (\r\n  id: string, \r\n  updates: Partial<MaintenanceRequest>\r\n): Promise<MaintenanceRequest> => {\r\n  try {\r\n    const fields = Object.keys(updates);\r\n    const setClause = fields.map((field, i) => `${field} = $${i + 1}`).join(', ');\r\n    const values = [...Object.values(updates), id];\r\n    \r\n    const sql = `\r\n      UPDATE maintenance_requests \r\n      SET ${setClause} \r\n      WHERE id = $${fields.length + 1}\r\n      RETURNING *\r\n    `;\r\n    \r\n    const result = await query(sql, values);\r\n    return result.rows[0];\r\n  } catch (err) {\r\n    console.error('Error in updateMaintenanceRequest:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const deleteMaintenanceRequest = async (id: string): Promise<void> => {\r\n  try {\r\n    await query('DELETE FROM maintenance_requests WHERE id = $1', [id]);\r\n  } catch (err) {\r\n    console.error('Error in deleteMaintenanceRequest:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\n// Maintenance Items Operations\r\nexport const getMaintenanceItems = async (\r\n  maintenanceId: string\r\n): Promise<MaintenanceItem[]> => {\r\n  try {\r\n    const result = await query('SELECT * FROM maintenance_items WHERE maintenance_id = $1', [maintenanceId]);\r\n    return result.rows || [];\r\n  } catch (err) {\r\n    console.error('Error in getMaintenanceItems:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getMaintenanceItemById = async (id: string): Promise<MaintenanceItem | null> => {\r\n  try {\r\n    const result = await query('SELECT * FROM maintenance_items WHERE id = $1', [id]);\r\n    return result.rows[0] || null;\r\n  } catch (err) {\r\n    console.error('Error in getMaintenanceItemById:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const createMaintenanceItem = async (\r\n  item: Omit<MaintenanceItem, 'id'>\r\n): Promise<MaintenanceItem> => {\r\n  try {\r\n    const fields = Object.keys(item).join(', ');\r\n    const placeholders = Object.keys(item).map((_, i) => `$${i + 1}`).join(', ');\r\n    const values = Object.values(item);\r\n    \r\n    const sql = `\r\n      INSERT INTO maintenance_items (${fields}) \r\n      VALUES (${placeholders})\r\n      RETURNING *\r\n    `;\r\n    \r\n    const result = await query(sql, values);\r\n    return result.rows[0];\r\n  } catch (err) {\r\n    console.error('Error in createMaintenanceItem:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updateMaintenanceItem = async (\r\n  id: string, \r\n  updates: Partial<MaintenanceItem>\r\n): Promise<MaintenanceItem> => {\r\n  try {\r\n    const fields = Object.keys(updates);\r\n    const setClause = fields.map((field, i) => `${field} = $${i + 1}`).join(', ');\r\n    const values = [...Object.values(updates), id];\r\n    \r\n    const sql = `\r\n      UPDATE maintenance_items \r\n      SET ${setClause} \r\n      WHERE id = $${fields.length + 1}\r\n      RETURNING *\r\n    `;\r\n    \r\n    const result = await query(sql, values);\r\n    return result.rows[0];\r\n  } catch (err) {\r\n    console.error('Error in updateMaintenanceItem:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const deleteMaintenanceItem = async (id: string): Promise<void> => {\r\n  try {\r\n    await query('DELETE FROM maintenance_items WHERE id = $1', [id]);\r\n  } catch (err) {\r\n    console.error('Error in deleteMaintenanceItem:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\n// Get maintenance requests for monthly summary\r\nexport const getMonthlyMaintenanceRequests = async (\r\n  year: number,\r\n  month: number\r\n): Promise<MaintenanceRequest[]> => {\r\n  try {\r\n    // Create start and end date for the specified month\r\n    const startDate = new Date(year, month - 1, 1).toISOString();\r\n    const endDate = new Date(year, month, 0).toISOString();\r\n    \r\n    const sql = `\r\n      SELECT * FROM maintenance_requests\r\n      WHERE reported_date >= $1 AND reported_date <= $2\r\n    `;\r\n    \r\n    return await safeQuery(sql, [startDate, endDate], []);\r\n  } catch (err) {\r\n    console.error('Error in getMonthlyMaintenanceRequests:', err);\r\n    return [];\r\n  }\r\n};"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;;AAIO,MAAM,yBAAyB,OACpC,WACA,YACA;IAEA,IAAI;QACF,IAAI,MAAM;QACV,MAAM,SAAgB,EAAE;QAExB,IAAI,WAAW;YACb,OAAO,IAAI,CAAC;YACZ,OAAO,CAAC,mBAAmB,EAAE,OAAO,MAAM,EAAE;QAC9C;QAEA,IAAI,YAAY;YACd,OAAO,IAAI,CAAC;YACZ,OAAO,CAAC,oBAAoB,EAAE,OAAO,MAAM,EAAE;QAC/C;QAEA,IAAI,QAAQ;YACV,OAAO,IAAI,CAAC;YACZ,OAAO,CAAC,eAAe,EAAE,OAAO,MAAM,EAAE;QAC1C;QAEA,OAAO;QAEP,OAAO,MAAM,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD,EAAE,KAAK,QAAQ,EAAE;IACxC,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,oCAAoC;QAClD,OAAO,EAAE;IACX;AACF;AAEO,MAAM,4BAA4B,OAAO;IAC9C,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,uHAAA,CAAA,QAAK,AAAD,EAAE,oDAAoD;YAAC;SAAG;QACnF,OAAO,OAAO,IAAI,CAAC,EAAE,IAAI;IAC3B,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,uCAAuC;QACrD,OAAO;IACT;AACF;AAEO,MAAM,2BAA2B,OACtC;IAEA,IAAI;QACF,MAAM,aAAa;YACjB,GAAG,OAAO;YACV,eAAe,IAAI,OAAO,WAAW;YACrC,QAAQ,QAAQ,MAAM,IAAI;QAC5B;QAEA,MAAM,SAAS,OAAO,IAAI,CAAC,YAAY,IAAI,CAAC;QAC5C,MAAM,eAAe,OAAO,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,IAAM,CAAC,CAAC,EAAE,IAAI,GAAG,EAAE,IAAI,CAAC;QAC7E,MAAM,SAAS,OAAO,MAAM,CAAC;QAE7B,MAAM,MAAM,CAAC;wCACuB,EAAE,OAAO;cACnC,EAAE,aAAa;;IAEzB,CAAC;QAED,MAAM,SAAS,MAAM,CAAA,GAAA,uHAAA,CAAA,QAAK,AAAD,EAAE,KAAK;QAChC,OAAO,OAAO,IAAI,CAAC,EAAE;IACvB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,sCAAsC;QACpD,MAAM;IACR;AACF;AAEO,MAAM,2BAA2B,OACtC,IACA;IAEA,IAAI;QACF,MAAM,SAAS,OAAO,IAAI,CAAC;QAC3B,MAAM,YAAY,OAAO,GAAG,CAAC,CAAC,OAAO,IAAM,GAAG,MAAM,IAAI,EAAE,IAAI,GAAG,EAAE,IAAI,CAAC;QACxE,MAAM,SAAS;eAAI,OAAO,MAAM,CAAC;YAAU;SAAG;QAE9C,MAAM,MAAM,CAAC;;UAEP,EAAE,UAAU;kBACJ,EAAE,OAAO,MAAM,GAAG,EAAE;;IAElC,CAAC;QAED,MAAM,SAAS,MAAM,CAAA,GAAA,uHAAA,CAAA,QAAK,AAAD,EAAE,KAAK;QAChC,OAAO,OAAO,IAAI,CAAC,EAAE;IACvB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,sCAAsC;QACpD,MAAM;IACR;AACF;AAEO,MAAM,2BAA2B,OAAO;IAC7C,IAAI;QACF,MAAM,CAAA,GAAA,uHAAA,CAAA,QAAK,AAAD,EAAE,kDAAkD;YAAC;SAAG;IACpE,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,sCAAsC;QACpD,MAAM;IACR;AACF;AAGO,MAAM,sBAAsB,OACjC;IAEA,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,uHAAA,CAAA,QAAK,AAAD,EAAE,6DAA6D;YAAC;SAAc;QACvG,OAAO,OAAO,IAAI,IAAI,EAAE;IAC1B,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,MAAM;IACR;AACF;AAEO,MAAM,yBAAyB,OAAO;IAC3C,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,uHAAA,CAAA,QAAK,AAAD,EAAE,iDAAiD;YAAC;SAAG;QAChF,OAAO,OAAO,IAAI,CAAC,EAAE,IAAI;IAC3B,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,oCAAoC;QAClD,MAAM;IACR;AACF;AAEO,MAAM,wBAAwB,OACnC;IAEA,IAAI;QACF,MAAM,SAAS,OAAO,IAAI,CAAC,MAAM,IAAI,CAAC;QACtC,MAAM,eAAe,OAAO,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAM,CAAC,CAAC,EAAE,IAAI,GAAG,EAAE,IAAI,CAAC;QACvE,MAAM,SAAS,OAAO,MAAM,CAAC;QAE7B,MAAM,MAAM,CAAC;qCACoB,EAAE,OAAO;cAChC,EAAE,aAAa;;IAEzB,CAAC;QAED,MAAM,SAAS,MAAM,CAAA,GAAA,uHAAA,CAAA,QAAK,AAAD,EAAE,KAAK;QAChC,OAAO,OAAO,IAAI,CAAC,EAAE;IACvB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,mCAAmC;QACjD,MAAM;IACR;AACF;AAEO,MAAM,wBAAwB,OACnC,IACA;IAEA,IAAI;QACF,MAAM,SAAS,OAAO,IAAI,CAAC;QAC3B,MAAM,YAAY,OAAO,GAAG,CAAC,CAAC,OAAO,IAAM,GAAG,MAAM,IAAI,EAAE,IAAI,GAAG,EAAE,IAAI,CAAC;QACxE,MAAM,SAAS;eAAI,OAAO,MAAM,CAAC;YAAU;SAAG;QAE9C,MAAM,MAAM,CAAC;;UAEP,EAAE,UAAU;kBACJ,EAAE,OAAO,MAAM,GAAG,EAAE;;IAElC,CAAC;QAED,MAAM,SAAS,MAAM,CAAA,GAAA,uHAAA,CAAA,QAAK,AAAD,EAAE,KAAK;QAChC,OAAO,OAAO,IAAI,CAAC,EAAE;IACvB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,mCAAmC;QACjD,MAAM;IACR;AACF;AAEO,MAAM,wBAAwB,OAAO;IAC1C,IAAI;QACF,MAAM,CAAA,GAAA,uHAAA,CAAA,QAAK,AAAD,EAAE,+CAA+C;YAAC;SAAG;IACjE,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,mCAAmC;QACjD,MAAM;IACR;AACF;AAGO,MAAM,gCAAgC,OAC3C,MACA;IAEA,IAAI;QACF,oDAAoD;QACpD,MAAM,YAAY,IAAI,KAAK,MAAM,QAAQ,GAAG,GAAG,WAAW;QAC1D,MAAM,UAAU,IAAI,KAAK,MAAM,OAAO,GAAG,WAAW;QAEpD,MAAM,MAAM,CAAC;;;IAGb,CAAC;QAED,OAAO,MAAM,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD,EAAE,KAAK;YAAC;YAAW;SAAQ,EAAE,EAAE;IACtD,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,2CAA2C;QACzD,OAAO,EAAE;IACX;AACF","debugId":null}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/services/inventoryService.ts"],"sourcesContent":["import { query, safeQuery } from '../neondb';\r\nimport { Category, Item, Inventory } from '@/models/types';\r\n\r\n// Category Operations\r\nexport const getCategories = async (): Promise<Category[]> => {\r\n  try {\r\n    return await safeQuery('SELECT * FROM categories', [], []);\r\n  } catch (err) {\r\n    console.error('Error in getCategories:', err);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getCategoryById = async (id: string): Promise<Category | null> => {\r\n  try {\r\n    const result = await query('SELECT * FROM categories WHERE id = $1', [id]);\r\n    return result.rows[0] || null;\r\n  } catch (err) {\r\n    console.error('Error in getCategoryById:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const createCategory = async (category: Omit<Category, 'id'>): Promise<Category> => {\r\n  try {\r\n    const fields = Object.keys(category).join(', ');\r\n    const placeholders = Object.keys(category).map((_, i) => `$${i + 1}`).join(', ');\r\n    const values = Object.values(category);\r\n    \r\n    const sql = `\r\n      INSERT INTO categories (${fields}) \r\n      VALUES (${placeholders})\r\n      RETURNING *\r\n    `;\r\n    \r\n    const result = await query(sql, values);\r\n    return result.rows[0];\r\n  } catch (err) {\r\n    console.error('Error in createCategory:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updateCategory = async (id: string, updates: Partial<Category>): Promise<Category> => {\r\n  try {\r\n    const fields = Object.keys(updates);\r\n    const setClause = fields.map((field, i) => `${field} = $${i + 1}`).join(', ');\r\n    const values = [...Object.values(updates), id];\r\n    \r\n    const sql = `\r\n      UPDATE categories \r\n      SET ${setClause} \r\n      WHERE id = $${fields.length + 1}\r\n      RETURNING *\r\n    `;\r\n    \r\n    const result = await query(sql, values);\r\n    return result.rows[0];\r\n  } catch (err) {\r\n    console.error('Error in updateCategory:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const deleteCategory = async (id: string): Promise<void> => {\r\n  try {\r\n    await query('DELETE FROM categories WHERE id = $1', [id]);\r\n  } catch (err) {\r\n    console.error('Error in deleteCategory:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\n// Item Operations\r\nexport const getItems = async (categoryId?: string): Promise<Item[]> => {\r\n  try {\r\n    let sql = 'SELECT * FROM items';\r\n    const params: any[] = [];\r\n    \r\n    if (categoryId) {\r\n      params.push(categoryId);\r\n      sql += ' WHERE category_id = $1';\r\n    }\r\n    \r\n    const result = await query(sql, params);\r\n    return result.rows || [];\r\n  } catch (err) {\r\n    console.error('Error in getItems:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getItemById = async (id: string): Promise<Item | null> => {\r\n  try {\r\n    const result = await query('SELECT * FROM items WHERE id = $1', [id]);\r\n    return result.rows[0] || null;\r\n  } catch (err) {\r\n    console.error('Error in getItemById:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const createItem = async (item: Omit<Item, 'id'>): Promise<Item> => {\r\n  try {\r\n    const fields = Object.keys(item).join(', ');\r\n    const placeholders = Object.keys(item).map((_, i) => `$${i + 1}`).join(', ');\r\n    const values = Object.values(item);\r\n    \r\n    const sql = `\r\n      INSERT INTO items (${fields}) \r\n      VALUES (${placeholders})\r\n      RETURNING *\r\n    `;\r\n    \r\n    const result = await query(sql, values);\r\n    return result.rows[0];\r\n  } catch (err) {\r\n    console.error('Error in createItem:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updateItem = async (id: string, updates: Partial<Item>): Promise<Item> => {\r\n  try {\r\n    const fields = Object.keys(updates);\r\n    const setClause = fields.map((field, i) => `${field} = $${i + 1}`).join(', ');\r\n    const values = [...Object.values(updates), id];\r\n    \r\n    const sql = `\r\n      UPDATE items \r\n      SET ${setClause} \r\n      WHERE id = $${fields.length + 1}\r\n      RETURNING *\r\n    `;\r\n    \r\n    const result = await query(sql, values);\r\n    return result.rows[0];\r\n  } catch (err) {\r\n    console.error('Error in updateItem:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const deleteItem = async (id: string): Promise<void> => {\r\n  try {\r\n    await query('DELETE FROM items WHERE id = $1', [id]);\r\n  } catch (err) {\r\n    console.error('Error in deleteItem:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\n// Inventory Operations\r\nexport const getInventory = async (itemId?: string): Promise<Inventory[]> => {\r\n  try {\r\n    let sql = `\r\n      SELECT i.*, \r\n             it.id as item_id, \r\n             it.name as item_name, \r\n             it.category_id, \r\n             it.unit\r\n      FROM inventory i\r\n      LEFT JOIN items it ON i.item_id = it.id\r\n    `;\r\n    \r\n    const params: any[] = [];\r\n    if (itemId) {\r\n      params.push(itemId);\r\n      sql += ' WHERE i.item_id = $1';\r\n    }\r\n    \r\n    const rows = await safeQuery(sql, params, []);\r\n    \r\n    // Format the result to match the expected structure\r\n    return rows.map((row: {\r\n      id: string;\r\n      item_id: string;\r\n      item_name: string;\r\n      category_id: string;\r\n      unit: string;\r\n      quantity: number;\r\n      last_updated: string;\r\n    }) => ({\r\n      ...row,\r\n      items: {\r\n      id: row.item_id,\r\n      name: row.item_name,\r\n      category_id: row.category_id,\r\n      unit: row.unit\r\n      }\r\n    }));\r\n  } catch (err) {\r\n    console.error('Error in getInventory:', err);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getInventoryItemById = async (id: string): Promise<Inventory | null> => {\r\n  try {\r\n    const sql = `\r\n      SELECT i.*, \r\n             it.id as item_id, \r\n             it.name as item_name, \r\n             it.category_id, \r\n             it.unit\r\n      FROM inventory i\r\n      LEFT JOIN items it ON i.item_id = it.id\r\n      WHERE i.id = $1\r\n    `;\r\n    \r\n    const result = await query(sql, [id]);\r\n    \r\n    if (result.rows.length === 0) {\r\n      return null;\r\n    }\r\n    \r\n    // Format the result to match the expected structure\r\n    const row = result.rows[0];\r\n    return {\r\n      ...row,\r\n      items: {\r\n        id: row.item_id,\r\n        name: row.item_name,\r\n        category_id: row.category_id,\r\n        unit: row.unit\r\n      }\r\n    };\r\n  } catch (err) {\r\n    console.error('Error in getInventoryItemById:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updateInventoryQuantity = async (\r\n  itemId: string, \r\n  quantityChange: number\r\n): Promise<Inventory> => {\r\n  try {\r\n    // First, get the current inventory item\r\n    const currentInventoryResult = await query(\r\n      'SELECT * FROM inventory WHERE item_id = $1',\r\n      [itemId]\r\n    );\r\n    \r\n    const currentInventory = currentInventoryResult.rows[0];\r\n    \r\n    // If inventory item exists, update it\r\n    if (currentInventory) {\r\n      const newQuantity = currentInventory.quantity + quantityChange;\r\n      \r\n      if (newQuantity < 0) {\r\n        throw new Error('Insufficient inventory quantity');\r\n      }\r\n      \r\n      const result = await query(\r\n        'UPDATE inventory SET quantity = $1, last_updated = $2 WHERE id = $3 RETURNING *',\r\n        [newQuantity, new Date().toISOString(), currentInventory.id]\r\n      );\r\n      \r\n      return result.rows[0];\r\n    } \r\n    // If inventory item does not exist, create it (only if adding quantity)\r\n    else if (quantityChange > 0) {\r\n      const result = await query(\r\n        'INSERT INTO inventory (item_id, quantity, last_updated) VALUES ($1, $2, $3) RETURNING *',\r\n        [itemId, quantityChange, new Date().toISOString()]\r\n      );\r\n      \r\n      return result.rows[0];\r\n    } else {\r\n      throw new Error('Cannot reduce quantity of non-existent inventory item');\r\n    }\r\n  } catch (err) {\r\n    console.error('Error in updateInventoryQuantity:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updateInventoryItem = async (\r\n  id: string, \r\n  updates: Partial<Inventory>\r\n): Promise<Inventory> => {\r\n  try {\r\n    const updateData = {\r\n      ...updates,\r\n      last_updated: new Date().toISOString()\r\n    };\r\n    \r\n    const fields = Object.keys(updateData);\r\n    const setClause = fields.map((field, i) => `${field} = $${i + 1}`).join(', ');\r\n    const values = [...Object.values(updateData), id];\r\n    \r\n    const result = await query(\r\n      `UPDATE inventory SET ${setClause} WHERE id = $${fields.length + 1} RETURNING *`,\r\n      values\r\n    );\r\n    \r\n    return result.rows[0];\r\n  } catch (err) {\r\n    console.error('Error in updateInventoryItem:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getLowStockItems = async (threshold: number = 10): Promise<{ id: string; item_id: string; quantity: number; last_updated: string; name: string; category: string; unit: string }[]> => {\r\n  try {\r\n    const sql = `\r\n      SELECT i.*, \r\n             it.id as item_id, \r\n             it.name, \r\n             it.category_id, \r\n             it.unit,\r\n             c.name as category\r\n      FROM inventory i\r\n      LEFT JOIN items it ON i.item_id = it.id\r\n      LEFT JOIN categories c ON it.category_id = c.id\r\n      WHERE i.quantity <= $1\r\n    `;\r\n    \r\n    const rows = await safeQuery(sql, [threshold], []);\r\n    \r\n    // Format the result to match the expected structure\r\n    return rows.map((row: { id: string; item_id: string; quantity: number; last_updated: string; name: string; category: string; unit: string }) => ({\r\n      id: row.id,\r\n      item_id: row.item_id,\r\n      quantity: row.quantity,\r\n      last_updated: row.last_updated,\r\n      name: row.name,\r\n      category: row.category,\r\n      unit: row.unit\r\n    }));\r\n  } catch (err) {\r\n    console.error('Error in getLowStockItems:', err);\r\n    return [];\r\n  }\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 594, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/services/purchaseService.ts"],"sourcesContent":["import { query, safeQuery } from '../neondb';\r\nimport { PurchaseOrder, PurchaseItem } from '@/models/types';\r\n\r\n// Purchase Order Operations\r\nexport const getPurchaseOrders = async (\r\n  status?: PurchaseOrder['status']\r\n): Promise<PurchaseOrder[]> => {\r\n  try {\r\n    let sql = 'SELECT * FROM purchase_orders WHERE 1=1';\r\n    const params: any[] = [];\r\n    \r\n    if (status) {\r\n      params.push(status);\r\n      sql += ` AND status = $${params.length}`;\r\n    }\r\n    \r\n    sql += ' ORDER BY order_date DESC';\r\n    \r\n    return await safeQuery(sql, params, []);\r\n  } catch (err) {\r\n    console.error('Error in getPurchaseOrders:', err);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getPurchaseOrderById = async (id: string): Promise<PurchaseOrder | null> => {\r\n  try {\r\n    const result = await query('SELECT * FROM purchase_orders WHERE id = $1', [id]);\r\n    return result.rows[0] || null;\r\n  } catch (err) {\r\n    console.error('Error in getPurchaseOrderById:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const createPurchaseOrder = async (\r\n  order: Omit<PurchaseOrder, 'id' | 'order_date'>\r\n): Promise<PurchaseOrder> => {\r\n  try {\r\n    const newOrder = {\r\n      ...order,\r\n      order_date: new Date().toISOString(),\r\n      status: order.status || 'draft'\r\n    };\r\n    \r\n    const fields = Object.keys(newOrder).join(', ');\r\n    const placeholders = Object.keys(newOrder).map((_, i) => `$${i + 1}`).join(', ');\r\n    const values = Object.values(newOrder);\r\n    \r\n    const sql = `\r\n      INSERT INTO purchase_orders (${fields}) \r\n      VALUES (${placeholders})\r\n      RETURNING *\r\n    `;\r\n    \r\n    const result = await query(sql, values);\r\n    return result.rows[0];\r\n  } catch (err) {\r\n    console.error('Error in createPurchaseOrder:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updatePurchaseOrder = async (\r\n  id: string, \r\n  updates: Partial<PurchaseOrder>\r\n): Promise<PurchaseOrder> => {\r\n  try {\r\n    const fields = Object.keys(updates);\r\n    const setClause = fields.map((field, i) => `${field} = $${i + 1}`).join(', ');\r\n    const values = [...Object.values(updates), id];\r\n    \r\n    const sql = `\r\n      UPDATE purchase_orders \r\n      SET ${setClause} \r\n      WHERE id = $${fields.length + 1}\r\n      RETURNING *\r\n    `;\r\n    \r\n    const result = await query(sql, values);\r\n    return result.rows[0];\r\n  } catch (err) {\r\n    console.error('Error in updatePurchaseOrder:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const deletePurchaseOrder = async (id: string): Promise<void> => {\r\n  try {\r\n    await query('DELETE FROM purchase_orders WHERE id = $1', [id]);\r\n  } catch (err) {\r\n    console.error('Error in deletePurchaseOrder:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\n// Purchase Items Operations\r\nexport const getPurchaseItems = async (\r\n  purchaseOrderId: string\r\n): Promise<PurchaseItem[]> => {\r\n  try {\r\n    const sql = `\r\n      SELECT pi.*, \r\n             i.id as item_id, \r\n             i.name as item_name, \r\n             i.category_id, \r\n             i.unit\r\n      FROM purchase_items pi\r\n      LEFT JOIN items i ON pi.item_id = i.id\r\n      WHERE pi.purchase_order_id = $1\r\n    `;\r\n    \r\n    const result = await query(sql, [purchaseOrderId]);\r\n    \r\n    // Format the result to match the expected structure\r\n    return result.rows.map(row => ({\r\n      ...row,\r\n      items: {\r\n        id: row.item_id,\r\n        name: row.item_name,\r\n        category_id: row.category_id,\r\n        unit: row.unit\r\n      }\r\n    }));\r\n  } catch (err) {\r\n    console.error('Error in getPurchaseItems:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getPurchaseItemById = async (id: string): Promise<PurchaseItem | null> => {\r\n  try {\r\n    const sql = `\r\n      SELECT pi.*, \r\n             i.id as item_id, \r\n             i.name as item_name, \r\n             i.category_id, \r\n             i.unit\r\n      FROM purchase_items pi\r\n      LEFT JOIN items i ON pi.item_id = i.id\r\n      WHERE pi.id = $1\r\n    `;\r\n    \r\n    const result = await query(sql, [id]);\r\n    \r\n    if (result.rows.length === 0) {\r\n      return null;\r\n    }\r\n    \r\n    // Format the result to match the expected structure\r\n    const row = result.rows[0];\r\n    return {\r\n      ...row,\r\n      items: {\r\n        id: row.item_id,\r\n        name: row.item_name,\r\n        category_id: row.category_id,\r\n        unit: row.unit\r\n      }\r\n    };\r\n  } catch (err) {\r\n    console.error('Error in getPurchaseItemById:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const createPurchaseItem = async (\r\n  item: Omit<PurchaseItem, 'id'>\r\n): Promise<PurchaseItem> => {\r\n  try {\r\n    const fields = Object.keys(item).join(', ');\r\n    const placeholders = Object.keys(item).map((_, i) => `$${i + 1}`).join(', ');\r\n    const values = Object.values(item);\r\n    \r\n    const sql = `\r\n      INSERT INTO purchase_items (${fields}) \r\n      VALUES (${placeholders})\r\n      RETURNING *\r\n    `;\r\n    \r\n    const result = await query(sql, values);\r\n    return result.rows[0];\r\n  } catch (err) {\r\n    console.error('Error in createPurchaseItem:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updatePurchaseItem = async (\r\n  id: string, \r\n  updates: Partial<PurchaseItem>\r\n): Promise<PurchaseItem> => {\r\n  try {\r\n    const fields = Object.keys(updates);\r\n    const setClause = fields.map((field, i) => `${field} = $${i + 1}`).join(', ');\r\n    const values = [...Object.values(updates), id];\r\n    \r\n    const sql = `\r\n      UPDATE purchase_items \r\n      SET ${setClause} \r\n      WHERE id = $${fields.length + 1}\r\n      RETURNING *\r\n    `;\r\n    \r\n    const result = await query(sql, values);\r\n    return result.rows[0];\r\n  } catch (err) {\r\n    console.error('Error in updatePurchaseItem:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const deletePurchaseItem = async (id: string): Promise<void> => {\r\n  try {\r\n    await query('DELETE FROM purchase_items WHERE id = $1', [id]);\r\n  } catch (err) {\r\n    console.error('Error in deletePurchaseItem:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\n// Generate Monthly Purchase Orders\r\nexport const generateMonthlyPurchaseOrder = async (\r\n  year: number,\r\n  month: number,\r\n  createdBy: string\r\n): Promise<PurchaseOrder> => {\r\n  try {\r\n    // 1. Get all maintenance requests for the month\r\n    const startDate = new Date(year, month - 1, 1).toISOString();\r\n    const endDate = new Date(year, month, 0).toISOString();\r\n    \r\n    // Get all maintenance requests for the specified month first\r\n    let result;\r\n    try {\r\n      result = await query(\r\n        'SELECT id FROM maintenance_requests WHERE reported_date >= $1 AND reported_date <= $2',\r\n        [startDate, endDate]\r\n      );\r\n    } catch (err: any) {\r\n      // If the table doesn't exist, create a purchase order without items\r\n      if (err.message.includes('does not exist')) {\r\n        console.warn('Maintenance requests table does not exist yet. Creating empty purchase order.');\r\n        return createEmptyPurchaseOrder(year, month, createdBy);\r\n      }\r\n      throw err;\r\n    }\r\n    \r\n    const maintenanceRequests = result.rows;\r\n    \r\n    if (!maintenanceRequests || maintenanceRequests.length === 0) {\r\n      console.log('No maintenance requests found for the specified month. Creating empty purchase order.');\r\n      return createEmptyPurchaseOrder(year, month, createdBy);\r\n    }\r\n    \r\n    // Get maintenance items for these requests\r\n    const maintenanceIds = maintenanceRequests.map(req => req.id);\r\n    const placeholders = maintenanceIds.map((_, i) => `$${i + 1}`).join(',');\r\n    \r\n    let itemsResult;\r\n    try {\r\n      itemsResult = await query(\r\n        `SELECT * FROM maintenance_items WHERE maintenance_id IN (${placeholders})`,\r\n        maintenanceIds\r\n      );\r\n    } catch (err: any) {\r\n      // If the table doesn't exist, create a purchase order without items\r\n      if (err.message.includes('does not exist')) {\r\n        console.warn('Maintenance items table does not exist yet. Creating empty purchase order.');\r\n        return createEmptyPurchaseOrder(year, month, createdBy);\r\n      }\r\n      throw err;\r\n    }\r\n    \r\n    const maintenanceItems = itemsResult.rows;\r\n    \r\n    if (!maintenanceItems || maintenanceItems.length === 0) {\r\n      console.log('No maintenance items found for the specified month. Creating empty purchase order.');\r\n      return createEmptyPurchaseOrder(year, month, createdBy);\r\n    }\r\n    \r\n    // 2. Group items by item_id and sum quantities\r\n    const itemQuantities: Record<string, number> = {};\r\n    \r\n    maintenanceItems.forEach(item => {\r\n      if (!itemQuantities[item.item_id]) {\r\n        itemQuantities[item.item_id] = 0;\r\n      }\r\n      itemQuantities[item.item_id] += item.quantity_needed;\r\n    });\r\n    \r\n    // 3. Create a new purchase order\r\n    const newOrder = {\r\n      order_date: new Date().toISOString(),\r\n      status: 'draft',\r\n      created_by: createdBy,\r\n      notes: `Auto-generated order for ${year}-${month.toString().padStart(2, '0')}`\r\n    };\r\n    \r\n    const orderFields = Object.keys(newOrder).join(', ');\r\n    const orderPlaceholders = Object.keys(newOrder).map((_, i) => `$${i + 1}`).join(', ');\r\n    const orderValues = Object.values(newOrder);\r\n    \r\n    const orderResult = await query(\r\n      `INSERT INTO purchase_orders (${orderFields}) VALUES (${orderPlaceholders}) RETURNING *`,\r\n      orderValues\r\n    );\r\n    \r\n    const purchaseOrder = orderResult.rows[0];\r\n    \r\n    // 4. Create purchase items for each item type\r\n    if (Object.keys(itemQuantities).length > 0) {\r\n      const purchaseItems = Object.entries(itemQuantities).map(([itemId, quantity]) => ({\r\n        purchase_order_id: purchaseOrder.id,\r\n        item_id: itemId,\r\n        quantity: quantity\r\n      }));\r\n      \r\n      for (const item of purchaseItems) {\r\n        const itemFields = Object.keys(item).join(', ');\r\n        const itemPlaceholders = Object.keys(item).map((_, i) => `$${i + 1}`).join(', ');\r\n        const itemValues = Object.values(item);\r\n        \r\n        await query(\r\n          `INSERT INTO purchase_items (${itemFields}) VALUES (${itemPlaceholders})`,\r\n          itemValues\r\n        );\r\n      }\r\n    }\r\n    \r\n    return purchaseOrder;\r\n  } catch (error: any) {\r\n    console.error('Error generating monthly purchase order:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Helper function to create an empty purchase order when no maintenance items are found\r\nconst createEmptyPurchaseOrder = async (\r\n  year: number,\r\n  month: number,\r\n  createdBy: string\r\n): Promise<PurchaseOrder> => {\r\n  const newOrder = {\r\n    order_date: new Date().toISOString(),\r\n    status: 'draft',\r\n    created_by: createdBy,\r\n    notes: `Auto-generated order for ${year}-${month.toString().padStart(2, '0')} (No maintenance items found)`\r\n  };\r\n  \r\n  const fields = Object.keys(newOrder).join(', ');\r\n  const placeholders = Object.keys(newOrder).map((_, i) => `$${i + 1}`).join(', ');\r\n  const values = Object.values(newOrder);\r\n  \r\n  const result = await query(\r\n    `INSERT INTO purchase_orders (${fields}) VALUES (${placeholders}) RETURNING *`,\r\n    values\r\n  );\r\n  \r\n  return result.rows[0];\r\n};\r\n\r\n// Process Received Items\r\nexport const processReceivedItems = async (\r\n  purchaseOrderId: string, \r\n  receivedItems: Array<{ id: string, received_quantity: number }>\r\n): Promise<void> => {\r\n  try {\r\n    // Process each received item\r\n    for (const item of receivedItems) {\r\n      // 1. Update the purchase item\r\n      const updateItemResult = await query(\r\n        'UPDATE purchase_items SET received_quantity = $1 WHERE id = $2 RETURNING *',\r\n        [item.received_quantity, item.id]\r\n      );\r\n      \r\n      if (updateItemResult.rows.length === 0) {\r\n        throw new Error(`Purchase item with ID ${item.id} not found`);\r\n      }\r\n      \r\n      const purchaseItem = updateItemResult.rows[0];\r\n      \r\n      // 2. Update inventory\r\n      // First, get the current inventory for this item\r\n      const inventoryResult = await query(\r\n        'SELECT * FROM inventory WHERE item_id = $1',\r\n        [purchaseItem.item_id]\r\n      );\r\n      \r\n      const currentInventory = inventoryResult.rows[0];\r\n      \r\n      // If inventory entry exists, update it\r\n      if (currentInventory) {\r\n        await query(\r\n          'UPDATE inventory SET quantity = $1, last_updated = $2 WHERE id = $3',\r\n          [currentInventory.quantity + item.received_quantity, new Date().toISOString(), currentInventory.id]\r\n        );\r\n      } \r\n      // If no inventory entry exists, create one\r\n      else {\r\n        await query(\r\n          'INSERT INTO inventory (item_id, quantity, unit_price, last_updated) VALUES ($1, $2, $3, $4)',\r\n          [purchaseItem.item_id, item.received_quantity, purchaseItem.unit_price, new Date().toISOString()]\r\n        );\r\n      }\r\n    }\r\n    \r\n    // 3. Update the purchase order status to 'received'\r\n    await query(\r\n      'UPDATE purchase_orders SET status = $1 WHERE id = $2',\r\n      ['received', purchaseOrderId]\r\n    );\r\n  } catch (err) {\r\n    console.error('Error in processReceivedItems:', err);\r\n    throw err;\r\n  }\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 953, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/app/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { getMaintenanceRequests } from '@/lib/services/maintenanceService';\r\nimport { getLowStockItems } from '@/lib/services/inventoryService';\r\nimport { getPurchaseOrders } from '@/lib/services/purchaseService';\r\nimport { MaintenanceRequest, Inventory, PurchaseOrder, InventoryWithItem } from '@/models/types';\r\n\r\nexport default function Dashboard() {\r\n  const [pendingMaintenanceCount, setPendingMaintenanceCount] = useState(0);\r\n  const [inProgressMaintenanceCount, setInProgressMaintenanceCount] = useState(0);\r\n  const [lowStockItems, setLowStockItems] = useState<InventoryWithItem[]>([]);\r\n  const [recentOrders, setRecentOrders] = useState<PurchaseOrder[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchDashboardData = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        // استخدام Promise.allSettled للتعامل مع الاستعلامات بشكل متوازي\r\n        // حتى إذا فشل أحد الاستعلامات، ستستمر البقية\r\n        const [pendingResult, inProgressResult, lowStockResult, ordersResult] = await Promise.allSettled([\r\n          // Get maintenance requests by status\r\n          getMaintenanceRequests(undefined, undefined, 'pending')\r\n            .catch(() => []),\r\n          \r\n          getMaintenanceRequests(undefined, undefined, 'in_progress')\r\n            .catch(() => []),\r\n\r\n          // Get low stock items (threshold of 5)\r\n          getLowStockItems(5)\r\n            .catch(() => []),\r\n\r\n          // Get recent purchase orders (limit to 5)\r\n          getPurchaseOrders()\r\n            .catch(() => []),\r\n        ]);\r\n        \r\n        // معالجة النتائج بناءً على حالة كل وعد\r\n        if (pendingResult.status === 'fulfilled') {\r\n          setPendingMaintenanceCount(pendingResult.value.length);\r\n        }\r\n        \r\n        if (inProgressResult.status === 'fulfilled') {\r\n          setInProgressMaintenanceCount(inProgressResult.value.length);\r\n        }\r\n        \r\n        if (lowStockResult.status === 'fulfilled') {\r\n          setLowStockItems(lowStockResult.value);\r\n        }\r\n        \r\n        if (ordersResult.status === 'fulfilled') {\r\n          setRecentOrders(ordersResult.value.slice(0, 5));\r\n        }\r\n        \r\n        // Clear any previous errors on success\r\n        setError(null);\r\n      } catch (err: any) {\r\n        console.error('Error fetching dashboard data:', err);\r\n        setError(`فشل في تحميل بيانات لوحة التحكم: ${err.message || 'خطأ غير معروف'}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDashboardData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* Header section with greeting and summary */}\r\n      <div className=\"mb-8\">\r\n        <h1 className=\"text-3xl font-bold mb-2\">مرحباً بك في نظام إدارة المجمعات السكنية</h1>\r\n        <p className=\"text-gray-600 dark:text-gray-400\">نظرة عامة على حالة النظام والأنشطة الأخيرة</p>\r\n      </div>\r\n      \r\n      {/* Display error message if any */}\r\n      {error && (\r\n        <div className=\"mb-6 p-4 border-r-4 border-danger-600 bg-danger-50 dark:bg-danger-900/30 dark:border-danger-500 rounded-lg\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"flex-shrink-0\">\r\n              <svg className=\"h-5 w-5 text-danger-600 dark:text-danger-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n            </div>\r\n            <div className=\"mr-3\">\r\n              <p className=\"text-sm text-danger-600 dark:text-danger-500\">{error}</p>\r\n            </div>\r\n            <button \r\n              className=\"mr-auto p-1.5 rounded-md text-danger-600 dark:text-danger-500 hover:bg-danger-100 dark:hover:bg-danger-800\" \r\n              onClick={() => setError(null)}\r\n              aria-label=\"إغلاق\"\r\n            >\r\n              <svg className=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Display loading spinner when fetching data */}\r\n      {loading ? (\r\n        <div className=\"card flex items-center justify-center py-16\">\r\n          <div className=\"flex flex-col items-center\">\r\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600\"></div>\r\n            <p className=\"mt-4 text-gray-600 dark:text-gray-400\">جاري تحميل البيانات...</p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* Stats overview section */}\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\r\n            {/* Pending maintenance requests */}\r\n            <div className=\"stat-card card-hover\">\r\n              <div className=\"flex justify-between\">\r\n                <div>\r\n                  <p className=\"stat-label\">طلبات صيانة معلقة</p>\r\n                  <p className=\"stat-value text-primary-600 dark:text-primary-400\">{pendingMaintenanceCount}</p>\r\n                </div>\r\n                <div className=\"p-3 rounded-full bg-primary-100 dark:bg-primary-900/50 text-primary-600 dark:text-primary-400\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-4\">\r\n                <Link href=\"/maintenance?status=pending\" className=\"text-sm text-primary-600 dark:text-primary-400 hover:underline font-medium inline-flex items-center\">\r\n                  عرض الطلبات \r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1 rtl:rotate-180\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                  </svg>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n\r\n            {/* In progress maintenance */}\r\n            <div className=\"stat-card card-hover\">\r\n              <div className=\"flex justify-between\">\r\n                <div>\r\n                  <p className=\"stat-label\">صيانة قيد التنفيذ</p>\r\n                  <p className=\"stat-value text-secondary-600 dark:text-secondary-400\">{inProgressMaintenanceCount}</p>\r\n                </div>\r\n                <div className=\"p-3 rounded-full bg-secondary-100 dark:bg-secondary-900/50 text-secondary-600 dark:text-secondary-400\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-4\">\r\n                <Link href=\"/maintenance?status=in_progress\" className=\"text-sm text-secondary-600 dark:text-secondary-400 hover:underline font-medium inline-flex items-center\">\r\n                  المزيد من التفاصيل\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1 rtl:rotate-180\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                  </svg>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Low stock items */}\r\n            <div className=\"stat-card card-hover\">\r\n              <div className=\"flex justify-between\">\r\n                <div>\r\n                  <p className=\"stat-label\">أصناف منخفضة المخزون</p>\r\n                  <p className=\"stat-value text-warning-600 dark:text-warning-400\">{lowStockItems.length}</p>\r\n                </div>\r\n                <div className=\"p-3 rounded-full bg-warning-100 dark:bg-warning-900/50 text-warning-600 dark:text-warning-400\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-4\">\r\n                <Link href=\"/inventory\" className=\"text-sm text-warning-600 dark:text-warning-400 hover:underline font-medium inline-flex items-center\">\r\n                  إدارة المخزون\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1 rtl:rotate-180\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                  </svg>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Purchase orders */}\r\n            <div className=\"stat-card card-hover\">\r\n              <div className=\"flex justify-between\">\r\n                <div>\r\n                  <p className=\"stat-label\">طلبات الشراء الجديدة</p>\r\n                  <p className=\"stat-value text-accent-600 dark:text-accent-400\">{recentOrders.length}</p>\r\n                </div>\r\n                <div className=\"p-3 rounded-full bg-accent-100 dark:bg-accent-900/50 text-accent-600 dark:text-accent-400\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-4\">\r\n                <Link href=\"/purchase-orders\" className=\"text-sm text-accent-600 dark:text-accent-400 hover:underline font-medium inline-flex items-center\">\r\n                  عرض طلبات الشراء\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1 rtl:rotate-180\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                  </svg>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Quick Actions Section */}\r\n          <div className=\"card mb-8\">\r\n            <h2 className=\"text-xl font-bold mb-6\">إجراءات سريعة</h2>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-6 gap-4\">\r\n              <Link \r\n                href=\"/maintenance/new\" \r\n                className=\"flex flex-col items-center justify-center p-6 text-center bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-xl hover:bg-primary-50 dark:hover:bg-gray-700/60 transition-colors group\"\r\n              >\r\n                <div className=\"p-3 rounded-full bg-primary-100 dark:bg-primary-900/30 text-primary-600 dark:text-primary-400 group-hover:bg-primary-200 dark:group-hover:bg-primary-800/50 mb-3\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n                  </svg>\r\n                </div>\r\n                <span className=\"text-sm font-medium\">طلب صيانة جديد</span>\r\n              </Link>\r\n\r\n              <Link \r\n                href=\"/purchase-orders/new\" \r\n                className=\"flex flex-col items-center justify-center p-6 text-center bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-xl hover:bg-secondary-50 dark:hover:bg-gray-700/60 transition-colors group\"\r\n              >\r\n                <div className=\"p-3 rounded-full bg-secondary-100 dark:bg-secondary-900/30 text-secondary-600 dark:text-secondary-400 group-hover:bg-secondary-200 dark:group-hover:bg-secondary-800/50 mb-3\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n                  </svg>\r\n                </div>\r\n                <span className=\"text-sm font-medium\">طلب شراء جديد</span>\r\n              </Link>\r\n\r\n              <Link \r\n                href=\"/inventory/file-processor\" \r\n                className=\"flex flex-col items-center justify-center p-6 text-center bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-xl hover:bg-green-50 dark:hover:bg-gray-700/60 transition-colors group\"\r\n              >\r\n                <div className=\"p-3 rounded-full bg-green-100 dark:bg-green-900/30 text-green-600 dark:text-green-400 group-hover:bg-green-200 dark:group-hover:bg-green-800/50 mb-3\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\r\n                  </svg>\r\n                </div>\r\n                <span className=\"text-sm font-medium\">رفع بيانات المخزون</span>\r\n              </Link>\r\n\r\n              <Link \r\n                href=\"/housing/management\" \r\n                className=\"flex flex-col items-center justify-center p-6 text-center bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-xl hover:bg-purple-50 dark:hover:bg-gray-700/60 transition-colors group\"\r\n              >\r\n                <div className=\"p-3 rounded-full bg-purple-100 dark:bg-purple-900/30 text-purple-600 dark:text-purple-400 group-hover:bg-purple-200 dark:group-hover:bg-purple-800/50 mb-3\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\r\n                  </svg>\r\n                </div>\r\n                <span className=\"text-sm font-medium\">إدارة المجمعات</span>\r\n              </Link>\r\n\r\n              <Link \r\n                href=\"/reports\" \r\n                className=\"flex flex-col items-center justify-center p-6 text-center bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-xl hover:bg-blue-50 dark:hover:bg-gray-700/60 transition-colors group\"\r\n              >\r\n                <div className=\"p-3 rounded-full bg-blue-100 dark:bg-blue-900/30 text-blue-600 dark:text-blue-400 group-hover:bg-blue-200 dark:group-hover:bg-blue-800/50 mb-3\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                  </svg>\r\n                </div>\r\n                <span className=\"text-sm font-medium\">التقارير</span>\r\n              </Link>\r\n\r\n              <Link \r\n                href=\"/purchase-orders/monthly\" \r\n                className=\"flex flex-col items-center justify-center p-6 text-center bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-xl hover:bg-yellow-50 dark:hover:bg-gray-700/60 transition-colors group\"\r\n              >\r\n                <div className=\"p-3 rounded-full bg-yellow-100 dark:bg-yellow-900/30 text-yellow-600 dark:text-yellow-400 group-hover:bg-yellow-200 dark:group-hover:bg-yellow-800/50 mb-3\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n                  </svg>\r\n                </div>\r\n                <span className=\"text-sm font-medium\">طلبات شهرية</span>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Data Overview Section */}\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n            {/* Maintenance Requests Table */}\r\n            <div className=\"card\">\r\n              <div className=\"flex justify-between items-center mb-6\">\r\n                <h2 className=\"text-xl font-bold\">أحدث طلبات الصيانة</h2>\r\n                <Link href=\"/maintenance\" className=\"text-primary-600 dark:text-primary-400 text-sm font-medium hover:underline\">\r\n                  عرض الكل\r\n                </Link>\r\n              </div>\r\n\r\n              {pendingMaintenanceCount === 0 && inProgressMaintenanceCount === 0 ? (\r\n                <div className=\"py-8 text-center\">\r\n                  <div className=\"inline-flex items-center justify-center rounded-full bg-primary-100 dark:bg-primary-900/30 p-3 mb-4\">\r\n                    <svg className=\"h-8 w-8 text-primary-600 dark:text-primary-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                    </svg>\r\n                  </div>\r\n                  <h3 className=\"text-lg font-medium mb-1\">جميع طلبات الصيانة مكتملة</h3>\r\n                  <p className=\"text-gray-600 dark:text-gray-400 mb-4\">لا توجد طلبات صيانة معلقة أو قيد التنفيذ حالياً</p>\r\n                  <Link href=\"/maintenance/new\" className=\"btn btn-sm btn-primary\">\r\n                    إنشاء طلب جديد\r\n                  </Link>\r\n                </div>\r\n              ) : (\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>رقم الطلب</th>\r\n                        <th>الموقع</th>\r\n                        <th>الحالة</th>\r\n                        <th>الأولوية</th>\r\n                        <th>التاريخ</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {/* This should be populated with real data from API */}\r\n                      <tr>\r\n                        <td className=\"font-medium\">#a93b50</td>\r\n                        <td>المجمع الشرقي - مبنى 3</td>\r\n                        <td>\r\n                          <span className=\"badge badge-warning\">قيد الانتظار</span>\r\n                        </td>\r\n                        <td>\r\n                          <span className=\"badge badge-danger\">عالية</span>\r\n                        </td>\r\n                        <td dir=\"ltr\">2025-04-25</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"font-medium\">#c25e71</td>\r\n                        <td>المجمع الغربي - مبنى 1</td>\r\n                        <td>\r\n                          <span className=\"badge badge-primary\">قيد التنفيذ</span>\r\n                        </td>\r\n                        <td>\r\n                          <span className=\"badge badge-warning\">متوسطة</span>\r\n                        </td>\r\n                        <td dir=\"ltr\">2025-04-24</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Low Stock Items */}\r\n            <div className=\"card\">\r\n              <div className=\"flex justify-between items-center mb-6\">\r\n                <h2 className=\"text-xl font-bold\">الأصناف منخفضة المخزون</h2>\r\n                <Link href=\"/inventory\" className=\"text-primary-600 dark:text-primary-400 text-sm font-medium hover:underline\">\r\n                  إدارة المخزون\r\n                </Link>\r\n              </div>\r\n\r\n              {lowStockItems.length === 0 ? (\r\n                <div className=\"py-8 text-center\">\r\n                  <div className=\"inline-flex items-center justify-center rounded-full bg-success-100 dark:bg-success-900/30 p-3 mb-4\">\r\n                    <svg className=\"h-8 w-8 text-success-600 dark:text-success-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                    </svg>\r\n                  </div>\r\n                  <h3 className=\"text-lg font-medium mb-1\">مستويات المخزون جيدة</h3>\r\n                  <p className=\"text-gray-600 dark:text-gray-400 mb-4\">جميع الأصناف متوفرة بكميات كافية</p>\r\n                  <Link href=\"/inventory\" className=\"btn btn-sm btn-success\">\r\n                    عرض المخزون\r\n                  </Link>\r\n                </div>\r\n              ) : (\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>الصنف</th>\r\n                        <th>الفئة</th>\r\n                        <th>الكمية المتاحة</th>\r\n                        <th>الإجراءات</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {lowStockItems.map((item) => (\r\n                        <tr key={item.id}>\r\n                          <td className=\"font-medium\">{item.name || 'صنف غير معرف'}</td>\r\n                          <td>{item.category || 'بدون فئة'}</td>\r\n                          <td>\r\n                            <div className=\"flex items-center\">\r\n                              <div className=\"w-16 bg-gray-200 dark:bg-gray-700 rounded-full h-2.5 mr-2\">\r\n                                <div \r\n                                  className=\"bg-danger-600 h-2.5 rounded-full\" \r\n                                  style={{ width: `${Math.min(Math.max((item.quantity || 0) * 20, 5), 100)}%` }}\r\n                                ></div>\r\n                              </div>\r\n                              <span>{item.quantity} {item.unit}</span>\r\n                            </div>\r\n                          </td>\r\n                          <td>\r\n                            <Link \r\n                              href={`/purchase-orders/new?item=${item.item_id}`}\r\n                              className=\"text-primary-600 dark:text-primary-400 hover:underline text-sm\"\r\n                            >\r\n                              طلب شراء\r\n                            </Link>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Helper components for status badges could be defined here or imported from a shared component file"],"names":[],"mappings":"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","debugId":null}}]
}