{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/services/complexManagementService.ts"],"sourcesContent":["import { \r\n  ResidentialComplex, \r\n  Building, \r\n  Floor, \r\n  Room, \r\n  Service, \r\n  Facility \r\n} from '@/models/types';\r\n\r\n// المصفوفة الرئيسية لتخزين جميع المجمعات السكنية\r\nlet residentialComplexes: ResidentialComplex[] = [];\r\n\r\n/**\r\n * الحصول على جميع المجمعات السكنية\r\n */\r\nexport const getAllComplexes = (): ResidentialComplex[] => {\r\n  return residentialComplexes;\r\n};\r\n\r\n/**\r\n * الحصول على مجمع سكني بواسطة المعرف\r\n */\r\nexport const getComplexById = (id: string): ResidentialComplex | undefined => {\r\n  return residentialComplexes.find(complex => complex.id === id);\r\n};\r\n\r\n/**\r\n * إنشاء مجمع سكني جديد\r\n */\r\nexport const createComplex = async (complex: Omit<ResidentialComplex, 'id' | 'buildings' | 'created_at'>): Promise<ResidentialComplex> => {\r\n  try {\r\n    // إنشاء المعرف الفريد\r\n    const id = generateUniqueId();\r\n    \r\n    const newComplex: ResidentialComplex = {\r\n      id,\r\n      name: complex.name,\r\n      location: complex.location,\r\n      description: complex.description,\r\n      buildings: [],\r\n      sharedFacilities: [],\r\n      created_at: new Date().toISOString()\r\n    };\r\n    \r\n    // إرسال طلب لحفظ المجمع السكني في قاعدة البيانات\r\n    const response = await fetch('/api/housing', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        id: newComplex.id,\r\n        name: newComplex.name,\r\n        location: newComplex.location,\r\n        description: newComplex.description,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`فشل في حفظ المجمع السكني: ${response.statusText}`);\r\n    }\r\n    \r\n    // إضافة المجمع إلى المصفوفة المحلية\r\n    residentialComplexes.push(newComplex);\r\n    return newComplex;\r\n  } catch (error) {\r\n    console.error('خطأ في إنشاء المجمع السكني:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * تحديث مجمع سكني\r\n */\r\nexport const updateComplex = (id: string, updates: Partial<ResidentialComplex>): ResidentialComplex | undefined => {\r\n  const complexIndex = residentialComplexes.findIndex(complex => complex.id === id);\r\n  \r\n  if (complexIndex === -1) {\r\n    return undefined;\r\n  }\r\n  \r\n  const updatedComplex = {\r\n    ...residentialComplexes[complexIndex],\r\n    ...updates,\r\n  };\r\n  \r\n  residentialComplexes[complexIndex] = updatedComplex;\r\n  return updatedComplex;\r\n};\r\n\r\n/**\r\n * حذف مجمع سكني\r\n */\r\nexport const deleteComplex = (id: string): boolean => {\r\n  const initialLength = residentialComplexes.length;\r\n  residentialComplexes = residentialComplexes.filter(complex => complex.id !== id);\r\n  return residentialComplexes.length < initialLength;\r\n};\r\n\r\n/**\r\n * إضافة مبنى لمجمع سكني\r\n */\r\nexport const addBuildingToComplex = async (complexId: string, building: Omit<Building, 'id' | 'floors' | 'complex_id'>): Promise<Building | undefined> => {\r\n  try {\r\n    const complex = getComplexById(complexId);\r\n    \r\n    if (!complex) {\r\n      return undefined;\r\n    }\r\n    \r\n    // إرسال طلب لحفظ المبنى في قاعدة البيانات - make sure floors is at least 1\r\n    const response = await fetch('/api/housing/buildings', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        complex_id: complexId,\r\n        name: building.name,\r\n        floors: 1, // Default to 1 floor to satisfy database constraint CHECK (floors > 0)\r\n        description: building.description || ''\r\n      }),\r\n    });\r\n\r\n    // التحقق من نجاح الطلب\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(errorData.error || `فشل في حفظ المبنى: ${response.statusText}`);\r\n    }\r\n    \r\n    // استخراج بيانات المبنى المضاف من الاستجابة\r\n    const apiBuilding = await response.json();\r\n    \r\n    // إنشاء كائن المبنى بالتنسيق المناسب للتطبيق\r\n    const newBuilding: Building = {\r\n      id: apiBuilding.id,\r\n      name: apiBuilding.name || building.name,\r\n      floors: [],\r\n      floors_count: apiBuilding.floors || 1,\r\n      description: apiBuilding.description || building.description || '',\r\n      complex_id: complexId\r\n    };\r\n    \r\n    // إضافة المبنى إلى المصفوفة المحلية\r\n    complex.buildings.push(newBuilding);\r\n    return newBuilding;\r\n  } catch (error) {\r\n    console.error('خطأ في إضافة المبنى:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * الحصول على مبنى بواسطة المعرف\r\n */\r\nexport const getBuildingById = (complexId: string, buildingId: string): Building | undefined => {\r\n  const complex = getComplexById(complexId);\r\n  if (!complex) return undefined;\r\n  \r\n  return complex.buildings.find(building => building.id === buildingId);\r\n};\r\n\r\n/**\r\n * إضافة طابق لمبنى\r\n */\r\nexport const addFloorToBuilding = async (complexId: string, buildingId: string, floorNumber: number): Promise<Floor | undefined> => {\r\n  try {\r\n    const building = getBuildingById(complexId, buildingId);\r\n    \r\n    if (!building) {\r\n      return undefined;\r\n    }\r\n    \r\n    // التحقق من عدم وجود طابق بنفس الرقم\r\n    if (building.floors.some(floor => floor.number === floorNumber)) {\r\n      return undefined;\r\n    }\r\n    \r\n    // إنشاء المعرف الفريد\r\n    const id = generateUniqueId();\r\n    \r\n    const newFloor: Floor = {\r\n      id,\r\n      number: floorNumber,\r\n      rooms: [],\r\n      services: []\r\n    };\r\n    \r\n    // إرسال طلب لحفظ الطابق في قاعدة البيانات\r\n    await fetch('/api/housing/floors', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        id: newFloor.id,\r\n        building_id: buildingId,\r\n        number: floorNumber\r\n      }),\r\n    });\r\n    \r\n    // تحديث عدد الطوابق في المبنى في قاعدة البيانات\r\n    await fetch('/api/housing/buildings', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        id: buildingId,\r\n        floors: building.floors.length + 1\r\n      }),\r\n    });\r\n    \r\n    // إضافة الطابق إلى المصفوفة المحلية\r\n    building.floors.push(newFloor);\r\n    building.floors_count = building.floors.length;\r\n    \r\n    // ترتيب الطوابق تصاعدياً حسب الرقم\r\n    building.floors.sort((a, b) => a.number - b.number);\r\n    \r\n    return newFloor;\r\n  } catch (error) {\r\n    console.error('خطأ في إضافة الطابق:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * الحصول على طابق بواسطة الرقم\r\n */\r\nexport const getFloorByNumber = (complexId: string, buildingId: string, floorNumber: number): Floor | undefined => {\r\n  const building = getBuildingById(complexId, buildingId);\r\n  if (!building) return undefined;\r\n  \r\n  return building.floors.find(floor => floor.number === floorNumber);\r\n};\r\n\r\n/**\r\n * إضافة غرفة لطابق\r\n */\r\nexport const addRoomToFloor = async (\r\n  complexId: string, \r\n  buildingId: string, \r\n  floorNumber: number, \r\n  room: Omit<Room, 'id' | 'services'>\r\n): Promise<Room | undefined> => {\r\n  try {\r\n    const floor = getFloorByNumber(complexId, buildingId, floorNumber);\r\n    \r\n    if (!floor) {\r\n      return undefined;\r\n    }\r\n    \r\n    // التحقق من عدم وجود غرفة بنفس الرقم\r\n    if (floor.rooms.some(existingRoom => existingRoom.room_number === room.room_number)) {\r\n      return undefined;\r\n    }\r\n    \r\n    // إنشاء المعرف الفريد\r\n    const id = generateUniqueId();\r\n    \r\n    const newRoom: Room = {\r\n      id,\r\n      name: room.name,\r\n      room_number: room.room_number,\r\n      type: room.type,\r\n      status: room.status,\r\n      area: room.area,\r\n      hasBalcony: room.hasBalcony,\r\n      services: []\r\n    };\r\n    \r\n    // إرسال طلب لحفظ الغرفة في قاعدة البيانات\r\n    await fetch('/api/housing/rooms', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        id: newRoom.id,\r\n        building_id: buildingId,\r\n        floor_number: floorNumber,\r\n        name: newRoom.name,\r\n        room_number: newRoom.room_number,\r\n        type: newRoom.type,\r\n        status: newRoom.status,\r\n        area: newRoom.area,\r\n        has_balcony: newRoom.hasBalcony\r\n      }),\r\n    });\r\n    \r\n    // إضافة الغرفة إلى المصفوفة المحلية\r\n    floor.rooms.push(newRoom);\r\n    return newRoom;\r\n  } catch (error) {\r\n    console.error('خطأ في إضافة الغرفة:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * إضافة خدمة لطابق\r\n */\r\nexport const addServiceToFloor = async (\r\n  complexId: string,\r\n  buildingId: string,\r\n  floorNumber: number,\r\n  service: Omit<Service, 'id'>\r\n): Promise<Service | undefined> => {\r\n  try {\r\n    const floor = getFloorByNumber(complexId, buildingId, floorNumber);\r\n    \r\n    if (!floor) {\r\n      return undefined;\r\n    }\r\n    \r\n    // إنشاء المعرف الفريد\r\n    const id = generateUniqueId();\r\n    \r\n    const newService: Service = {\r\n      id,\r\n      name: service.name,\r\n      type: service.type,\r\n      location: service.location,\r\n      description: service.description\r\n    };\r\n    \r\n    // إرسال طلب لحفظ الخدمة في قاعدة البيانات\r\n    await fetch('/api/housing/services', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        id: newService.id,\r\n        building_id: buildingId,\r\n        floor_number: floorNumber,\r\n        room_number: null,\r\n        name: newService.name,\r\n        type: newService.type,\r\n        location: newService.location,\r\n        description: newService.description\r\n      }),\r\n    });\r\n    \r\n    // إضافة الخدمة إلى المصفوفة المحلية\r\n    floor.services.push(newService);\r\n    return newService;\r\n  } catch (error) {\r\n    console.error('خطأ في إضافة الخدمة للطابق:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * إضافة خدمة لغرفة\r\n */\r\nexport const addServiceToRoom = async (\r\n  complexId: string,\r\n  buildingId: string,\r\n  floorNumber: number,\r\n  roomNumber: string,\r\n  service: Omit<Service, 'id'>\r\n): Promise<Service | undefined> => {\r\n  try {\r\n    const floor = getFloorByNumber(complexId, buildingId, floorNumber);\r\n    if (!floor) return undefined;\r\n    \r\n    const room = floor.rooms.find(room => room.room_number === roomNumber);\r\n    if (!room) return undefined;\r\n    \r\n    if (!room.services) {\r\n      room.services = [];\r\n    }\r\n    \r\n    // إنشاء المعرف الفريد\r\n    const id = generateUniqueId();\r\n    \r\n    const newService: Service = {\r\n      id,\r\n      name: service.name,\r\n      type: service.type,\r\n      location: service.location,\r\n      description: service.description\r\n    };\r\n    \r\n    // إرسال طلب لحفظ الخدمة في قاعدة البيانات\r\n    await fetch('/api/housing/services', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        id: newService.id,\r\n        building_id: buildingId,\r\n        floor_number: floorNumber,\r\n        room_number: roomNumber,\r\n        name: newService.name,\r\n        type: newService.type,\r\n        location: newService.location,\r\n        description: newService.description\r\n      }),\r\n    });\r\n    \r\n    // إضافة الخدمة إلى المصفوفة المحلية\r\n    room.services.push(newService);\r\n    return newService;\r\n  } catch (error) {\r\n    console.error('خطأ في إضافة الخدمة للغرفة:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * دالة مساعدة لإنشاء معرفات فريدة بتنسيق UUID\r\n */\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst generateUniqueId = (): string => {\r\n  return uuidv4();\r\n};\r\n\r\n/**\r\n * استيراد بيانات المجمعات السكنية من وحدات API خارجية\r\n */\r\nexport const importComplexesFromAPI = async (): Promise<void> => {\r\n  try {\r\n    const response = await fetch('/api/housing');\r\n    if (!response.ok) {\r\n      throw new Error(`فشل في جلب المجمعات السكنية: ${response.statusText}`);\r\n    }\r\n    \r\n    const apiComplexes = await response.json();\r\n    \r\n    // تحويل البيانات من النموذج القديم إلى النموذج الجديد\r\n    const transformedComplexes: ResidentialComplex[] = [];\r\n    \r\n    for (const apiComplex of apiComplexes) {\r\n      const complex: ResidentialComplex = {\r\n        id: apiComplex.id,\r\n        name: apiComplex.name,\r\n        location: apiComplex.location,\r\n        description: apiComplex.description,\r\n        created_at: apiComplex.created_at,\r\n        buildings: [],\r\n        sharedFacilities: []\r\n      };\r\n      \r\n      // استيراد المباني\r\n      try {\r\n        const buildingsResponse = await fetch(`/api/housing/buildings?complexId=${complex.id}`);\r\n        if (buildingsResponse.ok) {\r\n          const apiBuildings = await buildingsResponse.json();\r\n          \r\n          for (const apiBuilding of apiBuildings) {\r\n            const building: Building = {\r\n              id: apiBuilding.id,\r\n              name: apiBuilding.name,\r\n              complex_id: apiBuilding.complex_id,\r\n              floors_count: apiBuilding.floors,\r\n              description: apiBuilding.description,\r\n              address: apiBuilding.address,\r\n              floors: []\r\n            };\r\n            \r\n            // استيراد الطوابق\r\n            try {\r\n              const floorsResponse = await fetch(`/api/housing/floors?buildingId=${building.id}`);\r\n              if (floorsResponse.ok) {\r\n                const apiFloors = await floorsResponse.json();\r\n                \r\n                for (const apiFloor of apiFloors) {\r\n                  const floor: Floor = {\r\n                    id: apiFloor.id,\r\n                    number: apiFloor.number,\r\n                    rooms: [],\r\n                    services: []\r\n                  };\r\n                  \r\n                  // استيراد الغرف للطابق\r\n                  try {\r\n                    const roomsResponse = await fetch(`/api/housing/rooms?buildingId=${building.id}&floorNumber=${floor.number}`);\r\n                    if (roomsResponse.ok) {\r\n                      const apiRooms = await roomsResponse.json();\r\n                      \r\n                      for (const apiRoom of apiRooms) {\r\n                        const room: Room = {\r\n                          id: apiRoom.id,\r\n                          name: apiRoom.name,\r\n                          room_number: apiRoom.room_number,\r\n                          type: apiRoom.type,\r\n                          status: apiRoom.status,\r\n                          area: apiRoom.area,\r\n                          hasBalcony: apiRoom.has_balcony,\r\n                          services: []\r\n                        };\r\n                        \r\n                        // استيراد الخدمات للغرفة\r\n                        try {\r\n                          const servicesResponse = await fetch(`/api/housing/services?roomId=${room.id}`);\r\n                          if (servicesResponse.ok) {\r\n                            const apiServices = await servicesResponse.json();\r\n                            room.services = apiServices.map((apiService: any) => ({\r\n                              id: apiService.id,\r\n                              name: apiService.name,\r\n                              type: apiService.type,\r\n                              location: apiService.location,\r\n                              description: apiService.description\r\n                            }));\r\n                          }\r\n                        } catch (error) {\r\n                          console.error(`فشل في استيراد خدمات الغرفة ${room.name}:`, error);\r\n                        }\r\n                        \r\n                        floor.rooms.push(room);\r\n                      }\r\n                    }\r\n                  } catch (error) {\r\n                    console.error(`فشل في استيراد غرف الطابق ${floor.number}:`, error);\r\n                  }\r\n                  \r\n                  // استيراد الخدمات للطابق\r\n                  try {\r\n                    const servicesResponse = await fetch(`/api/housing/services?floorId=${floor.id}`);\r\n                    if (servicesResponse.ok) {\r\n                      const apiServices = await servicesResponse.json();\r\n                      floor.services = apiServices.map((apiService: any) => ({\r\n                        id: apiService.id,\r\n                        name: apiService.name,\r\n                        type: apiService.type,\r\n                        location: apiService.location,\r\n                        description: apiService.description\r\n                      }));\r\n                    }\r\n                  } catch (error) {\r\n                    console.error(`فشل في استيراد خدمات الطابق ${floor.number}:`, error);\r\n                  }\r\n                  \r\n                  building.floors.push(floor);\r\n                }\r\n                \r\n                // ترتيب الطوابق تصاعدياً حسب الرقم\r\n                building.floors.sort((a, b) => a.number - b.number);\r\n              }\r\n            } catch (error) {\r\n              console.error(`فشل في استيراد طوابق المبنى ${building.name}:`, error);\r\n              \r\n              // إنشاء طوابق افتراضية بناءً على عدد الطوابق في المبنى\r\n              for (let i = 1; i <= apiBuilding.floors; i++) {\r\n                const floor: Floor = {\r\n                  id: generateUniqueId(),\r\n                  number: i,\r\n                  rooms: [],\r\n                  services: []\r\n                };\r\n                building.floors.push(floor);\r\n              }\r\n            }\r\n            \r\n            complex.buildings.push(building);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(`فشل في استيراد المباني للمجمع ${complex.name}:`, error);\r\n      }\r\n      \r\n      transformedComplexes.push(complex);\r\n    }\r\n    \r\n    // تحديث المصفوفة الرئيسية\r\n    residentialComplexes = transformedComplexes;\r\n    \r\n  } catch (error) {\r\n    console.error('فشل في استيراد المجمعات السكنية:', error);\r\n    throw error;\r\n  }\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 469, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/components/HousingVisualization.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from 'react';\r\nimport { ResidentialComplex, Building, Floor, Room, Service } from '@/models/types';\r\n\r\ninterface HousingVisualizationProps {\r\n  complexes: ResidentialComplex[];\r\n  onSelectComplex?: (complexId: string) => void;\r\n  onSelectBuilding?: (buildingId: string) => void;\r\n  onSelectFloor?: (floorNumber: number) => void;\r\n  onSelectRoom?: (roomNumber: string) => void;\r\n}\r\n\r\nexport default function HousingVisualization({\r\n  complexes,\r\n  onSelectComplex,\r\n  onSelectBuilding,\r\n  onSelectFloor,\r\n  onSelectRoom\r\n}: HousingVisualizationProps) {\r\n  const [selectedComplex, setSelectedComplex] = useState<string | null>(null);\r\n  const [selectedBuilding, setSelectedBuilding] = useState<string | null>(null);\r\n  const [selectedFloor, setSelectedFloor] = useState<number | null>(null);\r\n  const [activeView, setActiveView] = useState<'card' | 'tree' | '3d'>('card');\r\n  const [showDetails, setShowDetails] = useState<boolean>(false);\r\n  \r\n  // Get current selected complex object\r\n  const currentComplex = complexes.find(c => c.id === selectedComplex);\r\n  \r\n  // Get current selected building object\r\n  const currentBuilding = currentComplex && currentComplex.buildings ? \r\n    currentComplex.buildings.find(b => b.id === selectedBuilding) : undefined;\r\n  \r\n  // Get current selected floor object\r\n  const currentFloor = currentBuilding && currentBuilding.floors ? \r\n    currentBuilding.floors.find(f => f.number === selectedFloor) : undefined;\r\n\r\n  const handleComplexSelect = (complexId: string) => {\r\n    setSelectedComplex(complexId);\r\n    setSelectedBuilding(null);\r\n    setSelectedFloor(null);\r\n    if (onSelectComplex) onSelectComplex(complexId);\r\n  };\r\n\r\n  const handleBuildingSelect = (buildingId: string) => {\r\n    setSelectedBuilding(buildingId);\r\n    setSelectedFloor(null);\r\n    if (onSelectBuilding) onSelectBuilding(buildingId);\r\n  };\r\n\r\n  const handleFloorSelect = (floorNumber: number) => {\r\n    setSelectedFloor(floorNumber);\r\n    if (onSelectFloor) onSelectFloor(floorNumber);\r\n  };\r\n\r\n  const handleRoomSelect = (roomNumber: string) => {\r\n    if (onSelectRoom) onSelectRoom(roomNumber);\r\n  };\r\n\r\n  // Color generator for consistent but different colors\r\n  const getColor = (index: number, type: 'complex' | 'building' | 'floor' | 'room') => {\r\n    const baseColors = {\r\n      complex: 'bg-primary',\r\n      building: 'bg-secondary',\r\n      floor: 'bg-accent',\r\n      room: 'bg-neutral'\r\n    };\r\n    \r\n    const colorVariants = [\r\n      'bg-primary',\r\n      'bg-secondary',\r\n      'bg-accent',\r\n      'bg-neutral',\r\n      'bg-info',\r\n      'bg-success',\r\n      'bg-warning',\r\n      'bg-error'\r\n    ];\r\n    \r\n    // For complexes, use rotating colors\r\n    if (type === 'complex') return colorVariants[index % colorVariants.length];\r\n    \r\n    // Otherwise use the base color for the type\r\n    return baseColors[type];\r\n  };\r\n\r\n  // Room status to styling mapping\r\n  const getRoomStatusClass = (status: string) => {\r\n    switch(status) {\r\n      case 'available': return 'border-success bg-success bg-opacity-10';\r\n      case 'occupied': return 'border-warning bg-warning bg-opacity-10';\r\n      case 'maintenance': return 'border-error bg-error bg-opacity-10';\r\n      default: return 'border-neutral';\r\n    }\r\n  };\r\n\r\n  const getStatusLabel = (status: string) => {\r\n    switch(status) {\r\n      case 'available': return 'متاح';\r\n      case 'occupied': return 'مشغول';\r\n      case 'maintenance': return 'قيد الصيانة';\r\n      default: return status;\r\n    }\r\n  };\r\n\r\n  // Card View\r\n  const renderCardView = () => (\r\n    <div className=\"p-4\">\r\n      {/* Complexes Section */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n        {complexes.map((complex, index) => (\r\n          <div \r\n            key={complex.id}\r\n            className={`card shadow-lg cursor-pointer transition-all transform hover:scale-105 border-2 ${selectedComplex === complex.id ? 'border-primary' : 'border-transparent'}`}\r\n            onClick={() => handleComplexSelect(complex.id)}\r\n          >\r\n            <div className={`card-body ${getColor(index, 'complex')} text-white`}>\r\n              <h2 className=\"card-title text-xl text-right flex justify-between\">\r\n                {complex.name}\r\n                <span className=\"badge badge-neutral\">{complex.buildings && complex.buildings.length || 0} مبنى</span>\r\n              </h2>\r\n              <p className=\"text-right\">{complex.location}</p>\r\n              {complex.description && <p className=\"text-right text-sm opacity-80\">{complex.description}</p>}\r\n            </div>\r\n            \r\n            {/* Show Buildings when complex is selected */}\r\n            {selectedComplex === complex.id && complex.buildings && Array.isArray(complex.buildings) && (\r\n              <div className=\"p-4 bg-base-200\">\r\n                <h3 className=\"text-right mb-3 font-bold text-lg\">المباني</h3>\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\r\n                  {complex.buildings.map((building, buildingIndex) => (\r\n                    <div \r\n                      key={building.id} \r\n                      className={`card shadow bg-base-100 cursor-pointer hover:bg-base-200 ${selectedBuilding === building.id ? 'border-2 border-secondary' : ''}`}\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleBuildingSelect(building.id);\r\n                      }}\r\n                    >\r\n                      <div className=\"card-body p-4\">\r\n                        <h4 className=\"text-right font-bold\">{building.name}</h4>\r\n                        <p className=\"text-right text-sm\">{building.floors_count || (building.floors && building.floors.length) || 0} طابق</p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Building Details Section - Show when a building is selected */}\r\n      {currentBuilding && (\r\n        <div className=\"mt-8 card shadow-lg border-2 border-secondary\">\r\n          <div className=\"card-body bg-secondary text-white\">\r\n            <h2 className=\"card-title text-xl text-right\">\r\n              {currentBuilding.name} - {currentComplex?.name}\r\n              <span className=\"badge badge-neutral\">{currentBuilding.floors && currentBuilding.floors.length || 0} طابق</span>\r\n            </h2>\r\n            {currentBuilding.description && (\r\n              <p className=\"text-right\">{currentBuilding.description}</p>\r\n            )}\r\n          </div>\r\n          \r\n          {/* Floors Section */}\r\n          <div className=\"p-4\">\r\n            <h3 className=\"text-right mb-3 font-bold text-lg\">الطوابق</h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-3\">\r\n              {currentBuilding.floors && currentBuilding.floors\r\n                .sort((a, b) => b.number - a.number) // Sort floors in descending order\r\n                .map((floor) => (\r\n                <div \r\n                  key={floor.id} \r\n                  className={`card shadow cursor-pointer bg-base-100 hover:bg-base-200 ${selectedFloor === floor.number ? 'border-2 border-accent' : ''}`}\r\n                  onClick={() => handleFloorSelect(floor.number)}\r\n                >\r\n                  <div className=\"card-body p-4\">\r\n                    <h4 className=\"text-right font-bold\">الطابق {floor.number}</h4>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"badge badge-primary\">{floor.rooms && floor.rooms.length || 0} غرفة</span>\r\n                      <span className=\"badge badge-secondary\">{floor.services && floor.services.length || 0} خدمة</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Floor Details Section - Show when a floor is selected */}\r\n      {currentFloor && (\r\n        <div className=\"mt-8 card shadow-lg border-2 border-accent\">\r\n          <div className=\"card-body bg-accent text-white\">\r\n            <h2 className=\"card-title text-xl text-right\">\r\n              الطابق {currentFloor.number} - {currentBuilding?.name}\r\n            </h2>\r\n            <div className=\"flex justify-end gap-2\">\r\n              <span className=\"badge badge-neutral\">{currentFloor.rooms && currentFloor.rooms.length || 0} غرفة</span>\r\n              <span className=\"badge badge-neutral\">{currentFloor.services && currentFloor.services.length || 0} خدمة</span>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Rooms Section */}\r\n          <div className=\"p-4\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <div className=\"flex gap-4\">\r\n                <div className=\"flex items-center\">\r\n                  <span className=\"h-3 w-3 rounded-full bg-success mr-2\"></span>\r\n                  <span className=\"text-xs\">متاح</span>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                  <span className=\"h-3 w-3 rounded-full bg-warning mr-2\"></span>\r\n                  <span className=\"text-xs\">مشغول</span>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                  <span className=\"h-3 w-3 rounded-full bg-error mr-2\"></span>\r\n                  <span className=\"text-xs\">صيانة</span>\r\n                </div>\r\n              </div>\r\n              <h3 className=\"text-right font-bold text-lg\">الغرف</h3>\r\n            </div>\r\n            {currentFloor.rooms && currentFloor.rooms.length > 0 ? (\r\n              <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-3 mb-6\">\r\n                {currentFloor.rooms.map((room) => (\r\n                  <div \r\n                    key={room.id} \r\n                    className={`relative card shadow cursor-pointer hover:shadow-lg border-2 ${getRoomStatusClass(room.status)}`}\r\n                    onClick={() => handleRoomSelect(room.room_number)}\r\n                  >\r\n                    <div className=\"absolute top-2 left-2\">\r\n                      <span className={`text-xs badge ${\r\n                        room.status === 'available' ? 'badge-success' : \r\n                        room.status === 'occupied' ? 'badge-warning' : 'badge-error'\r\n                      }`}>\r\n                        {getStatusLabel(room.status)}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"card-body p-3\">\r\n                      <h4 className=\"text-right font-bold\">{room.name}</h4>\r\n                      <p className=\"text-right text-sm\">رقم الغرفة: {room.room_number}</p>\r\n                      <p className=\"text-right text-xs opacity-70\">{room.type}</p>\r\n                      {room.services && room.services.length > 0 && (\r\n                        <div className=\"text-right mt-2\">\r\n                          <span className=\"badge badge-sm\">{room.services.length} خدمة</span>\r\n                        </div>\r\n                      )}\r\n                      {room.area && (\r\n                        <p className=\"text-right text-xs mt-1\">{room.area} م²</p>\r\n                      )}\r\n                      {room.hasBalcony && (\r\n                        <div className=\"text-right mt-1\">\r\n                          <span className=\"badge badge-outline badge-xs\">شرفة</span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"alert alert-info\">\r\n                <p className=\"text-center\">لا توجد غرف في هذا الطابق</p>\r\n              </div>\r\n            )}\r\n\r\n            {/* Services Section */}\r\n            {currentFloor.services && currentFloor.services.length > 0 && (\r\n              <>\r\n                <h3 className=\"text-right mb-3 font-bold text-lg\">الخدمات المشتركة بالطابق</h3>\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"table table-compact w-full\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"text-right\">الاسم</th>\r\n                        <th className=\"text-right\">النوع</th>\r\n                        <th className=\"text-right\">الموقع</th>\r\n                        <th className=\"text-right\">الوصف</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {currentFloor.services.map((service) => (\r\n                        <tr key={service.id} className=\"hover\">\r\n                          <td className=\"text-right\">{service.name}</td>\r\n                          <td className=\"text-right\">{service.type}</td>\r\n                          <td className=\"text-right\">{service.location}</td>\r\n                          <td className=\"text-right\">{service.description}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  // Tree View - Hierarchical representation\r\n  const renderTreeView = () => (\r\n    <div className=\"p-4\">\r\n      <div className=\"flex flex-col space-y-4\">\r\n        {complexes.map((complex, index) => (\r\n          <div key={complex.id} className=\"border rounded-lg overflow-hidden\">\r\n            <div \r\n              className={`${getColor(index, 'complex')} p-4 flex justify-between items-center text-white cursor-pointer`}\r\n              onClick={() => handleComplexSelect(complex.id)}\r\n            >\r\n              <div className=\"flex items-center\">\r\n                <span className=\"badge badge-neutral\">{complex.buildings && complex.buildings.length || 0} مبنى</span>\r\n              </div>\r\n              <div className=\"text-right\">\r\n                <h2 className=\"font-bold text-lg\">{complex.name}</h2>\r\n                <p className=\"text-sm opacity-90\">{complex.location}</p>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Expand buildings when complex is selected */}\r\n            {selectedComplex === complex.id && complex.buildings && Array.isArray(complex.buildings) && complex.buildings.length > 0 && (\r\n              <div className=\"bg-base-100 p-2 border-t\">\r\n                <div className=\"relative\">\r\n                  {/* Vertical line connecting buildings */}\r\n                  <div className=\"absolute bottom-0 top-0 right-7 border-r-2 border-dashed\"></div>\r\n                  \r\n                  {complex.buildings.map((building, buildingIndex) => (\r\n                    <div key={building.id} className=\"relative mr-8 mb-2\">\r\n                      {/* Horizontal line to building */}\r\n                      <div className=\"absolute top-6 right-[-28px] w-7 border-t-2 border-dashed\"></div>\r\n                      \r\n                      <div \r\n                        className={`${selectedBuilding === building.id ? 'border-2 border-secondary' : 'border'} \r\n                                    rounded-lg overflow-hidden shadow-sm`}\r\n                      >\r\n                        <div \r\n                          className=\"bg-base-200 p-3 flex justify-between items-center cursor-pointer\"\r\n                          onClick={() => handleBuildingSelect(building.id)}\r\n                        >\r\n                          <span className=\"badge badge-secondary\">{building.floors && building.floors.length || 0} طابق</span>\r\n                          <h3 className=\"text-right font-bold\">{building.name}</h3>\r\n                        </div>\r\n                        \r\n                        {/* Expand floors when building is selected */}\r\n                        {selectedBuilding === building.id && building.floors && Array.isArray(building.floors) && building.floors.length > 0 && (\r\n                          <div className=\"bg-base-100 p-2 border-t relative\">\r\n                            {/* Vertical line connecting floors */}\r\n                            <div className=\"absolute bottom-0 top-0 right-7 border-r-2 border-dotted\"></div>\r\n                            \r\n                            {building.floors\r\n                              .sort((a, b) => b.number - a.number)\r\n                              .map((floor) => (\r\n                              <div key={floor.id} className=\"relative mr-8 mb-2\">\r\n                                {/* Horizontal line to floor */}\r\n                                <div className=\"absolute top-6 right-[-28px] w-7 border-t-2 border-dotted\"></div>\r\n                                \r\n                                <div \r\n                                  className={`${selectedFloor === floor.number ? 'border-2 border-accent' : 'border'} \r\n                                            rounded-lg overflow-hidden shadow-sm`}\r\n                                >\r\n                                  <div \r\n                                    className=\"bg-base-200 p-2 flex justify-between items-center cursor-pointer\"\r\n                                    onClick={() => handleFloorSelect(floor.number)}\r\n                                  >\r\n                                    <div className=\"flex space-x-2\">\r\n                                      <span className=\"badge badge-primary badge-sm\">{floor.rooms.length} غرفة</span>\r\n                                      <span className=\"badge badge-secondary badge-sm\">{floor.services.length} خدمة</span>\r\n                                    </div>\r\n                                    <h4 className=\"text-right\">الطابق {floor.number}</h4>\r\n                                  </div>\r\n                                  \r\n                                  {/* Expand rooms when floor is selected */}\r\n                                  {selectedFloor === floor.number && (\r\n                                    <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-2 p-2 border-t\">\r\n                                      {floor.rooms.map((room) => (\r\n                                        <div \r\n                                          key={room.id}\r\n                                          className={`border rounded p-2 text-right cursor-pointer ${getRoomStatusClass(room.status)}`}\r\n                                          onClick={() => handleRoomSelect(room.room_number)}\r\n                                        >\r\n                                          <div className=\"flex justify-between items-center\">\r\n                                            <span className={`badge badge-xs ${\r\n                                              room.status === 'available' ? 'badge-success' :\r\n                                              room.status === 'occupied' ? 'badge-warning' : 'badge-error'\r\n                                            }`}>\r\n                                              {getStatusLabel(room.status)}\r\n                                            </span>\r\n                                            <span className=\"font-bold\">{room.name}</span>\r\n                                          </div>\r\n                                          <div className=\"text-xs\">{room.room_number}</div>\r\n                                        </div>\r\n                                      ))}\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // 3D-like View\r\n  const render3DView = () => (\r\n    <div className=\"p-4\">\r\n      <div className=\"grid grid-cols-1 gap-8\">\r\n        {complexes.map((complex, index) => (\r\n          <div key={complex.id} className=\"perspective\">\r\n            <div\r\n              className={`relative p-4 transform-style-3d cursor-pointer ${\r\n                selectedComplex === complex.id ? 'rotate-x-5' : ''\r\n              }`}\r\n              onClick={() => handleComplexSelect(complex.id)}\r\n            >\r\n              <div className={`${getColor(index, 'complex')} p-6 rounded-lg shadow-xl transform text-white transition-all duration-300`}>\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"badge badge-lg badge-outline\">{complex.buildings && complex.buildings.length || 0} مبنى</span>\r\n                  <h2 className=\"text-xl font-bold text-right\">{complex.name}</h2>\r\n                </div>\r\n                <p className=\"text-right mt-2\">{complex.location}</p>\r\n                {complex.description && <p className=\"text-right text-sm mt-2 opacity-80\">{complex.description}</p>}\r\n              </div>\r\n              \r\n              {/* Buildings */}\r\n              {selectedComplex === complex.id && complex.buildings && Array.isArray(complex.buildings) && complex.buildings.length > 0 && (\r\n                <div className=\"mt-4 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                  {complex.buildings.map((building, bIndex) => (\r\n                    <div \r\n                      key={building.id} \r\n                      className={`transform-style-3d cursor-pointer ${\r\n                        selectedBuilding === building.id ? 'translate-z-12' : 'hover:translate-z-4'\r\n                      }`}\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleBuildingSelect(building.id);\r\n                      }}\r\n                    >\r\n                      <div className={`bg-secondary p-4 rounded-lg shadow-lg transform transition-all duration-300 ${\r\n                        selectedBuilding === building.id ? 'rotate-y-5 shadow-2xl' : ''\r\n                      }`}>\r\n                        <div className=\"flex justify-between items-center text-white\">\r\n                          <span className=\"badge badge-outline\">{building.floors && building.floors.length || 0} طابق</span>\r\n                          <h3 className=\"font-bold text-right\">{building.name}</h3>\r\n                        </div>\r\n                      </div>\r\n                      \r\n                      {/* Floors Stack */}\r\n                      {selectedBuilding === building.id && building.floors && Array.isArray(building.floors) && building.floors.length > 0 && (\r\n                        <div className=\"mt-4 relative pt-4 pb-4 perspective-600\">\r\n                          {building.floors\r\n                            .sort((a, b) => b.number - a.number)\r\n                            .map((floor, fIndex) => {\r\n                              // Calculate offset for 3D stack effect\r\n                              const offset = fIndex * 8;\r\n                              return (\r\n                                <div\r\n                                  key={floor.id}\r\n                                  style={{\r\n                                    marginTop: `-${offset}px`,\r\n                                    marginBottom: `${offset}px`,\r\n                                    zIndex: building.floors.length - fIndex,\r\n                                    transform: `translateZ(${fIndex * -5}px)`,\r\n                                  }}\r\n                                  className={`relative bg-accent p-3 rounded-lg shadow ${\r\n                                    selectedFloor === floor.number ? 'translate-y-[-10px] shadow-lg' : ''\r\n                                  } mb-2 cursor-pointer transition-all hover:translate-y-[-5px]`}\r\n                                  onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    handleFloorSelect(floor.number);\r\n                                  }}\r\n                                >\r\n                                  <div className=\"flex justify-between items-center text-white\">\r\n                                    <div className=\"flex gap-2\">\r\n                                      <span className=\"badge badge-xs badge-outline\">{floor.rooms && floor.rooms.length || 0} غرفة</span>\r\n                                      <span className=\"badge badge-xs badge-outline\">{floor.services && floor.services.length || 0} خدمة</span>\r\n                                    </div>\r\n                                    <span className=\"font-bold\">الطابق {floor.number}</span>\r\n                                  </div>\r\n                                </div>\r\n                              );\r\n                            })}\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {/* Floor Details */}\r\n                      {selectedFloor !== null && selectedBuilding === building.id && currentFloor && (\r\n                        <div className=\"mt-4 bg-base-200 rounded-lg p-4 shadow-inner\">\r\n                          <h4 className=\"text-right font-bold mb-2\">محتويات الطابق {selectedFloor}</h4>\r\n                          <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-2\">\r\n                            {currentFloor.rooms && currentFloor.rooms.length > 0 && currentFloor.rooms.map((room) => (\r\n                              <div\r\n                                key={room.id}\r\n                                className={`text-right p-2 rounded ${getRoomStatusClass(room.status)} cursor-pointer`}\r\n                                onClick={(e) => {\r\n                                  e.stopPropagation();\r\n                                  handleRoomSelect(room.room_number);\r\n                                }}\r\n                              >\r\n                                <div className=\"flex justify-between\">\r\n                                  <span className={`badge badge-xs ${\r\n                                    room.status === 'available' ? 'badge-success' :\r\n                                    room.status === 'occupied' ? 'badge-warning' : 'badge-error'\r\n                                  }`}></span>\r\n                                  <span className=\"font-bold\">{room.name}</span>\r\n                                </div>\r\n                                <span className=\"text-xs block\">{room.room_number}</span>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // CSS classes for the 3D effect\r\n  const styleElement = (\r\n    <style jsx global>{`\r\n      .perspective {\r\n        perspective: 2000px;\r\n      }\r\n      .perspective-600 {\r\n        perspective: 600px;\r\n      }\r\n      .transform-style-3d {\r\n        transform-style: preserve-3d;\r\n      }\r\n      .rotate-x-5 {\r\n        transform: rotateX(5deg);\r\n      }\r\n      .rotate-y-5 {\r\n        transform: rotateY(5deg);\r\n      }\r\n      .translate-z-4 {\r\n        transform: translateZ(4px);\r\n      }\r\n      .translate-z-12 {\r\n        transform: translateZ(12px);\r\n      }\r\n    `}</style>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {styleElement}\r\n      <div className=\"container mx-auto\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <div className=\"flex gap-2\">\r\n            <button \r\n              className={`btn btn-sm ${activeView === 'card' ? 'btn-primary' : 'btn-ghost'}`} \r\n              onClick={() => setActiveView('card')}\r\n            >\r\n              عرض البطاقات\r\n            </button>\r\n            <button \r\n              className={`btn btn-sm ${activeView === 'tree' ? 'btn-primary' : 'btn-ghost'}`} \r\n              onClick={() => setActiveView('tree')}\r\n            >\r\n              عرض شجري\r\n            </button>\r\n            <button \r\n              className={`btn btn-sm ${activeView === '3d' ? 'btn-primary' : 'btn-ghost'}`} \r\n              onClick={() => setActiveView('3d')}\r\n            >\r\n              عرض ثلاثي الأبعاد\r\n            </button>\r\n          </div>\r\n          <div className=\"text-right\">\r\n            <h1 className=\"text-2xl font-bold\">هيكل الإسكان</h1>\r\n            <p className=\"text-sm opacity-70\">عرض المجمعات والمباني والطوابق والغرف</p>\r\n          </div>\r\n        </div>\r\n\r\n        {complexes.length === 0 ? (\r\n          <div className=\"text-center p-12 bg-base-200 rounded-lg\">\r\n            <h2 className=\"text-xl font-bold\">لا توجد مجمعات سكنية حالياً</h2>\r\n            <p className=\"text-sm mt-2\">قم بإضافة مجمعات سكنية للبدء</p>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {activeView === 'card' && renderCardView()}\r\n            {activeView === 'tree' && renderTreeView()}\r\n            {activeView === '3d' && render3DView()}\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1968, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/app/housing/management/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  ResidentialComplex,\r\n  Building,\r\n  Floor,\r\n  Room,\r\n  Service\r\n} from '@/models/types';\r\nimport * as ComplexManager from '@/lib/services/complexManagementService';\r\nimport HousingVisualization from '@/components/HousingVisualization';\r\n\r\nexport default function HousingManagementPage() {\r\n  const [complexes, setComplexes] = useState<ResidentialComplex[]>([]);\r\n  const [selectedComplex, setSelectedComplex] = useState<string | null>(null);\r\n  const [selectedBuilding, setSelectedBuilding] = useState<string | null>(null);\r\n  const [selectedFloor, setSelectedFloor] = useState<number | null>(null);\r\n  const [selectedRoom, setSelectedRoom] = useState<string | null>(null);\r\n  const [isAddingComplex, setIsAddingComplex] = useState(false);\r\n  const [isAddingBuilding, setIsAddingBuilding] = useState(false);\r\n  const [isAddingFloor, setIsAddingFloor] = useState(false);\r\n  const [isAddingRoom, setIsAddingRoom] = useState(false);\r\n  const [isAddingService, setIsAddingService] = useState(false);\r\n  const [newComplex, setNewComplex] = useState({ name: '', location: '', description: '' });\r\n  const [newBuilding, setNewBuilding] = useState({ name: '', address: '', description: '' });\r\n  const [newFloor, setNewFloor] = useState({ number: 1 });\r\n  const [newRoom, setNewRoom] = useState<{\r\n    name: string;\r\n    room_number: string;\r\n    type: string;\r\n    status: 'available' | 'occupied' | 'maintenance';\r\n    area: number;\r\n    hasBalcony: boolean;\r\n  }>({ \r\n    name: '', \r\n    room_number: '', \r\n    type: 'bedroom', \r\n    status: 'available', \r\n    area: 0, \r\n    hasBalcony: false \r\n  });\r\n  const [newService, setNewService] = useState({ name: '', type: '', location: '', description: '' });\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [serviceTarget, setServiceTarget] = useState<'floor' | 'room'>('floor');\r\n  const [viewMode, setViewMode] = useState<'list' | 'visual'>('visual');\r\n\r\n  useEffect(() => {\r\n    const loadComplexes = async () => {\r\n      try {\r\n        const loadedComplexes = await ComplexManager.getAllComplexes();\r\n        setComplexes(loadedComplexes);\r\n        if (loadedComplexes.length > 0) {\r\n          setSelectedComplex(loadedComplexes[0].id);\r\n        }\r\n      } catch (error) {\r\n        setError('فشل في تحميل المجمعات السكنية. يرجى تحديث الصفحة والمحاولة مرة أخرى.');\r\n        console.error('Error loading complexes:', error);\r\n      }\r\n    };\r\n    \r\n    loadComplexes();\r\n  }, []);\r\n\r\n  // اختيار أول مبنى في المجمع المحدد\r\n  useEffect(() => {\r\n    if (selectedComplex) {\r\n      const complex = complexes.find(c => c.id === selectedComplex);\r\n      if (complex && complex.buildings.length > 0) {\r\n        setSelectedBuilding(complex.buildings[0].id);\r\n      } else {\r\n        setSelectedBuilding(null);\r\n      }\r\n      // إعادة تعيين الطابق المحدد\r\n      setSelectedFloor(null);\r\n    }\r\n  }, [selectedComplex, complexes]);\r\n\r\n  // اختيار أول طابق في المبنى المحدد\r\n  useEffect(() => {\r\n    if (selectedComplex && selectedBuilding) {\r\n      const complex = complexes.find(c => c.id === selectedComplex);\r\n      if (complex) {\r\n        const building = complex.buildings.find(b => b.id === selectedBuilding);\r\n        if (building && building.floors.length > 0) {\r\n          setSelectedFloor(building.floors[0].number);\r\n        } else {\r\n          setSelectedFloor(null);\r\n        }\r\n      }\r\n      // إعادة تعيين الغرفة المحددة\r\n      setSelectedRoom(null);\r\n    }\r\n  }, [selectedBuilding, selectedComplex, complexes]);\r\n\r\n  // الحصول على المجمع السكني الحالي\r\n  const getCurrentComplex = () => {\r\n    return selectedComplex ? complexes.find(c => c.id === selectedComplex) : undefined;\r\n  };\r\n\r\n  // الحصول على المبنى الحالي\r\n  const getCurrentBuilding = () => {\r\n    const complex = getCurrentComplex();\r\n    return complex && selectedBuilding ? complex.buildings.find(b => b.id === selectedBuilding) : undefined;\r\n  };\r\n\r\n  // الحصول على الطابق الحالي\r\n  const getCurrentFloor = () => {\r\n    const building = getCurrentBuilding();\r\n    return building && selectedFloor !== null ? building.floors.find(f => f.number === selectedFloor) : undefined;\r\n  };\r\n\r\n  // معالجة إضافة مجمع سكني جديد\r\n  const handleAddComplex = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!newComplex.name || !newComplex.location) {\r\n      setError('يرجى إدخال اسم وموقع المجمع السكني');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const createdComplex = await ComplexManager.createComplex(newComplex);\r\n      setComplexes([...complexes, createdComplex]);\r\n      setSelectedComplex(createdComplex.id);\r\n      setNewComplex({ name: '', location: '', description: '' });\r\n      setIsAddingComplex(false);\r\n    } catch (err: any) {\r\n      setError(`فشل في إضافة المجمع السكني: ${err.message || 'خطأ غير معروف'}`);\r\n    }\r\n  };\r\n\r\n  // معالجة إضافة مبنى جديد\r\n  const handleAddBuilding = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!selectedComplex || !newBuilding.name) {\r\n      setError('يرجى تحديد مجمع سكني وإدخال اسم المبنى');\r\n      return;\r\n    }\r\n    try {\r\n      const createdBuilding = await ComplexManager.addBuildingToComplex(selectedComplex, newBuilding);\r\n      if (createdBuilding) {\r\n        // تحديث حالة المجمعات\r\n        setComplexes(prevComplexes =>\r\n          prevComplexes.map(complex =>\r\n            complex.id === selectedComplex\r\n              ? { ...complex, buildings: [...complex.buildings, createdBuilding] }\r\n              : complex\r\n          )\r\n        );\r\n        setSelectedBuilding(createdBuilding.id);\r\n        setNewBuilding({ name: '', address: '', description: '' });\r\n        setIsAddingBuilding(false);\r\n      } else {\r\n        setError('فشل في إضافة المبنى، يرجى التحقق من البيانات');\r\n      }\r\n    } catch (err: any) {\r\n      setError(`فشل في إضافة المبنى: ${err.message || 'خطأ غير معروف'}`);\r\n    }\r\n  };\r\n\r\n  // معالجة إضافة طابق جديد\r\n  const handleAddFloor = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!selectedComplex || !selectedBuilding || newFloor.number <= 0) {\r\n      setError('يرجى تحديد مجمع سكني ومبنى وإدخال رقم طابق صحيح');\r\n      return;\r\n    }\r\n    try {\r\n      const createdFloor = await ComplexManager.addFloorToBuilding(selectedComplex, selectedBuilding, newFloor.number);\r\n      if (createdFloor) {\r\n        // تحديث حالة المجمعات\r\n        setComplexes(prevComplexes =>\r\n          prevComplexes.map(complex =>\r\n            complex.id === selectedComplex\r\n              ? {\r\n                  ...complex,\r\n                  buildings: complex.buildings.map(building =>\r\n                    building.id === selectedBuilding\r\n                      ? {\r\n                          ...building,\r\n                          floors: [...building.floors, createdFloor].sort((a, b) => a.number - b.number),\r\n                          floors_count: building.floors.length + 1\r\n                        }\r\n                      : building\r\n                  )\r\n                }\r\n              : complex\r\n          )\r\n        );\r\n        setSelectedFloor(createdFloor.number);\r\n        setNewFloor({ number: Math.max(1, createdFloor.number + 1) });\r\n        setIsAddingFloor(false);\r\n      } else {\r\n        setError('فشل في إضافة الطابق، يرجى التحقق من البيانات أو التأكد من عدم وجود طابق بنفس الرقم');\r\n      }\r\n    } catch (err: any) {\r\n      setError(`فشل في إضافة الطابق: ${err.message || 'خطأ غير معروف'}`);\r\n    }\r\n  };\r\n\r\n  // معالجة إضافة غرفة جديدة\r\n  const handleAddRoom = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!selectedComplex || !selectedBuilding || selectedFloor === null || !newRoom.name || !newRoom.room_number) {\r\n      setError('يرجى تحديد مجمع سكني ومبنى وطابق وإدخال اسم ورقم الغرفة');\r\n      return;\r\n    }\r\n    try {\r\n      const createdRoom = await ComplexManager.addRoomToFloor(\r\n        selectedComplex,\r\n        selectedBuilding,\r\n        selectedFloor,\r\n        newRoom\r\n      );\r\n      if (createdRoom) {\r\n        // تحديث حالة المجمعات\r\n        setComplexes(prevComplexes =>\r\n          prevComplexes.map(complex =>\r\n            complex.id === selectedComplex\r\n              ? {\r\n                  ...complex,\r\n                  buildings: complex.buildings.map(building =>\r\n                    building.id === selectedBuilding\r\n                      ? {\r\n                          ...building,\r\n                          floors: building.floors.map(floor =>\r\n                            floor.number === selectedFloor\r\n                              ? { ...floor, rooms: [...floor.rooms, createdRoom] }\r\n                              : floor\r\n                          )\r\n                        }\r\n                      : building\r\n                  )\r\n                }\r\n              : complex\r\n          )\r\n        );\r\n        setNewRoom({\r\n          name: '',\r\n          room_number: '',\r\n          type: 'bedroom',\r\n          status: 'available',\r\n          area: 0,\r\n          hasBalcony: false\r\n        });\r\n        setIsAddingRoom(false);\r\n      } else {\r\n        setError('فشل في إضافة الغرفة، يرجى التحقق من البيانات أو التأكد من عدم وجود غرفة بنفس الرقم');\r\n      }\r\n    } catch (err: any) {\r\n      setError(`فشل في إضافة الغرفة: ${err.message || 'خطأ غير معروف'}`);\r\n    }\r\n  };\r\n\r\n  // معالجة إضافة خدمة جديدة\r\n  const handleAddService = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!selectedComplex || !selectedBuilding || selectedFloor === null || !newService.name || !newService.type) {\r\n      setError('يرجى تحديد مجمع سكني ومبنى وطابق وإدخال اسم ونوع الخدمة');\r\n      return;\r\n    }\r\n    try {\r\n      let createdService;\r\n      if (serviceTarget === 'floor') {\r\n        createdService = await ComplexManager.addServiceToFloor(\r\n          selectedComplex,\r\n          selectedBuilding,\r\n          selectedFloor,\r\n          newService\r\n        );\r\n        if (createdService) {\r\n          // تحديث حالة المجمعات - إضافة خدمة للطابق\r\n          setComplexes(prevComplexes =>\r\n            prevComplexes.map(complex =>\r\n              complex.id === selectedComplex\r\n                ? {\r\n                    ...complex,\r\n                    buildings: complex.buildings.map(building =>\r\n                      building.id === selectedBuilding\r\n                        ? {\r\n                            ...building,\r\n                            floors: building.floors.map(floor =>\r\n                              floor.number === selectedFloor\r\n                                ? { ...floor, services: [...floor.services, createdService!] }\r\n                                : floor\r\n                            )\r\n                          }\r\n                        : building\r\n                    )\r\n                  }\r\n                : complex\r\n            )\r\n          );\r\n        }\r\n      } else if (serviceTarget === 'room' && selectedRoom) {\r\n        createdService = await ComplexManager.addServiceToRoom(\r\n          selectedComplex,\r\n          selectedBuilding,\r\n          selectedFloor,\r\n          selectedRoom,\r\n          newService\r\n        );\r\n        if (createdService) {\r\n          // تحديث حالة المجمعات - إضافة خدمة للغرفة\r\n          setComplexes(prevComplexes =>\r\n            prevComplexes.map(complex =>\r\n              complex.id === selectedComplex\r\n                ? {\r\n                    ...complex,\r\n                    buildings: complex.buildings.map(building =>\r\n                      building.id === selectedBuilding\r\n                        ? {\r\n                            ...building,\r\n                            floors: building.floors.map(floor =>\r\n                              floor.number === selectedFloor\r\n                                ? {\r\n                                    ...floor,\r\n                                    rooms: floor.rooms.map(room =>\r\n                                      room.room_number === selectedRoom\r\n                                        ? {\r\n                                            ...room,\r\n                                            services: [...(room.services || []), createdService!]\r\n                                          }\r\n                                        : room\r\n                                    )\r\n                                  }\r\n                                : floor\r\n                            )\r\n                          }\r\n                        : building\r\n                    )\r\n                  }\r\n                : complex\r\n            )\r\n          );\r\n        }\r\n      } else {\r\n        setError('يرجى تحديد الغرفة لإضافة الخدمة إليها');\r\n        return;\r\n      }\r\n      if (createdService) {\r\n        setNewService({ name: '', type: '', location: '', description: '' });\r\n        setIsAddingService(false);\r\n      } else {\r\n        setError('فشل في إضافة الخدمة، يرجى التحقق من البيانات');\r\n      }\r\n    } catch (err: any) {\r\n      setError(`فشل في إضافة الخدمة: ${err.message || 'خطأ غير معروف'}`);\r\n    }\r\n  };\r\n\r\n  const handleDismissError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  // ترجمة حالة الغرفة\r\n  const getRoomStatusLabel = (status: string) => {\r\n    switch(status) {\r\n      case 'available': return 'متاحة';\r\n      case 'occupied': return 'مشغولة';\r\n      case 'maintenance': return 'صيانة';\r\n      default: return status;\r\n    }\r\n  };\r\n\r\n  // عرض المجمعات والمباني والطوابق\r\n  const renderManagementInterface = () => {\r\n    return (\r\n      <div className=\"mt-4\">\r\n        <div className=\"flex space-x-4 justify-end mb-4\">\r\n          <button\r\n            className={`btn btn-sm ${viewMode === 'visual' ? 'btn-primary' : 'btn-outline'}`}\r\n            onClick={() => setViewMode('visual')}\r\n          >\r\n            عرض بصري\r\n          </button>\r\n          <button\r\n            className={`btn btn-sm ${viewMode === 'list' ? 'btn-primary' : 'btn-outline'}`}\r\n            onClick={() => setViewMode('list')}\r\n          >\r\n            قائمة تفصيلية\r\n          </button>\r\n        </div>\r\n        \r\n        {viewMode === 'visual' ? (\r\n          <div className=\"bg-base-100 p-4 rounded-lg shadow\">\r\n            <HousingVisualization \r\n              complexes={complexes}\r\n              onSelectComplex={setSelectedComplex}\r\n              onSelectBuilding={setSelectedBuilding}\r\n              onSelectFloor={setSelectedFloor}\r\n              onSelectRoom={setSelectedRoom}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 gap-4\">\r\n            {/* المجمعات السكنية */}\r\n            <div className=\"card shadow-lg\">\r\n              <div className=\"card-body\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <button\r\n                    className=\"btn btn-sm btn-primary\"\r\n                    onClick={() => setIsAddingComplex(true)}\r\n                  >\r\n                    إضافة مجمع جديد\r\n                  </button>\r\n                  <h2 className=\"card-title text-right\">المجمعات السكنية</h2>\r\n                </div>\r\n                <div className=\"overflow-x-auto\">\r\n                  <select\r\n                    className=\"select select-bordered w-full\"\r\n                    value={selectedComplex || ''}\r\n                    onChange={(e) => setSelectedComplex(e.target.value)}\r\n                  >\r\n                    <option value=\"\" disabled>اختر مجمع سكني</option>\r\n                    {complexes.map(complex => (\r\n                      <option key={complex.id} value={complex.id}>{complex.name} - {complex.location}</option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                {isAddingComplex && (\r\n                  <div className=\"card bg-base-200 mt-4\">\r\n                    <div className=\"card-body\">\r\n                      <h3 className=\"card-title text-right\">إضافة مجمع سكني جديد</h3>\r\n                      <form onSubmit={handleAddComplex} className=\"text-right\">\r\n                        <div className=\"form-control\">\r\n                          <label className=\"label\">\r\n                            <span className=\"label-text text-right\">اسم المجمع</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"input input-bordered\"\r\n                            value={newComplex.name}\r\n                            onChange={(e) => setNewComplex({ ...newComplex, name: e.target.value })}\r\n                            required\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-control\">\r\n                          <label className=\"label\">\r\n                            <span className=\"label-text text-right\">الموقع</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"input input-bordered\"\r\n                            value={newComplex.location}\r\n                            onChange={(e) => setNewComplex({ ...newComplex, location: e.target.value })}\r\n                            required\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-control\">\r\n                          <label className=\"label\">\r\n                            <span className=\"label-text text-right\">الوصف (اختياري)</span>\r\n                          </label>\r\n                          <textarea\r\n                            className=\"textarea textarea-bordered\"\r\n                            value={newComplex.description}\r\n                            onChange={(e) => setNewComplex({ ...newComplex, description: e.target.value })}\r\n                          ></textarea>\r\n                        </div>\r\n                        <div className=\"form-control mt-4 flex flex-row justify-between\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn\"\r\n                            onClick={() => setIsAddingComplex(false)}\r\n                          >\r\n                            إلغاء\r\n                          </button>\r\n                          <button type=\"submit\" className=\"btn btn-primary\">\r\n                            إضافة\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* المباني */}\r\n            {selectedComplex && (\r\n              <div className=\"card shadow-lg\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <button\r\n                      className=\"btn btn-sm btn-primary\"\r\n                      onClick={() => setIsAddingBuilding(true)}\r\n                    >\r\n                      إضافة مبنى جديد\r\n                    </button>\r\n                    <h2 className=\"card-title text-right\">المباني</h2>\r\n                  </div>\r\n                  <div className=\"overflow-x-auto\">\r\n                    <select\r\n                      className=\"select select-bordered w-full\"\r\n                      value={selectedBuilding || ''}\r\n                      onChange={(e) => setSelectedBuilding(e.target.value)}\r\n                      disabled={!selectedComplex || getCurrentComplex()?.buildings.length === 0}\r\n                    >\r\n                      {!selectedComplex || !getCurrentComplex()?.buildings?.length ? (\r\n                        <option key=\"no-buildings\" disabled value=\"\">لا توجد مباني</option>\r\n                      ) : (\r\n                        getCurrentComplex()?.buildings.map(building => (\r\n                          <option key={building.id} value={building.id}>{building.name}</option>\r\n                        ))\r\n                      )}\r\n                    </select>\r\n                  </div>\r\n                  {isAddingBuilding && (\r\n                    <div className=\"card bg-base-200 mt-4\">\r\n                      <div className=\"card-body\">\r\n                        <h3 className=\"card-title text-right\">إضافة مبنى جديد</h3>\r\n                        <form onSubmit={handleAddBuilding} className=\"text-right\">\r\n                          <div className=\"form-control\">\r\n                            <label className=\"label\">\r\n                              <span className=\"label-text text-right\">اسم المبنى</span>\r\n                            </label>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"input input-bordered\"\r\n                              value={newBuilding.name}\r\n                              onChange={(e) => setNewBuilding({ ...newBuilding, name: e.target.value })}\r\n                              required\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-control\">\r\n                            <label className=\"label\">\r\n                              <span className=\"label-text text-right\">العنوان (اختياري)</span>\r\n                            </label>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"input input-bordered\"\r\n                              value={newBuilding.address}\r\n                              onChange={(e) => setNewBuilding({ ...newBuilding, address: e.target.value })}\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-control\">\r\n                            <label className=\"label\">\r\n                              <span className=\"label-text text-right\">الوصف (اختياري)</span>\r\n                            </label>\r\n                            <textarea\r\n                              className=\"textarea textarea-bordered\"\r\n                              value={newBuilding.description}\r\n                              onChange={(e) => setNewBuilding({ ...newBuilding, description: e.target.value })}\r\n                            ></textarea>\r\n                          </div>\r\n                          <div className=\"form-control mt-4 flex flex-row justify-between\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn\"\r\n                              onClick={() => setIsAddingBuilding(false)}\r\n                            >\r\n                              إلغاء\r\n                            </button>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                              إضافة\r\n                            </button>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* الطوابق */}\r\n            {selectedBuilding && (\r\n              <div className=\"card shadow-lg\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <button\r\n                      className=\"btn btn-sm btn-primary\"\r\n                      onClick={() => setIsAddingFloor(true)}\r\n                    >\r\n                      إضافة طابق جديد\r\n                    </button>\r\n                    <h2 className=\"card-title text-right\">الطوابق</h2>\r\n                  </div>\r\n                  <div className=\"overflow-x-auto\">\r\n                    <select\r\n                      className=\"select select-bordered w-full\"\r\n                      value={selectedFloor !== null ? selectedFloor.toString() : ''}\r\n                      onChange={e => setSelectedFloor(parseInt(e.target.value))}\r\n                      disabled={!selectedBuilding || getCurrentBuilding()?.floors.length === 0}\r\n                    >\r\n                      {!selectedBuilding || !getCurrentBuilding()?.floors?.length ? (\r\n                        <option key=\"no-floors\" disabled value=\"\">لا توجد طوابق</option>\r\n                      ) : (\r\n                        getCurrentBuilding()?.floors.map(floor => (\r\n                          <option key={`${selectedBuilding}-floor-${floor.number}`} value={floor.number.toString()}>\r\n                            الطابق {floor.number}\r\n                          </option>\r\n                        ))\r\n                      )}\r\n                    </select>\r\n                  </div>\r\n                  {isAddingFloor && (\r\n                    <div className=\"card bg-base-200 mt-4\">\r\n                      <div className=\"card-body\">\r\n                        <h3 className=\"card-title text-right\">إضافة طابق جديد</h3>\r\n                        <form onSubmit={handleAddFloor} className=\"text-right\">\r\n                          <div className=\"form-control\">\r\n                            <label className=\"label\">\r\n                              <span className=\"label-text text-right\">رقم الطابق</span>\r\n                            </label>\r\n                            <input\r\n                              type=\"number\"\r\n                              className=\"input input-bordered\"\r\n                              value={newFloor.number}\r\n                              onChange={(e) => setNewFloor({ ...newFloor, number: parseInt(e.target.value) })}\r\n                              min=\"1\"\r\n                              required\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-control mt-4 flex flex-row justify-between\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn\"\r\n                              onClick={() => setIsAddingFloor(false)}\r\n                            >\r\n                              إلغاء\r\n                            </button>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                              إضافة\r\n                            </button>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* الغرف */}\r\n            {selectedFloor !== null && getCurrentFloor() && (\r\n              <div className=\"card shadow-lg\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <div className=\"space-x-2\">\r\n                      <button\r\n                        className=\"btn btn-sm btn-primary\"\r\n                        onClick={() => setIsAddingRoom(true)}\r\n                      >\r\n                        إضافة غرفة\r\n                      </button>\r\n                      <button\r\n                        className=\"btn btn-sm btn-secondary\"\r\n                        onClick={() => {\r\n                          setServiceTarget('floor');\r\n                          setIsAddingService(true);\r\n                        }}\r\n                      >\r\n                        إضافة خدمة للطابق\r\n                      </button>\r\n                    </div>\r\n                    <h2 className=\"card-title text-right\">الغرف في الطابق {selectedFloor}</h2>\r\n                  </div>\r\n\r\n                  {getCurrentFloor()?.rooms.length === 0 ? (\r\n                    <div className=\"alert\">\r\n                      <span>لا توجد غرف في هذا الطابق</span>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"overflow-x-auto\">\r\n                      <table className=\"table table-compact w-full\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th className=\"text-right\">الاسم</th>\r\n                            <th className=\"text-right\">رقم الغرفة</th>\r\n                            <th className=\"text-right\">النوع</th>\r\n                            <th className=\"text-right\">الحالة</th>\r\n                            <th className=\"text-right\">المساحة</th>\r\n                            <th className=\"text-right\">له شرفة</th>\r\n                            <th className=\"text-right\">الخدمات</th>\r\n                            <th className=\"text-right\">إجراءات</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {getCurrentFloor()?.rooms.map((room, index) => (\r\n                            <tr key={`${selectedBuilding}-${selectedFloor}-room-${room.room_number}-${index}`}>\r\n                              <td className=\"text-right\">{room.name}</td>\r\n                              <td className=\"text-right\">{room.room_number}</td>\r\n                              <td className=\"text-right\">{room.type}</td>\r\n                              <td className=\"text-right\">{getRoomStatusLabel(room.status)}</td>\r\n                              <td className=\"text-right\">{room.area ? `${room.area} م²` : '-'}</td>\r\n                              <td className=\"text-right\">{room.hasBalcony ? 'نعم' : 'لا'}</td>\r\n                              <td className=\"text-right\">{room.services?.length || 0} خدمة</td>\r\n                              <td>\r\n                                <button\r\n                                  className=\"btn btn-xs btn-outline\"\r\n                                  onClick={() => {\r\n                                    setSelectedRoom(room.room_number);\r\n                                    setServiceTarget('room');\r\n                                    setIsAddingService(true);\r\n                                  }}\r\n                                >\r\n                                  إضافة خدمة\r\n                                </button>\r\n                              </td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Shared Services in the floor */}\r\n                  {(() => {\r\n                    const currentFloor = getCurrentFloor();\r\n                    return currentFloor && Array.isArray(currentFloor.services) && currentFloor.services.length > 0 && (\r\n                      <div className=\"mt-6\">\r\n                        <h3 className=\"text-xl font-bold text-right\">الخدمات المشتركة في الطابق</h3>\r\n                        <div className=\"overflow-x-auto mt-2\">\r\n                          <table className=\"table table-compact w-full\">\r\n                            <thead>\r\n                              <tr>\r\n                                <th className=\"text-right\">الاسم</th>\r\n                                <th className=\"text-right\">النوع</th>\r\n                                <th className=\"text-right\">الموقع</th>\r\n                                <th className=\"text-right\">الوصف</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {currentFloor.services.map(service => (\r\n                                <tr key={service.id} className=\"hover\">\r\n                                  <td className=\"text-right\">{service.name}</td>\r\n                                  <td className=\"text-right\">{service.type}</td>\r\n                                  <td className=\"text-right\">{service.location}</td>\r\n                                  <td className=\"text-right\">{service.description}</td>\r\n                                </tr>\r\n                              ))}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })()}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Add Room Form */}\r\n            {isAddingRoom && (\r\n              <div className=\"card bg-base-200 mt-4\">\r\n                <div className=\"card-body\">\r\n                  <h3 className=\"card-title text-right\">إضافة غرفة جديدة</h3>\r\n                  <form onSubmit={handleAddRoom} className=\"text-right\">\r\n                    <div className=\"flex flex-wrap -mx-2\">\r\n                      <div className=\"px-2 w-full md:w-1/2\">\r\n                        <div className=\"form-control\">\r\n                          <label className=\"label\">\r\n                            <span className=\"label-text text-right\">اسم الغرفة</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"input input-bordered\"\r\n                            value={newRoom.name}\r\n                            onChange={(e) => setNewRoom({ ...newRoom, name: e.target.value })}\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"px-2 w-full md:w-1/2\">\r\n                        <div className=\"form-control\">\r\n                          <label className=\"label\">\r\n                            <span className=\"label-text text-right\">رقم الغرفة</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"input input-bordered\"\r\n                            value={newRoom.room_number}\r\n                            onChange={(e) => setNewRoom({ ...newRoom, room_number: e.target.value })}\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"px-2 w-full md:w-1/2\">\r\n                        <div className=\"form-control\">\r\n                          <label className=\"label\">\r\n                            <span className=\"label-text text-right\">نوع الغرفة</span>\r\n                          </label>\r\n                          <select\r\n                            className=\"select select-bordered\"\r\n                            value={newRoom.type}\r\n                            onChange={(e) => setNewRoom({ ...newRoom, type: e.target.value })}\r\n                          >\r\n                            <option value=\"bedroom\">غرفة نوم</option>\r\n                            <option value=\"bathroom\">حمام</option>\r\n                            <option value=\"kitchen\">مطبخ</option>\r\n                            <option value=\"living\">صالة معيشة</option>\r\n                            <option value=\"office\">مكتب</option>\r\n                            <option value=\"other\">أخرى</option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"px-2 w-full md:w-1/2\">\r\n                        <div className=\"form-control\">\r\n                          <label className=\"label\">\r\n                            <span className=\"label-text text-right\">حالة الغرفة</span>\r\n                          </label>\r\n                          <select\r\n                            className=\"select select-bordered\"\r\n                            value={newRoom.status}\r\n                            onChange={(e) => setNewRoom({\r\n                              ...newRoom,\r\n                              status: e.target.value as 'available' | 'occupied' | 'maintenance'\r\n                            })}\r\n                          >\r\n                            <option value=\"available\">متاحة</option>\r\n                            <option value=\"occupied\">مشغولة</option>\r\n                            <option value=\"maintenance\">صيانة</option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"px-2 w-full md:w-1/2\">\r\n                        <div className=\"form-control\">\r\n                          <label className=\"label\">\r\n                            <span className=\"label-text text-right\">المساحة (م²)</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"number\"\r\n                            className=\"input input-bordered\"\r\n                            value={newRoom.area === 0 ? '' : newRoom.area}\r\n                            onChange={(e) => setNewRoom({ ...newRoom, area: parseFloat(e.target.value) || 0 })}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"px-2 w-full md:w-1/2\">\r\n                        <div className=\"form-control mt-4\">\r\n                          <label className=\"cursor-pointer label justify-end\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"toggle toggle-primary ml-4\"\r\n                              checked={newRoom.hasBalcony}\r\n                              onChange={(e) => setNewRoom({ ...newRoom, hasBalcony: e.target.checked })}\r\n                            />\r\n                            <span className=\"label-text text-right\">تحتوي على شرفة</span>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-control mt-4 flex flex-row justify-between\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn\"\r\n                        onClick={() => setIsAddingRoom(false)}\r\n                      >\r\n                        إلغاء\r\n                      </button>\r\n                      <button type=\"submit\" className=\"btn btn-primary\">\r\n                        إضافة\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Add Service Form */}\r\n            {isAddingService && (\r\n              <div className=\"card bg-base-200 mt-4\">\r\n                <div className=\"card-body\">\r\n                  <h3 className=\"card-title text-right\">\r\n                    إضافة خدمة جديدة {serviceTarget === 'floor' ? 'للطابق' : `للغرفة ${selectedRoom}`}\r\n                  </h3>\r\n                  <form onSubmit={handleAddService} className=\"text-right\">\r\n                    <div className=\"flex flex-wrap -mx-2\">\r\n                      <div className=\"px-2 w-full md:w-1/2\">\r\n                        <div className=\"form-control\">\r\n                          <label className=\"label\">\r\n                            <span className=\"label-text text-right\">اسم الخدمة</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"input input-bordered\"\r\n                            value={newService.name}\r\n                            onChange={(e) => setNewService({ ...newService, name: e.target.value })}\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"px-2 w-full md:w-1/2\">\r\n                        <div className=\"form-control\">\r\n                          <label className=\"label\">\r\n                            <span className=\"label-text text-right\">نوع الخدمة</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"input input-bordered\"\r\n                            value={newService.type}\r\n                            onChange={(e) => setNewService({ ...newService, type: e.target.value })}\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"px-2 w-full\">\r\n                        <div className=\"form-control\">\r\n                          <label className=\"label\">\r\n                            <span className=\"label-text text-right\">الموقع</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"input input-bordered\"\r\n                            value={newService.location}\r\n                            onChange={(e) => setNewService({ ...newService, location: e.target.value })}\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"px-2 w-full\">\r\n                        <div className=\"form-control\">\r\n                          <label className=\"label\">\r\n                            <span className=\"label-text text-right\">وصف الخدمة (اختياري)</span>\r\n                          </label>\r\n                          <textarea\r\n                            className=\"textarea textarea-bordered\"\r\n                            value={newService.description}\r\n                            onChange={(e) => setNewService({ ...newService, description: e.target.value })}\r\n                          ></textarea>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-control mt-4 flex flex-row justify-between\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn\"\r\n                        onClick={() => setIsAddingService(false)}\r\n                      >\r\n                        إلغاء\r\n                      </button>\r\n                      <button type=\"submit\" className=\"btn btn-primary\">\r\n                        إضافة\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h1 className=\"text-3xl font-bold text-right mb-6\">إدارة هيكل السكن</h1>\r\n      \r\n      {error && (\r\n        <div className=\"alert alert-error mb-4\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n          </svg>\r\n          <span>{error}</span>\r\n          <button className=\"btn btn-sm\" onClick={handleDismissError}>إغلاق</button>\r\n        </div>\r\n      )}\r\n      \r\n      {renderManagementInterface()}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}