{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\n// Initialize the Supabase client with proper Supabase URL and key\r\nconst supabaseUrl = 'https://mticvmyfrdmciaeipfxu.supabase.co';\r\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im10aWN2bXlmcmRtY2lhZWlwZnh1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDEwODc1OTMsImV4cCI6MjA1NjY2MzU5M30.6iudxBl6js0heW1mhoSmcXegTIN_lAN2GiFeA3plSIo';\r\n\r\n// Create the Supabase client\r\nexport const supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\n// Store PostgreSQL direct connection URL for database initialization scripts\r\nexport const postgresUrl = 'postgresql://HousingMaintenance_owner:npg_fC8S4bpZLsJw@ep-weathered-meadow-a44a1v3i-pooler.us-east-1.aws.neon.tech/HousingMaintenance?sslmode=require';"],"names":[],"mappings":";;;;AAAA;;AAEA,kEAAkE;AAClE,MAAM,cAAc;AACpB,MAAM,cAAc;AAGb,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AAG3C,MAAM,cAAc","debugId":null}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/services/inventoryService.ts"],"sourcesContent":["import { supabase } from '../supabase';\r\nimport { Category, Item, Inventory } from '@/models/types';\r\n\r\n// Category Operations\r\nexport const getCategories = async (): Promise<Category[]> => {\r\n  const { data, error } = await supabase\r\n    .from('categories')\r\n    .select('*');\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};\r\n\r\nexport const getCategoryById = async (id: string): Promise<Category | null> => {\r\n  const { data, error } = await supabase\r\n    .from('categories')\r\n    .select('*')\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const createCategory = async (category: Omit<Category, 'id'>): Promise<Category> => {\r\n  const { data, error } = await supabase\r\n    .from('categories')\r\n    .insert([category])\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updateCategory = async (id: string, updates: Partial<Category>): Promise<Category> => {\r\n  const { data, error } = await supabase\r\n    .from('categories')\r\n    .update(updates)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const deleteCategory = async (id: string): Promise<void> => {\r\n  const { error } = await supabase\r\n    .from('categories')\r\n    .delete()\r\n    .eq('id', id);\r\n  \r\n  if (error) throw error;\r\n};\r\n\r\n// Item Operations\r\nexport const getItems = async (categoryId?: string): Promise<Item[]> => {\r\n  let query = supabase.from('items').select('*');\r\n  \r\n  if (categoryId) {\r\n    query = query.eq('category_id', categoryId);\r\n  }\r\n  \r\n  const { data, error } = await query;\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};\r\n\r\nexport const getItemById = async (id: string): Promise<Item | null> => {\r\n  const { data, error } = await supabase\r\n    .from('items')\r\n    .select('*')\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const createItem = async (item: Omit<Item, 'id'>): Promise<Item> => {\r\n  const { data, error } = await supabase\r\n    .from('items')\r\n    .insert([item])\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updateItem = async (id: string, updates: Partial<Item>): Promise<Item> => {\r\n  const { data, error } = await supabase\r\n    .from('items')\r\n    .update(updates)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const deleteItem = async (id: string): Promise<void> => {\r\n  const { error } = await supabase\r\n    .from('items')\r\n    .delete()\r\n    .eq('id', id);\r\n  \r\n  if (error) throw error;\r\n};\r\n\r\n// Inventory Operations\r\nexport const getInventory = async (itemId?: string): Promise<Inventory[]> => {\r\n  let query = supabase\r\n    .from('inventory')\r\n    .select(`\r\n      *,\r\n      items:item_id (\r\n        id,\r\n        name,\r\n        category_id,\r\n        unit\r\n      )\r\n    `);\r\n  \r\n  if (itemId) {\r\n    query = query.eq('item_id', itemId);\r\n  }\r\n  \r\n  const { data, error } = await query;\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};\r\n\r\nexport const getInventoryItemById = async (id: string): Promise<Inventory | null> => {\r\n  const { data, error } = await supabase\r\n    .from('inventory')\r\n    .select(`\r\n      *,\r\n      items:item_id (\r\n        id,\r\n        name,\r\n        category_id,\r\n        unit\r\n      )\r\n    `)\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updateInventoryQuantity = async (\r\n  itemId: string, \r\n  quantityChange: number\r\n): Promise<Inventory> => {\r\n  // First, get the current inventory item\r\n  const { data: currentInventory, error: fetchError } = await supabase\r\n    .from('inventory')\r\n    .select('*')\r\n    .eq('item_id', itemId)\r\n    .single();\r\n  \r\n  if (fetchError && fetchError.code !== 'PGRST116') {\r\n    // PGRST116 is the error code for \"no rows returned\"\r\n    throw fetchError;\r\n  }\r\n  \r\n  // If inventory item exists, update it\r\n  if (currentInventory) {\r\n    const newQuantity = currentInventory.quantity + quantityChange;\r\n    \r\n    if (newQuantity < 0) {\r\n      throw new Error('Insufficient inventory quantity');\r\n    }\r\n    \r\n    const { data, error } = await supabase\r\n      .from('inventory')\r\n      .update({\r\n        quantity: newQuantity,\r\n        last_updated: new Date().toISOString()\r\n      })\r\n      .eq('id', currentInventory.id)\r\n      .select()\r\n      .single();\r\n    \r\n    if (error) throw error;\r\n    return data;\r\n  } \r\n  // If inventory item does not exist, create it (only if adding quantity)\r\n  else if (quantityChange > 0) {\r\n    const { data, error } = await supabase\r\n      .from('inventory')\r\n      .insert([{\r\n        item_id: itemId,\r\n        quantity: quantityChange,\r\n        last_updated: new Date().toISOString()\r\n      }])\r\n      .select()\r\n      .single();\r\n    \r\n    if (error) throw error;\r\n    return data;\r\n  } else {\r\n    throw new Error('Cannot reduce quantity of non-existent inventory item');\r\n  }\r\n};\r\n\r\nexport const updateInventoryItem = async (\r\n  id: string, \r\n  updates: Partial<Inventory>\r\n): Promise<Inventory> => {\r\n  const updateData = {\r\n    ...updates,\r\n    last_updated: new Date().toISOString()\r\n  };\r\n  \r\n  const { data, error } = await supabase\r\n    .from('inventory')\r\n    .update(updateData)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const getLowStockItems = async (threshold: number = 10): Promise<Inventory[]> => {\r\n  const { data, error } = await supabase\r\n    .from('inventory')\r\n    .select(`\r\n      *,\r\n      items:item_id (\r\n        id,\r\n        name,\r\n        category_id,\r\n        unit\r\n      )\r\n    `)\r\n    .lte('quantity', threshold);\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/app/inventory/categories/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { getCategories, createCategory, updateCategory, deleteCategory, getItems } from '@/lib/services/inventoryService';\r\nimport { Category, Item } from '@/models/types';\r\n\r\nexport default function CategoriesPage() {\r\n  const [categories, setCategories] = useState<Category[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState<string | null>(null);\r\n  const [itemCounts, setItemCounts] = useState<Record<string, number>>({});\r\n\r\n  // Form state\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [categoryId, setCategoryId] = useState<string | null>(null);\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  // Load categories\r\n  const loadCategories = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const categoriesData = await getCategories();\r\n      setCategories(categoriesData);\r\n      \r\n      // Get item counts per category\r\n      const counts: Record<string, number> = {};\r\n      for (const category of categoriesData) {\r\n        const items = await getItems(category.id);\r\n        counts[category.id] = items.length;\r\n      }\r\n      setItemCounts(counts);\r\n    } catch (err) {\r\n      console.error('Error fetching categories:', err);\r\n      setError('حدث خطأ أثناء تحميل التصنيفات. الرجاء المحاولة مرة أخرى.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCategories();\r\n  }, []);\r\n\r\n  // Reset form\r\n  const resetForm = () => {\r\n    setIsEditing(false);\r\n    setCategoryId(null);\r\n    setName('');\r\n    setDescription('');\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!name.trim()) {\r\n      setError('اسم التصنيف مطلوب');\r\n      return;\r\n    }\r\n\r\n    setError(null);\r\n    setSuccess(null);\r\n    \r\n    try {\r\n      if (isEditing && categoryId) {\r\n        // Update existing category\r\n        await updateCategory(categoryId, { \r\n          name, \r\n          description: description || undefined \r\n        });\r\n        setSuccess('تم تحديث التصنيف بنجاح');\r\n      } else {\r\n        // Create new category\r\n        await createCategory({ \r\n          name, \r\n          description: description || undefined \r\n        });\r\n        setSuccess('تم إنشاء التصنيف بنجاح');\r\n      }\r\n      \r\n      // Reload categories and reset form\r\n      resetForm();\r\n      await loadCategories();\r\n    } catch (err) {\r\n      console.error('Error saving category:', err);\r\n      setError('حدث خطأ أثناء حفظ التصنيف. الرجاء المحاولة مرة أخرى.');\r\n    }\r\n  };\r\n\r\n  // Edit category\r\n  const handleEdit = (category: Category) => {\r\n    setIsEditing(true);\r\n    setCategoryId(category.id);\r\n    setName(category.name);\r\n    setDescription(category.description || '');\r\n  };\r\n\r\n  // Delete category\r\n  const handleDelete = async (categoryId: string) => {\r\n    if (!confirm('هل أنت متأكد من حذف هذا التصنيف؟ سيتم حذف جميع الأصناف المرتبطة به.')) {\r\n      return;\r\n    }\r\n\r\n    setError(null);\r\n    setSuccess(null);\r\n    \r\n    try {\r\n      await deleteCategory(categoryId);\r\n      setSuccess('تم حذف التصنيف بنجاح');\r\n      resetForm();\r\n      await loadCategories();\r\n    } catch (err) {\r\n      console.error('Error deleting category:', err);\r\n      setError('حدث خطأ أثناء حذف التصنيف. الرجاء المحاولة مرة أخرى.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-bold\">إدارة الأصناف</h1>\r\n        <Link href=\"/inventory\" className=\"btn btn-secondary\">\r\n          العودة للمخزون\r\n        </Link>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"bg-red-100 border-r-4 border-red-500 text-red-700 p-4 mb-6 rounded-md\">\r\n          <p>{error}</p>\r\n        </div>\r\n      )}\r\n\r\n      {success && (\r\n        <div className=\"bg-green-100 border-r-4 border-green-500 text-green-700 p-4 mb-6 rounded-md\">\r\n          <p>{success}</p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n        {/* Category Form */}\r\n        <div className=\"md:col-span-1\">\r\n          <div className=\"bg-white rounded-lg shadow p-6\">\r\n            <h2 className=\"text-lg font-semibold mb-4\">\r\n              {isEditing ? 'تعديل التصنيف' : 'إضافة تصنيف جديد'}\r\n            </h2>\r\n            \r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"mb-4\">\r\n                <label className=\"block mb-2 text-sm font-medium\">اسم التصنيف</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  className=\"input w-full\"\r\n                  required\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"mb-6\">\r\n                <label className=\"block mb-2 text-sm font-medium\">الوصف (اختياري)</label>\r\n                <textarea\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                  className=\"input w-full h-24\"\r\n                  placeholder=\"وصف اختياري للتصنيف...\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"flex justify-between\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  {isEditing ? 'تحديث' : 'إضافة'}\r\n                </button>\r\n                \r\n                {isEditing && (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={resetForm}\r\n                  >\r\n                    إلغاء\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Categories List */}\r\n        <div className=\"md:col-span-2\">\r\n          <div className=\"bg-white rounded-lg shadow overflow-hidden\">\r\n            <div className=\"p-4 bg-gray-50 border-b\">\r\n              <h2 className=\"font-semibold text-lg\">قائمة التصنيفات</h2>\r\n            </div>\r\n            \r\n            {loading ? (\r\n              <div className=\"text-center py-10\">\r\n                <p className=\"text-lg\">جاري تحميل البيانات...</p>\r\n              </div>\r\n            ) : categories.length === 0 ? (\r\n              <div className=\"text-center py-10\">\r\n                <p className=\"text-lg text-gray-500\">لا توجد تصنيفات بعد. قم بإنشاء تصنيف جديد.</p>\r\n              </div>\r\n            ) : (\r\n              <div className=\"overflow-x-auto\">\r\n                <table className=\"min-w-full divide-y divide-gray-200\">\r\n                  <thead className=\"bg-gray-50\">\r\n                    <tr>\r\n                      <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        التصنيف\r\n                      </th>\r\n                      <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        الوصف\r\n                      </th>\r\n                      <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        عدد الأصناف\r\n                      </th>\r\n                      <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        إجراءات\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                    {categories.map((category) => (\r\n                      <tr key={category.id} className=\"hover:bg-gray-50\">\r\n                        <td className=\"px-4 py-4 whitespace-nowrap font-medium\">\r\n                          {category.name}\r\n                        </td>\r\n                        <td className=\"px-4 py-4\">\r\n                          {category.description || 'لا يوجد وصف'}\r\n                        </td>\r\n                        <td className=\"px-4 py-4 whitespace-nowrap\">\r\n                          {itemCounts[category.id] || 0}\r\n                        </td>\r\n                        <td className=\"px-4 py-4 whitespace-nowrap text-sm\">\r\n                          <button\r\n                            onClick={() => handleEdit(category)}\r\n                            className=\"text-blue-600 hover:text-blue-900 ml-3\"\r\n                          >\r\n                            تعديل\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleDelete(category.id)}\r\n                            className=\"text-red-600 hover:text-red-900\"\r\n                            disabled={itemCounts[category.id] > 0}\r\n                            title={itemCounts[category.id] > 0 ? 'لا يمكن حذف تصنيف يحتوي على أصناف' : 'حذف التصنيف'}\r\n                          >\r\n                            حذف\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}