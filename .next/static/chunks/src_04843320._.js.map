{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\n// Initialize the Supabase client with proper Supabase URL and key\r\nconst supabaseUrl = 'https://mticvmyfrdmciaeipfxu.supabase.co';\r\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im10aWN2bXlmcmRtY2lhZWlwZnh1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDEwODc1OTMsImV4cCI6MjA1NjY2MzU5M30.6iudxBl6js0heW1mhoSmcXegTIN_lAN2GiFeA3plSIo';\r\n\r\n// Create the Supabase client\r\nexport const supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\n// Store PostgreSQL direct connection URL for database initialization scripts\r\nexport const postgresUrl = 'postgresql://HousingMaintenance_owner:npg_fC8S4bpZLsJw@ep-weathered-meadow-a44a1v3i-pooler.us-east-1.aws.neon.tech/HousingMaintenance?sslmode=require';"],"names":[],"mappings":";;;;AAAA;;AAEA,kEAAkE;AAClE,MAAM,cAAc;AACpB,MAAM,cAAc;AAGb,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AAG3C,MAAM,cAAc","debugId":null}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/services/maintenanceService.ts"],"sourcesContent":["import { supabase } from '../supabase';\r\nimport { MaintenanceRequest, MaintenanceItem } from '@/models/types';\r\n\r\n// Maintenance Request Operations\r\nexport const getMaintenanceRequests = async (\r\n  complexId?: string, \r\n  buildingId?: string, \r\n  status?: MaintenanceRequest['status']\r\n): Promise<MaintenanceRequest[]> => {\r\n  try {\r\n    let query = supabase.from('maintenance_requests').select('*');\r\n    \r\n    if (complexId) {\r\n      query = query.eq('complex_id', complexId);\r\n    }\r\n    \r\n    if (buildingId) {\r\n      query = query.eq('building_id', buildingId);\r\n    }\r\n    \r\n    if (status) {\r\n      query = query.eq('status', status);\r\n    }\r\n    \r\n    const { data, error } = await query.order('reported_date', { ascending: false });\r\n    \r\n    if (error) {\r\n      console.error('Supabase error in getMaintenanceRequests:', error);\r\n      \r\n      if (error.message.includes('does not exist')) {\r\n        console.warn('The maintenance_requests table might not exist yet. Make sure to run database initialization scripts.');\r\n      }\r\n      \r\n      throw new Error(`Database error: ${error.message}`);\r\n    }\r\n    \r\n    return data || [];\r\n  } catch (err) {\r\n    console.error('Error in getMaintenanceRequests:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getMaintenanceRequestById = async (id: string): Promise<MaintenanceRequest | null> => {\r\n  const { data, error } = await supabase\r\n    .from('maintenance_requests')\r\n    .select('*')\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const createMaintenanceRequest = async (\r\n  request: Omit<MaintenanceRequest, 'id' | 'reported_date'>\r\n): Promise<MaintenanceRequest> => {\r\n  const newRequest = {\r\n    ...request,\r\n    reported_date: new Date().toISOString(),\r\n    status: request.status || 'pending'\r\n  };\r\n\r\n  const { data, error } = await supabase\r\n    .from('maintenance_requests')\r\n    .insert([newRequest])\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updateMaintenanceRequest = async (\r\n  id: string, \r\n  updates: Partial<MaintenanceRequest>\r\n): Promise<MaintenanceRequest> => {\r\n  const { data, error } = await supabase\r\n    .from('maintenance_requests')\r\n    .update(updates)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const deleteMaintenanceRequest = async (id: string): Promise<void> => {\r\n  const { error } = await supabase\r\n    .from('maintenance_requests')\r\n    .delete()\r\n    .eq('id', id);\r\n  \r\n  if (error) throw error;\r\n};\r\n\r\n// Maintenance Items Operations\r\nexport const getMaintenanceItems = async (\r\n  maintenanceId: string\r\n): Promise<MaintenanceItem[]> => {\r\n  const { data, error } = await supabase\r\n    .from('maintenance_items')\r\n    .select('*')\r\n    .eq('maintenance_id', maintenanceId);\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};\r\n\r\nexport const getMaintenanceItemById = async (id: string): Promise<MaintenanceItem | null> => {\r\n  const { data, error } = await supabase\r\n    .from('maintenance_items')\r\n    .select('*')\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const createMaintenanceItem = async (\r\n  item: Omit<MaintenanceItem, 'id'>\r\n): Promise<MaintenanceItem> => {\r\n  const { data, error } = await supabase\r\n    .from('maintenance_items')\r\n    .insert([item])\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updateMaintenanceItem = async (\r\n  id: string, \r\n  updates: Partial<MaintenanceItem>\r\n): Promise<MaintenanceItem> => {\r\n  const { data, error } = await supabase\r\n    .from('maintenance_items')\r\n    .update(updates)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const deleteMaintenanceItem = async (id: string): Promise<void> => {\r\n  const { error } = await supabase\r\n    .from('maintenance_items')\r\n    .delete()\r\n    .eq('id', id);\r\n  \r\n  if (error) throw error;\r\n};\r\n\r\n// Get maintenance requests for monthly summary\r\nexport const getMonthlyMaintenanceRequests = async (\r\n  year: number,\r\n  month: number\r\n): Promise<MaintenanceRequest[]> => {\r\n  // Create start and end date for the specified month\r\n  const startDate = new Date(year, month - 1, 1).toISOString();\r\n  const endDate = new Date(year, month, 0).toISOString();\r\n  \r\n  const { data, error } = await supabase\r\n    .from('maintenance_requests')\r\n    .select('*')\r\n    .gte('reported_date', startDate)\r\n    .lte('reported_date', endDate);\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/services/housingService.ts"],"sourcesContent":["import { \r\n  ResidentialComplex, \r\n  Building, \r\n  Room,\r\n  Facility\r\n} from '@/models/types';\r\n\r\n// Residential Complex Operations\r\nexport const getComplexes = async (): Promise<ResidentialComplex[]> => {\r\n  try {\r\n    const response = await fetch('/api/housing');\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`فشل في جلب المجمعات السكنية: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('فشل في جلب المجمعات السكنية:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getComplexById = async (id: string): Promise<ResidentialComplex | null> => {\r\n  try {\r\n    const response = await fetch(`/api/housing/${id}`);\r\n    \r\n    if (response.status === 404) {\r\n      return null;\r\n    }\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`فشل في جلب المجمع السكني: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`فشل في جلب المجمع السكني بالمعرف ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createComplex = async (complex: Omit<ResidentialComplex, 'id' | 'created_at'>): Promise<ResidentialComplex> => {\r\n  console.log('محاولة إنشاء مجمع سكني جديد:', complex);\r\n  \r\n  try {\r\n    // التحقق من وجود الحقول المطلوبة\r\n    if (!complex.name || !complex.location) {\r\n      throw new Error('اسم المجمع والموقع مطلوبان');\r\n    }\r\n    \r\n    const response = await fetch('/api/housing', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(complex),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `فشل في إنشاء المجمع السكني: ${response.statusText}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    console.log('تم إنشاء المجمع بنجاح:', data);\r\n    return data;\r\n  } catch (err) {\r\n    console.error('خطأ غير متوقع عند إنشاء المجمع:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updateComplex = async (id: string, updates: Partial<ResidentialComplex>): Promise<ResidentialComplex> => {\r\n  try {\r\n    const response = await fetch('/api/housing', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        id,\r\n        ...updates\r\n      }),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `فشل في تحديث المجمع السكني: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`فشل في تحديث المجمع السكني بالمعرف ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteComplex = async (id: string): Promise<void> => {\r\n  try {\r\n    const response = await fetch(`/api/housing?id=${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `فشل في حذف المجمع السكني: ${response.statusText}`);\r\n    }\r\n  } catch (error) {\r\n    console.error(`فشل في حذف المجمع السكني بالمعرف ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const testDatabaseConnection = async (): Promise<boolean> => {\r\n  try {\r\n    const response = await fetch('/api/housing', {\r\n      method: 'OPTIONS',\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      return false;\r\n    }\r\n    \r\n    const data = await response.json();\r\n    return data.success;\r\n  } catch (error) {\r\n    console.error('فشل في اختبار الاتصال بقاعدة البيانات:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Building Operations\r\nexport const getBuildings = async (complexId?: string): Promise<Building[]> => {\r\n  try {\r\n    const url = complexId ? `/api/housing/buildings?complexId=${complexId}` : '/api/housing/buildings';\r\n    const response = await fetch(url);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`فشل في جلب المباني: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('فشل في جلب المباني:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getBuildingById = async (id: string): Promise<Building | null> => {\r\n  try {\r\n    const response = await fetch(`/api/housing/buildings/${id}`);\r\n    \r\n    if (response.status === 404) {\r\n      return null;\r\n    }\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`فشل في جلب المبنى: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`فشل في جلب المبنى بالمعرف ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createBuilding = async (building: Omit<Building, 'id'>): Promise<Building> => {\r\n  try {\r\n    const response = await fetch('/api/housing/buildings', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(building),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `فشل في إنشاء المبنى: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('فشل في إنشاء مبنى جديد:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateBuilding = async (id: string, updates: Partial<Building>): Promise<Building> => {\r\n  try {\r\n    const response = await fetch('/api/housing/buildings', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        id,\r\n        ...updates\r\n      }),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `فشل في تحديث المبنى: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`فشل في تحديث المبنى بالمعرف ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteBuilding = async (id: string): Promise<void> => {\r\n  try {\r\n    const response = await fetch(`/api/housing/buildings?id=${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `فشل في حذف المبنى: ${response.statusText}`);\r\n    }\r\n  } catch (error) {\r\n    console.error(`فشل في حذف المبنى بالمعرف ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Room Operations\r\nexport const getRooms = async (buildingId?: string): Promise<Room[]> => {\r\n  try {\r\n    const url = buildingId ? `/api/housing/rooms?buildingId=${buildingId}` : '/api/housing/rooms';\r\n    \r\n    console.log(`Fetching rooms from ${url}`);\r\n    const response = await fetch(url, {\r\n      // Adding cache: no-store to prevent caching issues\r\n      cache: 'no-store'\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      let errorMessage;\r\n      try {\r\n        // Try to parse as JSON\r\n        const errorData = JSON.parse(errorText);\r\n        errorMessage = errorData.error || response.statusText;\r\n      } catch {\r\n        // If not JSON, use as plain text\r\n        errorMessage = errorText || response.statusText;\r\n      }\r\n      \r\n      console.error(`Error response from rooms API: ${errorMessage}`);\r\n      throw new Error(`فشل في جلب الغرف: ${errorMessage}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Map database schema to the expected Room interface if needed\r\n    return data.map((room: any) => ({\r\n      id: room.id,\r\n      building_id: room.building_id,\r\n      room_number: room.room_number,\r\n      type: room.type,\r\n      status: room.status || 'available',\r\n      floor: room.floor,\r\n      // Add other expected fields with defaults\r\n      name: room.room_number // Use room_number as name if not present\r\n    }));\r\n  } catch (error: any) {\r\n    console.error('فشل في جلب الغرف:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Facility Operations\r\nexport const getFacilities = async (complexId?: string, buildingId?: string): Promise<Facility[]> => {\r\n  try {\r\n    let url = '/api/housing/facilities';\r\n    const params = new URLSearchParams();\r\n    \r\n    if (complexId) params.append('complexId', complexId);\r\n    if (buildingId) params.append('buildingId', buildingId);\r\n    \r\n    if (params.toString()) {\r\n      url += `?${params.toString()}`;\r\n    }\r\n    \r\n    console.log(`Fetching facilities from ${url}`);\r\n    const response = await fetch(url, {\r\n      // Adding cache: no-store to prevent caching issues\r\n      cache: 'no-store' \r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      let errorMessage;\r\n      try {\r\n        // Try to parse as JSON\r\n        const errorData = JSON.parse(errorText);\r\n        errorMessage = errorData.error || response.statusText;\r\n      } catch {\r\n        // If not JSON, use as plain text\r\n        errorMessage = errorText || response.statusText;\r\n      }\r\n      \r\n      console.error(`Error response from facilities API: ${errorMessage}`);\r\n      throw new Error(`فشل في جلب المرافق: ${errorMessage}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Map database schema to the expected Facility interface if needed\r\n    return data.map((facility: any) => ({\r\n      id: facility.id,\r\n      complex_id: facility.complex_id,\r\n      building_id: facility.building_id,\r\n      name: facility.name,\r\n      type: facility.type,\r\n      location_description: facility.location_description\r\n    }));\r\n  } catch (error: any) {\r\n    console.error('فشل في جلب المرافق:', error);\r\n    throw error;\r\n  }\r\n};"],"names":[],"mappings":";;;;;;;;;;;;;;;AAQO,MAAM,eAAe;IAC1B,IAAI;QACF,MAAM,WAAW,MAAM,MAAM;QAE7B,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,6BAA6B,EAAE,SAAS,UAAU,EAAE;QACvE;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,MAAM;IACR;AACF;AAEO,MAAM,iBAAiB,OAAO;IACnC,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,CAAC,aAAa,EAAE,IAAI;QAEjD,IAAI,SAAS,MAAM,KAAK,KAAK;YAC3B,OAAO;QACT;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,0BAA0B,EAAE,SAAS,UAAU,EAAE;QACpE;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,iCAAiC,EAAE,GAAG,CAAC,CAAC,EAAE;QACzD,MAAM;IACR;AACF;AAEO,MAAM,gBAAgB,OAAO;IAClC,QAAQ,GAAG,CAAC,gCAAgC;IAE5C,IAAI;QACF,iCAAiC;QACjC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,QAAQ,EAAE;YACtC,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,WAAW,MAAM,MAAM,gBAAgB;YAC3C,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;QACvB;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,MAAM,IAAI,MAAM,UAAU,KAAK,IAAI,CAAC,4BAA4B,EAAE,SAAS,UAAU,EAAE;QACzF;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,QAAQ,GAAG,CAAC,0BAA0B;QACtC,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,mCAAmC;QACjD,MAAM;IACR;AACF;AAEO,MAAM,gBAAgB,OAAO,IAAY;IAC9C,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,gBAAgB;YAC3C,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBACnB;gBACA,GAAG,OAAO;YACZ;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,MAAM,IAAI,MAAM,UAAU,KAAK,IAAI,CAAC,4BAA4B,EAAE,SAAS,UAAU,EAAE;QACzF;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,mCAAmC,EAAE,GAAG,CAAC,CAAC,EAAE;QAC3D,MAAM;IACR;AACF;AAEO,MAAM,gBAAgB,OAAO;IAClC,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,CAAC,gBAAgB,EAAE,IAAI,EAAE;YACpD,QAAQ;QACV;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,MAAM,IAAI,MAAM,UAAU,KAAK,IAAI,CAAC,0BAA0B,EAAE,SAAS,UAAU,EAAE;QACvF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,iCAAiC,EAAE,GAAG,CAAC,CAAC,EAAE;QACzD,MAAM;IACR;AACF;AAEO,MAAM,yBAAyB;IACpC,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,gBAAgB;YAC3C,QAAQ;QACV;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,OAAO;QACT;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,KAAK,OAAO;IACrB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0CAA0C;QACxD,OAAO;IACT;AACF;AAGO,MAAM,eAAe,OAAO;IACjC,IAAI;QACF,MAAM,MAAM,YAAY,CAAC,iCAAiC,EAAE,WAAW,GAAG;QAC1E,MAAM,WAAW,MAAM,MAAM;QAE7B,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,UAAU,EAAE;QAC9D;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,MAAM;IACR;AACF;AAEO,MAAM,kBAAkB,OAAO;IACpC,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,CAAC,uBAAuB,EAAE,IAAI;QAE3D,IAAI,SAAS,MAAM,KAAK,KAAK;YAC3B,OAAO;QACT;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,mBAAmB,EAAE,SAAS,UAAU,EAAE;QAC7D;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,0BAA0B,EAAE,GAAG,CAAC,CAAC,EAAE;QAClD,MAAM;IACR;AACF;AAEO,MAAM,iBAAiB,OAAO;IACnC,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,0BAA0B;YACrD,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;QACvB;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,MAAM,IAAI,MAAM,UAAU,KAAK,IAAI,CAAC,qBAAqB,EAAE,SAAS,UAAU,EAAE;QAClF;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,MAAM;IACR;AACF;AAEO,MAAM,iBAAiB,OAAO,IAAY;IAC/C,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,0BAA0B;YACrD,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBACnB;gBACA,GAAG,OAAO;YACZ;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,MAAM,IAAI,MAAM,UAAU,KAAK,IAAI,CAAC,qBAAqB,EAAE,SAAS,UAAU,EAAE;QAClF;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,4BAA4B,EAAE,GAAG,CAAC,CAAC,EAAE;QACpD,MAAM;IACR;AACF;AAEO,MAAM,iBAAiB,OAAO;IACnC,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,CAAC,0BAA0B,EAAE,IAAI,EAAE;YAC9D,QAAQ;QACV;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,MAAM,IAAI,MAAM,UAAU,KAAK,IAAI,CAAC,mBAAmB,EAAE,SAAS,UAAU,EAAE;QAChF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,0BAA0B,EAAE,GAAG,CAAC,CAAC,EAAE;QAClD,MAAM;IACR;AACF;AAGO,MAAM,WAAW,OAAO;IAC7B,IAAI;QACF,MAAM,MAAM,aAAa,CAAC,8BAA8B,EAAE,YAAY,GAAG;QAEzE,QAAQ,GAAG,CAAC,CAAC,oBAAoB,EAAE,KAAK;QACxC,MAAM,WAAW,MAAM,MAAM,KAAK;YAChC,mDAAmD;YACnD,OAAO;QACT;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,IAAI;YACJ,IAAI;gBACF,uBAAuB;gBACvB,MAAM,YAAY,KAAK,KAAK,CAAC;gBAC7B,eAAe,UAAU,KAAK,IAAI,SAAS,UAAU;YACvD,EAAE,OAAM;gBACN,iCAAiC;gBACjC,eAAe,aAAa,SAAS,UAAU;YACjD;YAEA,QAAQ,KAAK,CAAC,CAAC,+BAA+B,EAAE,cAAc;YAC9D,MAAM,IAAI,MAAM,CAAC,kBAAkB,EAAE,cAAc;QACrD;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,+DAA+D;QAC/D,OAAO,KAAK,GAAG,CAAC,CAAC,OAAc,CAAC;gBAC9B,IAAI,KAAK,EAAE;gBACX,aAAa,KAAK,WAAW;gBAC7B,aAAa,KAAK,WAAW;gBAC7B,MAAM,KAAK,IAAI;gBACf,QAAQ,KAAK,MAAM,IAAI;gBACvB,OAAO,KAAK,KAAK;gBACjB,0CAA0C;gBAC1C,MAAM,KAAK,WAAW,CAAC,yCAAyC;YAClE,CAAC;IACH,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,qBAAqB;QACnC,MAAM;IACR;AACF;AAGO,MAAM,gBAAgB,OAAO,WAAoB;IACtD,IAAI;QACF,IAAI,MAAM;QACV,MAAM,SAAS,IAAI;QAEnB,IAAI,WAAW,OAAO,MAAM,CAAC,aAAa;QAC1C,IAAI,YAAY,OAAO,MAAM,CAAC,cAAc;QAE5C,IAAI,OAAO,QAAQ,IAAI;YACrB,OAAO,CAAC,CAAC,EAAE,OAAO,QAAQ,IAAI;QAChC;QAEA,QAAQ,GAAG,CAAC,CAAC,yBAAyB,EAAE,KAAK;QAC7C,MAAM,WAAW,MAAM,MAAM,KAAK;YAChC,mDAAmD;YACnD,OAAO;QACT;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,IAAI;YACJ,IAAI;gBACF,uBAAuB;gBACvB,MAAM,YAAY,KAAK,KAAK,CAAC;gBAC7B,eAAe,UAAU,KAAK,IAAI,SAAS,UAAU;YACvD,EAAE,OAAM;gBACN,iCAAiC;gBACjC,eAAe,aAAa,SAAS,UAAU;YACjD;YAEA,QAAQ,KAAK,CAAC,CAAC,oCAAoC,EAAE,cAAc;YACnE,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,cAAc;QACvD;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,mEAAmE;QACnE,OAAO,KAAK,GAAG,CAAC,CAAC,WAAkB,CAAC;gBAClC,IAAI,SAAS,EAAE;gBACf,YAAY,SAAS,UAAU;gBAC/B,aAAa,SAAS,WAAW;gBACjC,MAAM,SAAS,IAAI;gBACnB,MAAM,SAAS,IAAI;gBACnB,sBAAsB,SAAS,oBAAoB;YACrD,CAAC;IACH,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,uBAAuB;QACrC,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/app/maintenance/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { getMaintenanceRequests } from '@/lib/services/maintenanceService';\r\nimport { getComplexes, getBuildings } from '@/lib/services/housingService';\r\nimport { MaintenanceRequest, ResidentialComplex, Building } from '@/models/types';\r\nimport { supabase } from '@/lib/supabase';\r\n\r\nexport default function MaintenanceRequestsPage() {\r\n  const [maintenanceRequests, setMaintenanceRequests] = useState<MaintenanceRequest[]>([]);\r\n  const [complexes, setComplexes] = useState<ResidentialComplex[]>([]);\r\n  const [buildings, setBuildings] = useState<Building[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  \r\n  // Filters\r\n  const [filters, setFilters] = useState({\r\n    complexId: '',\r\n    buildingId: '',\r\n    status: '',\r\n    priority: ''\r\n  });\r\n\r\n  // تحقق من وجود جدول maintenance_requests وإنشاؤه إذا لزم الأمر\r\n  const setupMaintenanceTable = async () => {\r\n    try {\r\n      // التحقق من وجود الجدول\r\n      const { data: tableExists, error: checkError } = await supabase\r\n        .from('maintenance_requests')\r\n        .select('id')\r\n        .limit(1);\r\n      \r\n      if (checkError && checkError.message.includes('does not exist')) {\r\n        // الجدول غير موجود، نقوم بتشغيل سكريبت إعداد قاعدة البيانات\r\n        console.log('جدول maintenance_requests غير موجود. سيتم إنشاؤه الآن...');\r\n        \r\n        // تنفيذ سكريبت إنشاء قاعدة البيانات\r\n        const response = await fetch('/api/diagnostics', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ action: 'setup_database' }),\r\n        });\r\n        \r\n        if (response.ok) {\r\n          console.log('تم إعداد قاعدة البيانات بنجاح');\r\n          return true;\r\n        } else {\r\n          const errorData = await response.json();\r\n          throw new Error(`فشل إعداد قاعدة البيانات: ${errorData.error || 'خطأ غير معروف'}`);\r\n        }\r\n      } else if (checkError) {\r\n        throw checkError;\r\n      }\r\n      \r\n      return true;\r\n    } catch (err: any) {\r\n      console.error('خطأ في التحقق من جدول maintenance_requests:', err);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Fetch all complexes on component mount\r\n  useEffect(() => {\r\n    const fetchComplexes = async () => {\r\n      try {\r\n        const complexesData = await getComplexes();\r\n        setComplexes(complexesData);\r\n      } catch (err) {\r\n        console.error('Error fetching complexes:', err);\r\n      }\r\n    };\r\n\r\n    fetchComplexes();\r\n  }, []);\r\n\r\n  // Fetch buildings when complex filter changes\r\n  useEffect(() => {\r\n    if (filters.complexId) {\r\n      const fetchBuildings = async () => {\r\n        try {\r\n          const buildingsData = await getBuildings(filters.complexId);\r\n          setBuildings(buildingsData);\r\n          \r\n          // Reset building filter if selected complex changes\r\n          setFilters(prev => ({\r\n            ...prev,\r\n            buildingId: ''\r\n          }));\r\n        } catch (err) {\r\n          console.error('Error fetching buildings:', err);\r\n        }\r\n      };\r\n\r\n      fetchBuildings();\r\n    } else {\r\n      setBuildings([]);\r\n    }\r\n  }, [filters.complexId]);\r\n\r\n  // Fetch maintenance requests with filters\r\n  useEffect(() => {\r\n    const fetchMaintenanceRequests = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      try {\r\n        // التحقق من وجود جدول maintenance_requests وإنشاؤه إذا لزم الأمر\r\n        await setupMaintenanceTable();\r\n        \r\n        const requests = await getMaintenanceRequests(\r\n          filters.complexId || undefined,\r\n          filters.buildingId || undefined,\r\n          filters.status as MaintenanceRequest['status'] || undefined\r\n        );\r\n        \r\n        // Apply priority filter in-memory if needed\r\n        const filteredRequests = filters.priority \r\n          ? requests.filter(request => request.priority === filters.priority)\r\n          : requests;\r\n          \r\n        setMaintenanceRequests(filteredRequests);\r\n      } catch (err: any) {\r\n        console.error('Error fetching maintenance requests:', err);\r\n        // Show more detailed error message to help with debugging\r\n        setError(`حدث خطأ أثناء تحميل البيانات: ${err.message || 'خطأ غير معروف'}. الرجاء المحاولة مرة أخرى.`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMaintenanceRequests();\r\n  }, [filters]);\r\n\r\n  // Handle filter changes\r\n  const handleFilterChange = (field: string, value: string) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  // Reset all filters\r\n  const resetFilters = () => {\r\n    setFilters({\r\n      complexId: '',\r\n      buildingId: '',\r\n      status: '',\r\n      priority: ''\r\n    });\r\n  };\r\n\r\n  // إعادة تهيئة قاعدة البيانات يدويًا\r\n  const handleDatabaseSetup = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // تنفيذ سكريبت إعداد قاعدة البيانات\r\n      const response = await fetch('/api/diagnostics', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ action: 'setup_database' }),\r\n      });\r\n      \r\n      if (response.ok) {\r\n        // إعادة تحميل البيانات بعد إعداد قاعدة البيانات\r\n        const requests = await getMaintenanceRequests();\r\n        setMaintenanceRequests(requests);\r\n      } else {\r\n        const errorData = await response.json();\r\n        throw new Error(`فشل إعداد قاعدة البيانات: ${errorData.error || 'خطأ غير معروف'}`);\r\n      }\r\n    } catch (err: any) {\r\n      console.error('Error setting up database:', err);\r\n      setError(`فشل إعداد قاعدة البيانات: ${err.message || 'خطأ غير معروف'}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto bg-gray-50 dark:bg-gray-900 min-h-screen p-4\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-bold dark:text-white\">طلبات الصيانة</h1>\r\n        <Link href=\"/maintenance/new\" className=\"btn btn-primary bg-teal-600 hover:bg-teal-700 text-white py-2 px-4 rounded dark:bg-teal-700 dark:hover:bg-teal-600\">\r\n          طلب صيانة جديد\r\n        </Link>\r\n      </div>\r\n\r\n      {/* Filters */}\r\n      <div className=\"bg-white shadow rounded-lg p-6 mb-6 dark:bg-gray-800\">\r\n        <h2 className=\"text-lg font-semibold mb-4 dark:text-white\">تصفية النتائج</h2>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n          <div>\r\n            <label className=\"block mb-2 text-sm font-medium dark:text-gray-300\">المجمع السكني</label>\r\n            <select\r\n              value={filters.complexId}\r\n              onChange={(e) => handleFilterChange('complexId', e.target.value)}\r\n              className=\"select w-full border border-gray-300 rounded p-2 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n            >\r\n              <option value=\"\">جميع المجمعات</option>\r\n              {complexes.map(complex => (\r\n                <option key={complex.id} value={complex.id}>\r\n                  {complex.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block mb-2 text-sm font-medium dark:text-gray-300\">المبنى</label>\r\n            <select\r\n              value={filters.buildingId}\r\n              onChange={(e) => handleFilterChange('buildingId', e.target.value)}\r\n              className=\"select w-full border border-gray-300 rounded p-2 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n              disabled={!filters.complexId}\r\n            >\r\n              <option value=\"\">جميع المباني</option>\r\n              {buildings.map(building => (\r\n                <option key={building.id} value={building.id}>\r\n                  {building.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block mb-2 text-sm font-medium dark:text-gray-300\">الحالة</label>\r\n            <select\r\n              value={filters.status}\r\n              onChange={(e) => handleFilterChange('status', e.target.value)}\r\n              className=\"select w-full border border-gray-300 rounded p-2 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n            >\r\n              <option value=\"\">جميع الحالات</option>\r\n              <option value=\"pending\">معلق</option>\r\n              <option value=\"approved\">معتمد</option>\r\n              <option value=\"rejected\">مرفوض</option>\r\n              <option value=\"in_progress\">قيد التنفيذ</option>\r\n              <option value=\"completed\">مكتمل</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block mb-2 text-sm font-medium dark:text-gray-300\">الأولوية</label>\r\n            <select\r\n              value={filters.priority}\r\n              onChange={(e) => handleFilterChange('priority', e.target.value)}\r\n              className=\"select w-full border border-gray-300 rounded p-2 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n            >\r\n              <option value=\"\">جميع الأولويات</option>\r\n              <option value=\"low\">منخفضة</option>\r\n              <option value=\"medium\">متوسطة</option>\r\n              <option value=\"high\">عالية</option>\r\n              <option value=\"emergency\">طارئة</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"mt-4 flex justify-end\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={resetFilters}\r\n            className=\"btn bg-gray-500 hover:bg-gray-600 text-white py-2 px-4 rounded dark:bg-gray-600 dark:hover:bg-gray-700 mr-2\"\r\n          >\r\n            إعادة تعيين التصفية\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleDatabaseSetup}\r\n            className=\"btn bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded dark:bg-blue-700 dark:hover:bg-blue-600\"\r\n          >\r\n            إعادة تهيئة قاعدة البيانات\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"bg-red-100 border-r-4 border-red-500 text-red-700 p-4 mb-6 rounded-md dark:bg-red-900/30 dark:border-red-800 dark:text-red-400\">\r\n          <p>{error}</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Maintenance Requests Table */}\r\n      <div className=\"bg-white shadow-md rounded-lg overflow-hidden dark:bg-gray-800\">\r\n        {loading ? (\r\n          <div className=\"text-center py-10 dark:text-gray-300\">\r\n            <p className=\"text-lg\">جاري تحميل البيانات...</p>\r\n          </div>\r\n        ) : maintenanceRequests.length === 0 ? (\r\n          <div className=\"text-center py-10\">\r\n            <p className=\"text-lg text-gray-500 dark:text-gray-400\">لا توجد طلبات صيانة مطابقة للمعايير المحددة.</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n              <thead className=\"bg-gray-50 dark:bg-gray-700\">\r\n                <tr>\r\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">\r\n                    رقم الطلب\r\n                  </th>\r\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">\r\n                    المجمع / المبنى\r\n                  </th>\r\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">\r\n                    الحالة\r\n                  </th>\r\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">\r\n                    الأولوية\r\n                  </th>\r\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">\r\n                    مقدم الطلب\r\n                  </th>\r\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">\r\n                    تاريخ الطلب\r\n                  </th>\r\n                  <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">\r\n                    إجراءات\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200 dark:bg-gray-800 dark:divide-gray-700\">\r\n                {maintenanceRequests.map((request) => (\r\n                  <tr key={request.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n                    <td className=\"px-4 py-4 whitespace-nowrap dark:text-gray-300\">{request.id.substring(0, 8)}</td>\r\n                    <td className=\"px-4 py-4 whitespace-nowrap dark:text-gray-300\">\r\n                      {/* This would show actual complex and building names in a real app */}\r\n                      المجمع: {request.complex_id.substring(0, 8)}\r\n                      <br />\r\n                      المبنى: {request.building_id.substring(0, 8)}\r\n                    </td>\r\n                    <td className=\"px-4 py-4 whitespace-nowrap\">\r\n                      <StatusBadge status={request.status} />\r\n                    </td>\r\n                    <td className=\"px-4 py-4 whitespace-nowrap\">\r\n                      <PriorityBadge priority={request.priority} />\r\n                    </td>\r\n                    <td className=\"px-4 py-4 whitespace-nowrap dark:text-gray-300\">\r\n                      {request.reported_by}\r\n                    </td>\r\n                    <td className=\"px-4 py-4 whitespace-nowrap dark:text-gray-300\" dir=\"ltr\">\r\n                      {new Date(request.reported_date).toLocaleDateString('ar-SA')}\r\n                    </td>\r\n                    <td className=\"px-4 py-4 whitespace-nowrap text-sm\">\r\n                      <Link \r\n                        href={`/maintenance/${request.id}`}\r\n                        className=\"text-blue-600 hover:underline ml-2 dark:text-blue-400\"\r\n                      >\r\n                        عرض التفاصيل\r\n                      </Link>\r\n                      <Link \r\n                        href={`/maintenance/${request.id}/edit`}\r\n                        className=\"text-teal-600 hover:underline dark:text-teal-400\"\r\n                      >\r\n                        تحرير\r\n                      </Link>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Helper component for status badges\r\nfunction StatusBadge({ status }: { status: MaintenanceRequest['status'] }) {\r\n  const statusColors: Record<MaintenanceRequest['status'], { bg: string; text: string; label: string; darkBg: string; darkText: string }> = {\r\n    pending: { \r\n      bg: 'bg-yellow-100', \r\n      text: 'text-yellow-800', \r\n      darkBg: 'dark:bg-yellow-900/30', \r\n      darkText: 'dark:text-yellow-300', \r\n      label: 'معلق' \r\n    },\r\n    approved: { \r\n      bg: 'bg-blue-100', \r\n      text: 'text-blue-800', \r\n      darkBg: 'dark:bg-blue-900/30', \r\n      darkText: 'dark:text-blue-300', \r\n      label: 'معتمد' \r\n    },\r\n    rejected: { \r\n      bg: 'bg-red-100', \r\n      text: 'text-red-800', \r\n      darkBg: 'dark:bg-red-900/30', \r\n      darkText: 'dark:text-red-300', \r\n      label: 'مرفوض' \r\n    },\r\n    in_progress: { \r\n      bg: 'bg-purple-100', \r\n      text: 'text-purple-800', \r\n      darkBg: 'dark:bg-purple-900/30', \r\n      darkText: 'dark:text-purple-300', \r\n      label: 'قيد التنفيذ' \r\n    },\r\n    completed: { \r\n      bg: 'bg-green-100', \r\n      text: 'text-green-800', \r\n      darkBg: 'dark:bg-green-900/30', \r\n      darkText: 'dark:text-green-300', \r\n      label: 'مكتمل' \r\n    },\r\n  };\r\n\r\n  const { bg, text, darkBg, darkText, label } = statusColors[status];\r\n\r\n  return (\r\n    <span className={`${bg} ${text} ${darkBg} ${darkText} px-2 py-1 rounded-full text-xs`}>\r\n      {label}\r\n    </span>\r\n  );\r\n}\r\n\r\n// Helper component for priority badges\r\nfunction PriorityBadge({ priority }: { priority: MaintenanceRequest['priority'] }) {\r\n  const priorityColors: Record<MaintenanceRequest['priority'], { bg: string; text: string; darkBg: string; darkText: string; label: string }> = {\r\n    low: { \r\n      bg: 'bg-green-100', \r\n      text: 'text-green-800', \r\n      darkBg: 'dark:bg-green-900/30', \r\n      darkText: 'dark:text-green-300', \r\n      label: 'منخفضة' \r\n    },\r\n    medium: { \r\n      bg: 'bg-blue-100', \r\n      text: 'text-blue-800', \r\n      darkBg: 'dark:bg-blue-900/30', \r\n      darkText: 'dark:text-blue-300', \r\n      label: 'متوسطة' \r\n    },\r\n    high: { \r\n      bg: 'bg-orange-100', \r\n      text: 'text-orange-800', \r\n      darkBg: 'dark:bg-orange-900/30', \r\n      darkText: 'dark:text-orange-300', \r\n      label: 'عالية' \r\n    },\r\n    emergency: { \r\n      bg: 'bg-red-100', \r\n      text: 'text-red-800', \r\n      darkBg: 'dark:bg-red-900/30', \r\n      darkText: 'dark:text-red-300', \r\n      label: 'طارئة' \r\n    },\r\n  };\r\n\r\n  const { bg, text, darkBg, darkText, label } = priorityColors[priority];\r\n\r\n  return (\r\n    <span className={`${bg} ${text} ${darkBg} ${darkText} px-2 py-1 rounded-full text-xs`}>\r\n      {label}\r\n    </span>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}