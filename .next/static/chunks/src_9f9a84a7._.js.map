{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\n// Initialize the Supabase client with proper Supabase URL and key\r\nconst supabaseUrl = 'https://mticvmyfrdmciaeipfxu.supabase.co';\r\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im10aWN2bXlmcmRtY2lhZWlwZnh1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDEwODc1OTMsImV4cCI6MjA1NjY2MzU5M30.6iudxBl6js0heW1mhoSmcXegTIN_lAN2GiFeA3plSIo';\r\n\r\n// Create the Supabase client\r\nexport const supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\n// Store PostgreSQL direct connection URL for database initialization scripts\r\nexport const postgresUrl = 'postgresql://HousingMaintenance_owner:npg_fC8S4bpZLsJw@ep-weathered-meadow-a44a1v3i-pooler.us-east-1.aws.neon.tech/HousingMaintenance?sslmode=require';"],"names":[],"mappings":";;;;AAAA;;AAEA,kEAAkE;AAClE,MAAM,cAAc;AACpB,MAAM,cAAc;AAGb,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AAG3C,MAAM,cAAc","debugId":null}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/services/maintenanceService.ts"],"sourcesContent":["import { supabase } from '../supabase';\r\nimport { MaintenanceRequest, MaintenanceItem } from '@/models/types';\r\n\r\n// Maintenance Request Operations\r\nexport const getMaintenanceRequests = async (\r\n  complexId?: string, \r\n  buildingId?: string, \r\n  status?: MaintenanceRequest['status']\r\n): Promise<MaintenanceRequest[]> => {\r\n  try {\r\n    let query = supabase.from('maintenance_requests').select('*');\r\n    \r\n    if (complexId) {\r\n      query = query.eq('complex_id', complexId);\r\n    }\r\n    \r\n    if (buildingId) {\r\n      query = query.eq('building_id', buildingId);\r\n    }\r\n    \r\n    if (status) {\r\n      query = query.eq('status', status);\r\n    }\r\n    \r\n    const { data, error } = await query.order('reported_date', { ascending: false });\r\n    \r\n    if (error) {\r\n      console.error('Supabase error in getMaintenanceRequests:', error);\r\n      \r\n      if (error.message.includes('does not exist')) {\r\n        console.warn('The maintenance_requests table might not exist yet. Make sure to run database initialization scripts.');\r\n      }\r\n      \r\n      throw new Error(`Database error: ${error.message}`);\r\n    }\r\n    \r\n    return data || [];\r\n  } catch (err) {\r\n    console.error('Error in getMaintenanceRequests:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getMaintenanceRequestById = async (id: string): Promise<MaintenanceRequest | null> => {\r\n  const { data, error } = await supabase\r\n    .from('maintenance_requests')\r\n    .select('*')\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const createMaintenanceRequest = async (\r\n  request: Omit<MaintenanceRequest, 'id' | 'reported_date'>\r\n): Promise<MaintenanceRequest> => {\r\n  const newRequest = {\r\n    ...request,\r\n    reported_date: new Date().toISOString(),\r\n    status: request.status || 'pending'\r\n  };\r\n\r\n  const { data, error } = await supabase\r\n    .from('maintenance_requests')\r\n    .insert([newRequest])\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updateMaintenanceRequest = async (\r\n  id: string, \r\n  updates: Partial<MaintenanceRequest>\r\n): Promise<MaintenanceRequest> => {\r\n  const { data, error } = await supabase\r\n    .from('maintenance_requests')\r\n    .update(updates)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const deleteMaintenanceRequest = async (id: string): Promise<void> => {\r\n  const { error } = await supabase\r\n    .from('maintenance_requests')\r\n    .delete()\r\n    .eq('id', id);\r\n  \r\n  if (error) throw error;\r\n};\r\n\r\n// Maintenance Items Operations\r\nexport const getMaintenanceItems = async (\r\n  maintenanceId: string\r\n): Promise<MaintenanceItem[]> => {\r\n  const { data, error } = await supabase\r\n    .from('maintenance_items')\r\n    .select('*')\r\n    .eq('maintenance_id', maintenanceId);\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};\r\n\r\nexport const getMaintenanceItemById = async (id: string): Promise<MaintenanceItem | null> => {\r\n  const { data, error } = await supabase\r\n    .from('maintenance_items')\r\n    .select('*')\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const createMaintenanceItem = async (\r\n  item: Omit<MaintenanceItem, 'id'>\r\n): Promise<MaintenanceItem> => {\r\n  const { data, error } = await supabase\r\n    .from('maintenance_items')\r\n    .insert([item])\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updateMaintenanceItem = async (\r\n  id: string, \r\n  updates: Partial<MaintenanceItem>\r\n): Promise<MaintenanceItem> => {\r\n  const { data, error } = await supabase\r\n    .from('maintenance_items')\r\n    .update(updates)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const deleteMaintenanceItem = async (id: string): Promise<void> => {\r\n  const { error } = await supabase\r\n    .from('maintenance_items')\r\n    .delete()\r\n    .eq('id', id);\r\n  \r\n  if (error) throw error;\r\n};\r\n\r\n// Get maintenance requests for monthly summary\r\nexport const getMonthlyMaintenanceRequests = async (\r\n  year: number,\r\n  month: number\r\n): Promise<MaintenanceRequest[]> => {\r\n  // Create start and end date for the specified month\r\n  const startDate = new Date(year, month - 1, 1).toISOString();\r\n  const endDate = new Date(year, month, 0).toISOString();\r\n  \r\n  const { data, error } = await supabase\r\n    .from('maintenance_requests')\r\n    .select('*')\r\n    .gte('reported_date', startDate)\r\n    .lte('reported_date', endDate);\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;;AAIO,MAAM,yBAAyB,OACpC,WACA,YACA;IAEA,IAAI;QACF,IAAI,QAAQ,yHAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,wBAAwB,MAAM,CAAC;QAEzD,IAAI,WAAW;YACb,QAAQ,MAAM,EAAE,CAAC,cAAc;QACjC;QAEA,IAAI,YAAY;YACd,QAAQ,MAAM,EAAE,CAAC,eAAe;QAClC;QAEA,IAAI,QAAQ;YACV,QAAQ,MAAM,EAAE,CAAC,UAAU;QAC7B;QAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,MAAM,KAAK,CAAC,iBAAiB;YAAE,WAAW;QAAM;QAE9E,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,6CAA6C;YAE3D,IAAI,MAAM,OAAO,CAAC,QAAQ,CAAC,mBAAmB;gBAC5C,QAAQ,IAAI,CAAC;YACf;YAEA,MAAM,IAAI,MAAM,CAAC,gBAAgB,EAAE,MAAM,OAAO,EAAE;QACpD;QAEA,OAAO,QAAQ,EAAE;IACnB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,oCAAoC;QAClD,MAAM;IACR;AACF;AAEO,MAAM,4BAA4B,OAAO;IAC9C,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,wBACL,MAAM,CAAC,KACP,EAAE,CAAC,MAAM,IACT,MAAM;IAET,IAAI,OAAO,MAAM;IACjB,OAAO;AACT;AAEO,MAAM,2BAA2B,OACtC;IAEA,MAAM,aAAa;QACjB,GAAG,OAAO;QACV,eAAe,IAAI,OAAO,WAAW;QACrC,QAAQ,QAAQ,MAAM,IAAI;IAC5B;IAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,wBACL,MAAM,CAAC;QAAC;KAAW,EACnB,MAAM,GACN,MAAM;IAET,IAAI,OAAO,MAAM;IACjB,OAAO;AACT;AAEO,MAAM,2BAA2B,OACtC,IACA;IAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,wBACL,MAAM,CAAC,SACP,EAAE,CAAC,MAAM,IACT,MAAM,GACN,MAAM;IAET,IAAI,OAAO,MAAM;IACjB,OAAO;AACT;AAEO,MAAM,2BAA2B,OAAO;IAC7C,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CAC7B,IAAI,CAAC,wBACL,MAAM,GACN,EAAE,CAAC,MAAM;IAEZ,IAAI,OAAO,MAAM;AACnB;AAGO,MAAM,sBAAsB,OACjC;IAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,qBACL,MAAM,CAAC,KACP,EAAE,CAAC,kBAAkB;IAExB,IAAI,OAAO,MAAM;IACjB,OAAO,QAAQ,EAAE;AACnB;AAEO,MAAM,yBAAyB,OAAO;IAC3C,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,qBACL,MAAM,CAAC,KACP,EAAE,CAAC,MAAM,IACT,MAAM;IAET,IAAI,OAAO,MAAM;IACjB,OAAO;AACT;AAEO,MAAM,wBAAwB,OACnC;IAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,qBACL,MAAM,CAAC;QAAC;KAAK,EACb,MAAM,GACN,MAAM;IAET,IAAI,OAAO,MAAM;IACjB,OAAO;AACT;AAEO,MAAM,wBAAwB,OACnC,IACA;IAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,qBACL,MAAM,CAAC,SACP,EAAE,CAAC,MAAM,IACT,MAAM,GACN,MAAM;IAET,IAAI,OAAO,MAAM;IACjB,OAAO;AACT;AAEO,MAAM,wBAAwB,OAAO;IAC1C,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CAC7B,IAAI,CAAC,qBACL,MAAM,GACN,EAAE,CAAC,MAAM;IAEZ,IAAI,OAAO,MAAM;AACnB;AAGO,MAAM,gCAAgC,OAC3C,MACA;IAEA,oDAAoD;IACpD,MAAM,YAAY,IAAI,KAAK,MAAM,QAAQ,GAAG,GAAG,WAAW;IAC1D,MAAM,UAAU,IAAI,KAAK,MAAM,OAAO,GAAG,WAAW;IAEpD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,wBACL,MAAM,CAAC,KACP,GAAG,CAAC,iBAAiB,WACrB,GAAG,CAAC,iBAAiB;IAExB,IAAI,OAAO,MAAM;IACjB,OAAO,QAAQ,EAAE;AACnB","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/services/inventoryService.ts"],"sourcesContent":["import { supabase } from '../supabase';\r\nimport { Category, Item, Inventory } from '@/models/types';\r\n\r\n// Category Operations\r\nexport const getCategories = async (): Promise<Category[]> => {\r\n  const { data, error } = await supabase\r\n    .from('categories')\r\n    .select('*');\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};\r\n\r\nexport const getCategoryById = async (id: string): Promise<Category | null> => {\r\n  const { data, error } = await supabase\r\n    .from('categories')\r\n    .select('*')\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const createCategory = async (category: Omit<Category, 'id'>): Promise<Category> => {\r\n  const { data, error } = await supabase\r\n    .from('categories')\r\n    .insert([category])\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updateCategory = async (id: string, updates: Partial<Category>): Promise<Category> => {\r\n  const { data, error } = await supabase\r\n    .from('categories')\r\n    .update(updates)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const deleteCategory = async (id: string): Promise<void> => {\r\n  const { error } = await supabase\r\n    .from('categories')\r\n    .delete()\r\n    .eq('id', id);\r\n  \r\n  if (error) throw error;\r\n};\r\n\r\n// Item Operations\r\nexport const getItems = async (categoryId?: string): Promise<Item[]> => {\r\n  let query = supabase.from('items').select('*');\r\n  \r\n  if (categoryId) {\r\n    query = query.eq('category_id', categoryId);\r\n  }\r\n  \r\n  const { data, error } = await query;\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};\r\n\r\nexport const getItemById = async (id: string): Promise<Item | null> => {\r\n  const { data, error } = await supabase\r\n    .from('items')\r\n    .select('*')\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const createItem = async (item: Omit<Item, 'id'>): Promise<Item> => {\r\n  const { data, error } = await supabase\r\n    .from('items')\r\n    .insert([item])\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updateItem = async (id: string, updates: Partial<Item>): Promise<Item> => {\r\n  const { data, error } = await supabase\r\n    .from('items')\r\n    .update(updates)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const deleteItem = async (id: string): Promise<void> => {\r\n  const { error } = await supabase\r\n    .from('items')\r\n    .delete()\r\n    .eq('id', id);\r\n  \r\n  if (error) throw error;\r\n};\r\n\r\n// Inventory Operations\r\nexport const getInventory = async (itemId?: string): Promise<Inventory[]> => {\r\n  let query = supabase\r\n    .from('inventory')\r\n    .select(`\r\n      *,\r\n      items:item_id (\r\n        id,\r\n        name,\r\n        category_id,\r\n        unit\r\n      )\r\n    `);\r\n  \r\n  if (itemId) {\r\n    query = query.eq('item_id', itemId);\r\n  }\r\n  \r\n  const { data, error } = await query;\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};\r\n\r\nexport const getInventoryItemById = async (id: string): Promise<Inventory | null> => {\r\n  const { data, error } = await supabase\r\n    .from('inventory')\r\n    .select(`\r\n      *,\r\n      items:item_id (\r\n        id,\r\n        name,\r\n        category_id,\r\n        unit\r\n      )\r\n    `)\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updateInventoryQuantity = async (\r\n  itemId: string, \r\n  quantityChange: number\r\n): Promise<Inventory> => {\r\n  // First, get the current inventory item\r\n  const { data: currentInventory, error: fetchError } = await supabase\r\n    .from('inventory')\r\n    .select('*')\r\n    .eq('item_id', itemId)\r\n    .single();\r\n  \r\n  if (fetchError && fetchError.code !== 'PGRST116') {\r\n    // PGRST116 is the error code for \"no rows returned\"\r\n    throw fetchError;\r\n  }\r\n  \r\n  // If inventory item exists, update it\r\n  if (currentInventory) {\r\n    const newQuantity = currentInventory.quantity + quantityChange;\r\n    \r\n    if (newQuantity < 0) {\r\n      throw new Error('Insufficient inventory quantity');\r\n    }\r\n    \r\n    const { data, error } = await supabase\r\n      .from('inventory')\r\n      .update({\r\n        quantity: newQuantity,\r\n        last_updated: new Date().toISOString()\r\n      })\r\n      .eq('id', currentInventory.id)\r\n      .select()\r\n      .single();\r\n    \r\n    if (error) throw error;\r\n    return data;\r\n  } \r\n  // If inventory item does not exist, create it (only if adding quantity)\r\n  else if (quantityChange > 0) {\r\n    const { data, error } = await supabase\r\n      .from('inventory')\r\n      .insert([{\r\n        item_id: itemId,\r\n        quantity: quantityChange,\r\n        last_updated: new Date().toISOString()\r\n      }])\r\n      .select()\r\n      .single();\r\n    \r\n    if (error) throw error;\r\n    return data;\r\n  } else {\r\n    throw new Error('Cannot reduce quantity of non-existent inventory item');\r\n  }\r\n};\r\n\r\nexport const updateInventoryItem = async (\r\n  id: string, \r\n  updates: Partial<Inventory>\r\n): Promise<Inventory> => {\r\n  const updateData = {\r\n    ...updates,\r\n    last_updated: new Date().toISOString()\r\n  };\r\n  \r\n  const { data, error } = await supabase\r\n    .from('inventory')\r\n    .update(updateData)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const getLowStockItems = async (threshold: number = 10): Promise<Inventory[]> => {\r\n  const { data, error } = await supabase\r\n    .from('inventory')\r\n    .select(`\r\n      *,\r\n      items:item_id (\r\n        id,\r\n        name,\r\n        category_id,\r\n        unit\r\n      )\r\n    `)\r\n    .lte('quantity', threshold);\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/lib/services/purchaseService.ts"],"sourcesContent":["import { supabase } from '../supabase';\r\nimport { PurchaseOrder, PurchaseItem } from '@/models/types';\r\n\r\n// Purchase Order Operations\r\nexport const getPurchaseOrders = async (\r\n  status?: PurchaseOrder['status']\r\n): Promise<PurchaseOrder[]> => {\r\n  try {\r\n    let query = supabase.from('purchase_orders').select('*');\r\n    \r\n    if (status) {\r\n      query = query.eq('status', status);\r\n    }\r\n    \r\n    const { data, error } = await query.order('order_date', { ascending: false });\r\n    \r\n    if (error) {\r\n      console.error('Supabase error in getPurchaseOrders:', error);\r\n      \r\n      if (error.message.includes('does not exist')) {\r\n        console.warn('The purchase_orders table might not exist yet. Make sure to run database initialization scripts.');\r\n      }\r\n      \r\n      throw new Error(`Database error: ${error.message}`);\r\n    }\r\n    \r\n    return data || [];\r\n  } catch (err) {\r\n    console.error('Error in getPurchaseOrders:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getPurchaseOrderById = async (id: string): Promise<PurchaseOrder | null> => {\r\n  const { data, error } = await supabase\r\n    .from('purchase_orders')\r\n    .select('*')\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const createPurchaseOrder = async (\r\n  order: Omit<PurchaseOrder, 'id' | 'order_date'>\r\n): Promise<PurchaseOrder> => {\r\n  const newOrder = {\r\n    ...order,\r\n    order_date: new Date().toISOString(),\r\n    status: order.status || 'draft'\r\n  };\r\n\r\n  const { data, error } = await supabase\r\n    .from('purchase_orders')\r\n    .insert([newOrder])\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updatePurchaseOrder = async (\r\n  id: string, \r\n  updates: Partial<PurchaseOrder>\r\n): Promise<PurchaseOrder> => {\r\n  const { data, error } = await supabase\r\n    .from('purchase_orders')\r\n    .update(updates)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const deletePurchaseOrder = async (id: string): Promise<void> => {\r\n  const { error } = await supabase\r\n    .from('purchase_orders')\r\n    .delete()\r\n    .eq('id', id);\r\n  \r\n  if (error) throw error;\r\n};\r\n\r\n// Purchase Items Operations\r\nexport const getPurchaseItems = async (\r\n  purchaseOrderId: string\r\n): Promise<PurchaseItem[]> => {\r\n  const { data, error } = await supabase\r\n    .from('purchase_items')\r\n    .select(`\r\n      *,\r\n      items:item_id (\r\n        id,\r\n        name,\r\n        category_id,\r\n        unit\r\n      )\r\n    `)\r\n    .eq('purchase_order_id', purchaseOrderId);\r\n  \r\n  if (error) throw error;\r\n  return data || [];\r\n};\r\n\r\nexport const getPurchaseItemById = async (id: string): Promise<PurchaseItem | null> => {\r\n  const { data, error } = await supabase\r\n    .from('purchase_items')\r\n    .select(`\r\n      *,\r\n      items:item_id (\r\n        id,\r\n        name,\r\n        category_id,\r\n        unit\r\n      )\r\n    `)\r\n    .eq('id', id)\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const createPurchaseItem = async (\r\n  item: Omit<PurchaseItem, 'id'>\r\n): Promise<PurchaseItem> => {\r\n  const { data, error } = await supabase\r\n    .from('purchase_items')\r\n    .insert([item])\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const updatePurchaseItem = async (\r\n  id: string, \r\n  updates: Partial<PurchaseItem>\r\n): Promise<PurchaseItem> => {\r\n  const { data, error } = await supabase\r\n    .from('purchase_items')\r\n    .update(updates)\r\n    .eq('id', id)\r\n    .select()\r\n    .single();\r\n  \r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nexport const deletePurchaseItem = async (id: string): Promise<void> => {\r\n  const { error } = await supabase\r\n    .from('purchase_items')\r\n    .delete()\r\n    .eq('id', id);\r\n  \r\n  if (error) throw error;\r\n};\r\n\r\n// Generate Monthly Purchase Orders\r\nexport const generateMonthlyPurchaseOrder = async (\r\n  year: number,\r\n  month: number,\r\n  createdBy: string\r\n): Promise<PurchaseOrder> => {\r\n  try {\r\n    // 1. Get all maintenance requests for the month\r\n    const startDate = new Date(year, month - 1, 1).toISOString();\r\n    const endDate = new Date(year, month, 0).toISOString();\r\n    \r\n    // Get all maintenance requests for the specified month first\r\n    const { data: maintenanceRequests, error: requestsError } = await supabase\r\n      .from('maintenance_requests')\r\n      .select('id')\r\n      .gte('reported_date', startDate)\r\n      .lte('reported_date', endDate);\r\n    \r\n    if (requestsError) {\r\n      // If the table doesn't exist, create a purchase order without items\r\n      if (requestsError.message.includes('does not exist')) {\r\n        console.warn('Maintenance requests table does not exist yet. Creating empty purchase order.');\r\n        return createEmptyPurchaseOrder(year, month, createdBy);\r\n      }\r\n      throw requestsError;\r\n    }\r\n    \r\n    if (!maintenanceRequests || maintenanceRequests.length === 0) {\r\n      console.log('No maintenance requests found for the specified month. Creating empty purchase order.');\r\n      return createEmptyPurchaseOrder(year, month, createdBy);\r\n    }\r\n    \r\n    // Get maintenance items for these requests\r\n    const maintenanceIds = maintenanceRequests.map(req => req.id);\r\n    const { data: maintenanceItems, error: itemsError } = await supabase\r\n      .from('maintenance_items')\r\n      .select('*')\r\n      .in('maintenance_id', maintenanceIds);\r\n    \r\n    if (itemsError) {\r\n      // If the table doesn't exist, create a purchase order without items\r\n      if (itemsError.message.includes('does not exist')) {\r\n        console.warn('Maintenance items table does not exist yet. Creating empty purchase order.');\r\n        return createEmptyPurchaseOrder(year, month, createdBy);\r\n      }\r\n      throw itemsError;\r\n    }\r\n    \r\n    if (!maintenanceItems || maintenanceItems.length === 0) {\r\n      console.log('No maintenance items found for the specified month. Creating empty purchase order.');\r\n      return createEmptyPurchaseOrder(year, month, createdBy);\r\n    }\r\n    \r\n    // 2. Group items by item_id and sum quantities\r\n    const itemQuantities: Record<string, number> = {};\r\n    \r\n    maintenanceItems.forEach(item => {\r\n      if (!itemQuantities[item.item_id]) {\r\n        itemQuantities[item.item_id] = 0;\r\n      }\r\n      itemQuantities[item.item_id] += item.quantity_needed;\r\n    });\r\n    \r\n    // 3. Create a new purchase order\r\n    const { data: purchaseOrder, error: orderError } = await supabase\r\n      .from('purchase_orders')\r\n      .insert([{\r\n        order_date: new Date().toISOString(),\r\n        status: 'draft',\r\n        created_by: createdBy,\r\n        notes: `Auto-generated order for ${year}-${month.toString().padStart(2, '0')}`\r\n      }])\r\n      .select()\r\n      .single();\r\n    \r\n    if (orderError) throw orderError;\r\n    \r\n    // 4. Create purchase items for each item type\r\n    if (Object.keys(itemQuantities).length > 0) {\r\n      const purchaseItems = Object.entries(itemQuantities).map(([itemId, quantity]) => ({\r\n        purchase_order_id: purchaseOrder.id,\r\n        item_id: itemId,\r\n        quantity: quantity\r\n      }));\r\n      \r\n      const { error: purchaseItemsError } = await supabase\r\n        .from('purchase_items')\r\n        .insert(purchaseItems);\r\n      \r\n      if (purchaseItemsError) throw purchaseItemsError;\r\n    }\r\n    \r\n    return purchaseOrder;\r\n  } catch (error: any) {\r\n    console.error('Error generating monthly purchase order:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Helper function to create an empty purchase order when no maintenance items are found\r\nconst createEmptyPurchaseOrder = async (\r\n  year: number,\r\n  month: number,\r\n  createdBy: string\r\n): Promise<PurchaseOrder> => {\r\n  const { data: purchaseOrder, error: orderError } = await supabase\r\n    .from('purchase_orders')\r\n    .insert([{\r\n      order_date: new Date().toISOString(),\r\n      status: 'draft',\r\n      created_by: createdBy,\r\n      notes: `Auto-generated order for ${year}-${month.toString().padStart(2, '0')} (No maintenance items found)`\r\n    }])\r\n    .select()\r\n    .single();\r\n  \r\n  if (orderError) throw orderError;\r\n  return purchaseOrder;\r\n};\r\n\r\n// Process Received Items\r\nexport const processReceivedItems = async (\r\n  purchaseOrderId: string, \r\n  receivedItems: Array<{ id: string, received_quantity: number }>\r\n): Promise<void> => {\r\n  // Start a transaction to update both purchase items and inventory\r\n  for (const item of receivedItems) {\r\n    // 1. Update the purchase item\r\n    const { data: purchaseItem, error: updateError } = await supabase\r\n      .from('purchase_items')\r\n      .update({ received_quantity: item.received_quantity })\r\n      .eq('id', item.id)\r\n      .select('*')\r\n      .single();\r\n    \r\n    if (updateError) throw updateError;\r\n    \r\n    // 2. Update inventory\r\n    // First, get the current inventory for this item\r\n    const { data: currentInventory, error: inventoryError } = await supabase\r\n      .from('inventory')\r\n      .select('*')\r\n      .eq('item_id', purchaseItem.item_id)\r\n      .single();\r\n    \r\n    if (inventoryError && inventoryError.code !== 'PGRST116') {\r\n      throw inventoryError;\r\n    }\r\n    \r\n    // If inventory entry exists, update it\r\n    if (currentInventory) {\r\n      const { error: updateInventoryError } = await supabase\r\n        .from('inventory')\r\n        .update({\r\n          quantity: currentInventory.quantity + item.received_quantity,\r\n          last_updated: new Date().toISOString()\r\n        })\r\n        .eq('id', currentInventory.id);\r\n      \r\n      if (updateInventoryError) throw updateInventoryError;\r\n    } \r\n    // If no inventory entry exists, create one\r\n    else {\r\n      const { error: createInventoryError } = await supabase\r\n        .from('inventory')\r\n        .insert([{\r\n          item_id: purchaseItem.item_id,\r\n          quantity: item.received_quantity,\r\n          unit_price: purchaseItem.unit_price,\r\n          last_updated: new Date().toISOString()\r\n        }]);\r\n      \r\n      if (createInventoryError) throw createInventoryError;\r\n    }\r\n  }\r\n  \r\n  // 3. Update the purchase order status to 'received'\r\n  const { error: orderUpdateError } = await supabase\r\n    .from('purchase_orders')\r\n    .update({ status: 'received' })\r\n    .eq('id', purchaseOrderId);\r\n  \r\n  if (orderUpdateError) throw orderUpdateError;\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MohammedAlabdali/HousingMaintenance/src/app/reports/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { getMaintenanceRequests, getMonthlyMaintenanceRequests } from '@/lib/services/maintenanceService';\r\nimport { getLowStockItems } from '@/lib/services/inventoryService';\r\nimport { getPurchaseOrders } from '@/lib/services/purchaseService';\r\nimport { MaintenanceRequest, Inventory, PurchaseOrder } from '@/models/types';\r\n\r\n// Extended inventory type with item details\r\ntype InventoryWithItem = Inventory & {\r\n  items: {\r\n    id: string;\r\n    name: string;\r\n    category_id: string;\r\n    unit: string;\r\n  };\r\n};\r\n\r\nexport default function ReportsPage() {\r\n  const [timeframe, setTimeframe] = useState<'month' | 'quarter' | 'year'>('month');\r\n  const [maintenanceStats, setMaintenanceStats] = useState({\r\n    total: 0,\r\n    pending: 0,\r\n    inProgress: 0,\r\n    completed: 0,\r\n    completionRate: 0,\r\n    averageCompletionDays: 0\r\n  });\r\n  const [inventoryStats, setInventoryStats] = useState({\r\n    lowStockCount: 0,\r\n    lowStockItems: [] as InventoryWithItem[]\r\n  });\r\n  const [purchaseStats, setPurchaseStats] = useState({\r\n    total: 0,\r\n    totalAmount: 0,\r\n    pending: 0,\r\n    completed: 0\r\n  });\r\n  \r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  \r\n  // Get the current date and previous periods\r\n  const currentDate = new Date();\r\n  const currentYear = currentDate.getFullYear();\r\n  const currentMonth = currentDate.getMonth();\r\n  \r\n  // Calculate date ranges based on selected timeframe\r\n  const getDateRange = () => {\r\n    let startDate = new Date();\r\n    \r\n    if (timeframe === 'month') {\r\n      startDate = new Date(currentYear, currentMonth, 1);\r\n    } else if (timeframe === 'quarter') {\r\n      const quarterStartMonth = Math.floor(currentMonth / 3) * 3;\r\n      startDate = new Date(currentYear, quarterStartMonth, 1);\r\n    } else if (timeframe === 'year') {\r\n      startDate = new Date(currentYear, 0, 1);\r\n    }\r\n    \r\n    return {\r\n      start: startDate,\r\n      end: currentDate\r\n    };\r\n  };\r\n  \r\n  // Load report data based on the selected timeframe\r\n  useEffect(() => {\r\n    const fetchReportData = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      try {\r\n        const dateRange = getDateRange();\r\n        \r\n        // Fetch maintenance data\r\n        const maintenanceData = await getMaintenanceRequests();\r\n        \r\n        // Filter maintenance requests by date range\r\n        const filteredMaintenance = maintenanceData.filter(request => {\r\n          const requestDate = new Date(request.reported_date);\r\n          return requestDate >= dateRange.start && requestDate <= dateRange.end;\r\n        });\r\n        \r\n        // Calculate maintenance statistics\r\n        const totalRequests = filteredMaintenance.length;\r\n        const pendingRequests = filteredMaintenance.filter(req => \r\n          req.status === 'pending' || req.status === 'approved'\r\n        ).length;\r\n        const inProgressRequests = filteredMaintenance.filter(req => req.status === 'in_progress').length;\r\n        const completedRequests = filteredMaintenance.filter(req => req.status === 'completed').length;\r\n        const completionRate = totalRequests > 0 ? (completedRequests / totalRequests) * 100 : 0;\r\n        \r\n        // Calculate average completion time in days\r\n        let totalCompletionDays = 0;\r\n        let completedRequestsWithDates = 0;\r\n        \r\n        filteredMaintenance.forEach(req => {\r\n          if (req.status === 'completed' && req.completion_date) {\r\n            const reportedDate = new Date(req.reported_date);\r\n            const completedDate = new Date(req.completion_date);\r\n            const daysToComplete = Math.floor((completedDate.getTime() - reportedDate.getTime()) / (1000 * 60 * 60 * 24));\r\n            \r\n            totalCompletionDays += daysToComplete;\r\n            completedRequestsWithDates++;\r\n          }\r\n        });\r\n        \r\n        const averageCompletionDays = completedRequestsWithDates > 0 \r\n          ? Math.round(totalCompletionDays / completedRequestsWithDates) \r\n          : 0;\r\n        \r\n        setMaintenanceStats({\r\n          total: totalRequests,\r\n          pending: pendingRequests,\r\n          inProgress: inProgressRequests,\r\n          completed: completedRequests,\r\n          completionRate: parseFloat(completionRate.toFixed(1)),\r\n          averageCompletionDays\r\n        });\r\n        \r\n        // Fetch low stock items\r\n        const lowStock = await getLowStockItems(5);\r\n        setInventoryStats({\r\n          lowStockCount: lowStock.length,\r\n          lowStockItems: lowStock as InventoryWithItem[]\r\n        });\r\n        \r\n        // Fetch purchase orders\r\n        const purchaseOrders = await getPurchaseOrders();\r\n        \r\n        // Filter purchase orders by date range\r\n        const filteredPurchases = purchaseOrders.filter(order => {\r\n          const orderDate = new Date(order.order_date);\r\n          return orderDate >= dateRange.start && orderDate <= dateRange.end;\r\n        });\r\n        \r\n        const totalOrders = filteredPurchases.length;\r\n        const pendingOrders = filteredPurchases.filter(order => \r\n          order.status === 'draft' || order.status === 'submitted' || order.status === 'approved' || order.status === 'ordered'\r\n        ).length;\r\n        const completedOrders = filteredPurchases.filter(order => \r\n          order.status === 'received' || order.status === 'completed'\r\n        ).length;\r\n        \r\n        // Calculate total purchase amount\r\n        const totalAmount = filteredPurchases.reduce((sum, order) => {\r\n          return sum + (order.total_amount || 0);\r\n        }, 0);\r\n        \r\n        setPurchaseStats({\r\n          total: totalOrders,\r\n          totalAmount,\r\n          pending: pendingOrders,\r\n          completed: completedOrders\r\n        });\r\n      } catch (err) {\r\n        // Improved error handling with proper formatting\r\n        const errorMessage = err instanceof Error ? err.message : 'An unknown error occurred';\r\n        console.error('Error fetching report data:', errorMessage);\r\n        setError('حدث خطأ أثناء تحميل بيانات التقارير. الرجاء المحاولة مرة أخرى.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchReportData();\r\n  }, [timeframe]);\r\n  \r\n  return (\r\n    <div className=\"container mx-auto bg-gray-50 dark:bg-gray-900 min-h-screen p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-6 dark:text-white\">التقارير والإحصائيات</h1>\r\n      \r\n      {error && (\r\n        <div className=\"bg-red-100 border-r-4 border-red-500 text-red-700 p-4 mb-6 rounded-md dark:bg-red-900/30 dark:border-red-800 dark:text-red-400\">\r\n          <p>{error}</p>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Time Period Selection */}\r\n      <div className=\"bg-white shadow-md rounded-lg p-4 mb-8 dark:bg-gray-800\">\r\n        <h2 className=\"text-lg font-semibold mb-4 dark:text-white\">الفترة الزمنية</h2>\r\n        <div className=\"flex gap-4\">\r\n          <button\r\n            onClick={() => setTimeframe('month')}\r\n            className={`px-4 py-2 rounded-md ${\r\n              timeframe === 'month' \r\n                ? 'bg-teal-600 text-white dark:bg-teal-700' \r\n                : 'bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 dark:text-gray-200'\r\n            }`}\r\n          >\r\n            شهري\r\n          </button>\r\n          <button\r\n            onClick={() => setTimeframe('quarter')}\r\n            className={`px-4 py-2 rounded-md ${\r\n              timeframe === 'quarter' \r\n                ? 'bg-teal-600 text-white dark:bg-teal-700' \r\n                : 'bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 dark:text-gray-200'\r\n            }`}\r\n          >\r\n            ربع سنوي\r\n          </button>\r\n          <button\r\n            onClick={() => setTimeframe('year')}\r\n            className={`px-4 py-2 rounded-md ${\r\n              timeframe === 'year' \r\n                ? 'bg-teal-600 text-white dark:bg-teal-700' \r\n                : 'bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 dark:text-gray-200'\r\n            }`}\r\n          >\r\n            سنوي\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {loading ? (\r\n        <div className=\"text-center py-10 dark:text-gray-300\">\r\n          <p className=\"text-lg\">جاري تحميل البيانات...</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* Maintenance Statistics */}\r\n          <div className=\"bg-white shadow-md rounded-lg overflow-hidden mb-8 dark:bg-gray-800\">\r\n            <div className=\"bg-teal-50 p-4 border-b border-teal-100 dark:bg-teal-900/20 dark:border-teal-900/30\">\r\n              <div className=\"flex justify-between items-center\">\r\n                <h2 className=\"text-lg font-semibold text-teal-800 dark:text-teal-300\">إحصائيات طلبات الصيانة</h2>\r\n                <Link href=\"/reports/maintenance\" className=\"text-teal-600 hover:underline dark:text-teal-400\">\r\n                  عرض التقرير المفصل\r\n                </Link>\r\n              </div>\r\n            </div>\r\n            <div className=\"p-6\">\r\n              <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4\">\r\n                <div className=\"text-center p-4 bg-gray-50 rounded-lg dark:bg-gray-700\">\r\n                  <p className=\"text-sm text-gray-500 mb-1 dark:text-gray-400\">إجمالي الطلبات</p>\r\n                  <p className=\"text-2xl font-bold dark:text-white\">{maintenanceStats.total}</p>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-yellow-50 rounded-lg dark:bg-yellow-900/20\">\r\n                  <p className=\"text-sm text-gray-500 mb-1 dark:text-gray-400\">قيد الانتظار</p>\r\n                  <p className=\"text-2xl font-bold text-yellow-700 dark:text-yellow-300\">{maintenanceStats.pending}</p>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-blue-50 rounded-lg dark:bg-blue-900/20\">\r\n                  <p className=\"text-sm text-gray-500 mb-1 dark:text-gray-400\">قيد التنفيذ</p>\r\n                  <p className=\"text-2xl font-bold text-blue-700 dark:text-blue-300\">{maintenanceStats.inProgress}</p>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-green-50 rounded-lg dark:bg-green-900/20\">\r\n                  <p className=\"text-sm text-gray-500 mb-1 dark:text-gray-400\">مكتملة</p>\r\n                  <p className=\"text-2xl font-bold text-green-700 dark:text-green-300\">{maintenanceStats.completed}</p>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-purple-50 rounded-lg dark:bg-purple-900/20\">\r\n                  <p className=\"text-sm text-gray-500 mb-1 dark:text-gray-400\">معدل الإنجاز</p>\r\n                  <p className=\"text-2xl font-bold text-purple-700 dark:text-purple-300\">{maintenanceStats.completionRate}%</p>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-indigo-50 rounded-lg dark:bg-indigo-900/20\">\r\n                  <p className=\"text-sm text-gray-500 mb-1 dark:text-gray-400\">متوسط مدة الإنجاز</p>\r\n                  <p className=\"text-2xl font-bold text-indigo-700 dark:text-indigo-300\">{maintenanceStats.averageCompletionDays} يوم</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Inventory and Purchase Statistics */}\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8\">\r\n            {/* Inventory Status */}\r\n            <div className=\"bg-white shadow-md rounded-lg overflow-hidden dark:bg-gray-800\">\r\n              <div className=\"bg-blue-50 p-4 border-b border-blue-100 dark:bg-blue-900/20 dark:border-blue-900/30\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <h2 className=\"text-lg font-semibold text-blue-800 dark:text-blue-300\">حالة المخزون</h2>\r\n                  <Link href=\"/inventory\" className=\"text-blue-600 hover:underline dark:text-blue-400\">\r\n                    إدارة المخزون\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n              <div className=\"p-6\">\r\n                <div className=\"mb-6\">\r\n                  <div className=\"flex justify-between mb-2\">\r\n                    <h3 className=\"font-medium dark:text-white\">الأصناف منخفضة المخزون</h3>\r\n                    <span className=\"bg-red-100 text-red-800 px-2 py-1 rounded-full text-xs dark:bg-red-900/30 dark:text-red-300\">\r\n                      {inventoryStats.lowStockCount} صنف\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  {inventoryStats.lowStockItems.length > 0 ? (\r\n                    <ul className=\"divide-y dark:divide-gray-700\">\r\n                      {inventoryStats.lowStockItems.slice(0, 5).map(item => (\r\n                        <li key={item.id} className=\"py-2 flex justify-between dark:text-gray-300\">\r\n                          <span>{item.items.name}</span>\r\n                          <span className=\"font-bold text-red-600 dark:text-red-400\">{item.quantity} {item.items.unit}</span>\r\n                        </li>\r\n                      ))}\r\n                      {inventoryStats.lowStockItems.length > 5 && (\r\n                        <li className=\"py-2 text-center text-blue-600 hover:underline dark:text-blue-400\">\r\n                          <Link href=\"/inventory?showLowStock=true\">\r\n                            عرض الكل ({inventoryStats.lowStockItems.length})\r\n                          </Link>\r\n                        </li>\r\n                      )}\r\n                    </ul>\r\n                  ) : (\r\n                    <p className=\"text-gray-500 text-center py-4 dark:text-gray-400\">\r\n                      لا توجد أصناف منخفضة المخزون\r\n                    </p>\r\n                  )}\r\n                </div>\r\n                \r\n                <Link href=\"/inventory/report\" className=\"btn bg-blue-600 hover:bg-blue-700 text-white w-full py-2 px-4 rounded-md block text-center dark:bg-blue-700 dark:hover:bg-blue-600\">\r\n                  تقرير المخزون الشامل\r\n                </Link>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Purchase Orders Status */}\r\n            <div className=\"bg-white shadow-md rounded-lg overflow-hidden dark:bg-gray-800\">\r\n              <div className=\"bg-purple-50 p-4 border-b border-purple-100 dark:bg-purple-900/20 dark:border-purple-900/30\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <h2 className=\"text-lg font-semibold text-purple-800 dark:text-purple-300\">حالة المشتريات</h2>\r\n                  <Link href=\"/purchase-orders\" className=\"text-purple-600 hover:underline dark:text-purple-400\">\r\n                    عرض طلبات الشراء\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n              <div className=\"p-6\">\r\n                <div className=\"grid grid-cols-2 gap-4 mb-6\">\r\n                  <div className=\"text-center p-4 bg-gray-50 rounded-lg dark:bg-gray-700\">\r\n                    <p className=\"text-sm text-gray-500 mb-1 dark:text-gray-400\">إجمالي الطلبات</p>\r\n                    <p className=\"text-2xl font-bold dark:text-white\">{purchaseStats.total}</p>\r\n                  </div>\r\n                  <div className=\"text-center p-4 bg-green-50 rounded-lg dark:bg-green-900/20\">\r\n                    <p className=\"text-sm text-gray-500 mb-1 dark:text-gray-400\">المبلغ الإجمالي</p>\r\n                    <p className=\"text-2xl font-bold text-green-700 dark:text-green-300\">{purchaseStats.totalAmount.toLocaleString()} ريال</p>\r\n                  </div>\r\n                  <div className=\"text-center p-4 bg-yellow-50 rounded-lg dark:bg-yellow-900/20\">\r\n                    <p className=\"text-sm text-gray-500 mb-1 dark:text-gray-400\">قيد الإجراء</p>\r\n                    <p className=\"text-2xl font-bold text-yellow-700 dark:text-yellow-300\">{purchaseStats.pending}</p>\r\n                  </div>\r\n                  <div className=\"text-center p-4 bg-blue-50 rounded-lg dark:bg-blue-900/20\">\r\n                    <p className=\"text-sm text-gray-500 mb-1 dark:text-gray-400\">مكتملة</p>\r\n                    <p className=\"text-2xl font-bold text-blue-700 dark:text-blue-300\">{purchaseStats.completed}</p>\r\n                  </div>\r\n                </div>\r\n                \r\n                <Link href=\"/reports/purchases\" className=\"btn bg-purple-600 hover:bg-purple-700 text-white w-full py-2 px-4 rounded-md block text-center dark:bg-purple-700 dark:hover:bg-purple-600\">\r\n                  تقرير المشتريات الشامل\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Monthly Reports Links */}\r\n          <div className=\"bg-white shadow-md rounded-lg overflow-hidden mb-8 dark:bg-gray-800\">\r\n            <div className=\"p-4 border-b dark:border-gray-700\">\r\n              <h2 className=\"text-lg font-semibold dark:text-white\">التقارير الشهرية</h2>\r\n            </div>\r\n            <div className=\"p-6\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                <Link \r\n                  href={`/reports/monthly/${currentYear}/${currentMonth + 1}/maintenance`}\r\n                  className=\"p-4 border rounded-lg bg-gray-50 hover:bg-gray-100 flex flex-col items-center dark:bg-gray-700 dark:border-gray-600 dark:hover:bg-gray-600\"\r\n                >\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8 text-teal-600 mb-2 dark:text-teal-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                  </svg>\r\n                  <span className=\"text-center font-medium dark:text-white\">تقرير الصيانة الشهري</span>\r\n                </Link>\r\n                \r\n                <Link \r\n                  href={`/reports/monthly/${currentYear}/${currentMonth + 1}/inventory`}\r\n                  className=\"p-4 border rounded-lg bg-gray-50 hover:bg-gray-100 flex flex-col items-center dark:bg-gray-700 dark:border-gray-600 dark:hover:bg-gray-600\"\r\n                >\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8 text-blue-600 mb-2 dark:text-blue-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\" />\r\n                  </svg>\r\n                  <span className=\"text-center font-medium dark:text-white\">تقرير حركة المخزون</span>\r\n                </Link>\r\n                \r\n                <Link \r\n                  href={`/reports/monthly/${currentYear}/${currentMonth + 1}/purchases`}\r\n                  className=\"p-4 border rounded-lg bg-gray-50 hover:bg-gray-100 flex flex-col items-center dark:bg-gray-700 dark:border-gray-600 dark:hover:bg-gray-600\"\r\n                >\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8 text-purple-600 mb-2 dark:text-purple-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n                  </svg>\r\n                  <span className=\"text-center font-medium dark:text-white\">تقرير المشتريات الشهري</span>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Export Reports */}\r\n          <div className=\"bg-white shadow-md rounded-lg overflow-hidden dark:bg-gray-800\">\r\n            <div className=\"p-4 border-b dark:border-gray-700\">\r\n              <h2 className=\"text-lg font-semibold dark:text-white\">تصدير التقارير</h2>\r\n            </div>\r\n            <div className=\"p-6\">\r\n              <p className=\"text-gray-600 mb-4 dark:text-gray-400\">\r\n                يمكنك تصدير التقارير بصيغ مختلفة للطباعة أو المشاركة أو الأرشفة.\r\n              </p>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                <button className=\"btn bg-green-600 hover:bg-green-700 text-white py-2 px-4 rounded-md dark:bg-green-700 dark:hover:bg-green-600\">\r\n                  تصدير إلى Excel\r\n                </button>\r\n                <button className=\"btn bg-red-600 hover:bg-red-700 text-white py-2 px-4 rounded-md dark:bg-red-700 dark:hover:bg-red-600\">\r\n                  تصدير إلى PDF\r\n                </button>\r\n                <button className=\"btn bg-gray-600 hover:bg-gray-700 text-white py-2 px-4 rounded-md dark:bg-gray-700 dark:hover:bg-gray-600\">\r\n                  طباعة التقرير\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}